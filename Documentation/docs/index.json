{
  "Advanced/Connection/ErrorHandling.html": {
    "href": "Advanced/Connection/ErrorHandling.html",
    "title": "Error Handling | DbFacade",
    "keywords": "Error Handling While DbResponse objects provide an Error property for Exceptions thrown in the method execution pipeline, the connection object also provides a means of capturing and handling exceptions. Why Use this option? If you have an external error logging call that captures application errors this is a convienient way to capture those errors upfront without having to replicate for each call on the DomainFacade file. Use Cases internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { ... //Handle any Error //Generally the most common one to use protected override void OnError(Exception ex) { //Run custom logic to log error } //Handle method Validation Errors protected override void OnValidationError<TDbParams>(ValidationException<TDbParams> ex) { //Run custom logic to log error } //Handle SQL execution Errors protected override void OnSQLExecutionError(SQLExecutionException ex) { //Run custom logic to log error } //Handle rare Facade Error. //This shouldn't normally be hit all that often when an error occurs, so this is best used in debug mode. protected override void OnFacadeError(FacadeException ex) { //Run custom logic to log error } ... } If your code Executes methods asynchronsly you will need to define the async error handler(s). internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { ... //Handle any Error //Generally the most common one to use protected override async Task OnErrorAsync(Exception ex) { //Run custom logic to log error } //Handle method Validation Errors protected override async Task OnValidationErrorAsync<TDbParams>(ValidationException<TDbParams> ex) { //Run custom logic to log error } //Handle SQL execution Errors protected override async Task OnSQLExecutionErrorAsync(SQLExecutionException ex) { //Run custom logic to log error } //Handle rare Facade Error. //This shouldn't normally be hit all that often when an error occurs, so this is best used in debug mode. protected override async Task OnFacadeErrorAsync(FacadeException ex) { //Run custom logic to log error } ... } Recomendation Generally you should only need to override the OnError / OnErrorAsync methods to do the bulk of error handling. But if you need to run specialized error handling for SQL exceptions or validation errors, or if you only want to handle specific types of exceptions then the other methods are available."
  },
  "Advanced/Connection/IDbCommandConfig.html": {
    "href": "Advanced/Connection/IDbCommandConfig.html",
    "title": "Command Configurations | DbFacade",
    "keywords": "Command Configurations Fetch Command Add a SQL stored procedure command definition to class MyProjectSQLConnection as a static property as follows public static IDbCommandConfig GetSampleData = DbCommandConfigFactory<MyProjectSQLConnection>.CreateFetchCommand(\"[dbo].[SampleData_Get]\", \"Get Sample Data\"); Transaction Command If you have a stored procedure that you want to execute as a transaction then you can declare it as follows. NOTE Transaction commands parameter validation is enforced on methods. public static IDbCommandConfig GetSampleData = DbCommandConfigFactory<MyProjectSQLConnection>.CreateTransactionCommand(\"[dbo].[My_Transaction]\", \"My Transaction); WARNING Some Db connection types do not support transations. Please consult appropriate ADO.NET documentation for more information. If transactions are not supported then use a fetch command instead"
  },
  "Advanced/Connection/Types.html": {
    "href": "Advanced/Connection/Types.html",
    "title": "Types | DbFacade",
    "keywords": "Types DbFacade supports diferent connection types depending on the type of database you are connecting to. Built-in Types SQL/SQL Server internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { ... } SQLite internal class MyProjectSQLiteConnection : SqLiteConnectionConfig<MyProjectSQLiteConnection> { ... } OleDb internal class MyProjectOleDbConnection : OleDbConnectionConfig<MyProjectOleDbConnection> { ... } Odbc internal class MyProjectOdbcConnection : OdbcConnectionConfig<MyProjectOdbcConnection> { ... } Oracle internal class MyProjectOracleConnection : OracleConnectionConfig<MyProjectOracleConnection> { ... } Custom Connection Type If you are trying to connect to a database type that is not listed above you define your own connection type. Create Base abstract class public abstract class CustomConnectionConfig<TDbConnectionConfig> : DbConnectionConfig<CustomDataReader, CustomConnection, CustomCommand, CustomTransaction, CustomParameter, TDbConnectionConfig> where TDbConnectionConfig : DbConnectionConfigBase {} Note to extend DbConnectionConfig, the declared generic types must impliment ADO.NET classes as follows Generic Type Must extend ADO.NET class CustomDataReader DbDataReader CustomConnection DbConnection CustomCommand DbCommand CustomTransaction DbTransaction CustomParameter DbParameter Create the Connection class internal class MyProjectCustomConnection : CustomConnectionConfig<MyProjectCustomConnection> { ... }"
  },
  "Advanced/index.html": {
    "href": "Advanced/index.html",
    "title": "Advanced | DbFacade",
    "keywords": "Advanced Please read the sections for more advanced use of the library Connection Types Error Handling Command Configurations Methods Types Parameters Validation"
  },
  "Advanced/Methods/Parameters.html": {
    "href": "Advanced/Methods/Parameters.html",
    "title": "Parameters | DbFacade",
    "keywords": "Parameters Input Parameters public static readonly IDbCommandMethod<Guid,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<Guid,SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m)); }); Output Parameters public static readonly IDbCommandMethod<Guid,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<Guid,SampleDataModel>( p => { p.Add(\"MyOutputGuidParam\", p.Factory.CreateOutputGuid()); }); Non class Parameters public static readonly IDbCommandMethod<Guid,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<Guid,SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m)); }); public static readonly IDbCommandMethod<(Guid guid, string str),SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<(Guid guid, string str),SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.guid)); p.Add(\"String\", p.Factory.Create(m => m.str)); }); public static readonly IDbCommandMethod<(Guid guid, string[] strArr),SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<(Guid guid, string str),SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.guid)); p.Add(\"StringArr\", p.Factory.Create(m => string.Join(\",\",m.strArr))); });"
  },
  "Advanced/Methods/Types.html": {
    "href": "Advanced/Methods/Types.html",
    "title": "Types | DbFacade",
    "keywords": "Types With no expected Data No input parameters public static readonly IDbCommandMethod SomeParameterlessMethod = AdventureWorksConnection.SomeParameterlessMethod.CreateMethod(); With input parameters public static readonly IDbCommandMethod<GetSampleDataParameters> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<GetSampleDataParameters>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.Guid)); p.Add(\"String\", p.Factory.Create(m => m.String)); }); With data expected No input parameters public static readonly IParameterlessDbCommandMethod<SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateParameterlessMethod<SampleDataModel>(); With input parameters public static readonly IDbCommandMethod<GetSampleDataParameters,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<GetSampleDataParameters,SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.Guid)); p.Add(\"String\", p.Factory.Create(m => m.String)); });"
  },
  "Advanced/Methods/Validation.html": {
    "href": "Advanced/Methods/Validation.html",
    "title": "Validation | DbFacade",
    "keywords": "Validation public static readonly IDbCommandMethod<GetSampleDataParameters,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<GetSampleDataParameters,SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.Guid)); p.Add(\"String\", p.Factory.Create(m => m.String)); }, v => { v.Add(v.Rules.Required(m => m.String)); }); For doumentation on all available rules see Rules"
  },
  "api/DbFacade.DataLayer.CommandConfig.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.html",
    "title": "Namespace DbFacade.DataLayer.CommandConfig | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.CommandConfig Interfaces IDbCommandMethod IDbCommandMethod<TDbParams> IDbCommandMethod<TDbParams, TDbDataModel> IParameterlessDbCommandMethod<TDbDataModel>"
  },
  "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod.html",
    "title": "Interface IDbCommandMethod | DbFacade",
    "keywords": "Interface IDbCommandMethod Namespace : DbFacade.DataLayer.CommandConfig Assembly : DbFacade.dll Syntax public interface IDbCommandMethod Methods | Improve this Doc View Source Execute() Executes this instance. Declaration IDbResponse Execute() Returns Type Description IDbResponse | Improve this Doc View Source ExecuteAsync() Executes the asynchronous. Declaration Task<IDbResponse> ExecuteAsync() Returns Type Description System.Threading.Tasks.Task < IDbResponse > | Improve this Doc View Source Mock(Int32, Action<IDictionary<String, Object>>) Mocks the specified return value. Declaration IDbResponse Mock(int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description IDbResponse | Improve this Doc View Source MockAsync(Int32, Action<IDictionary<String, Object>>) Mocks the asynchronous. Declaration Task<IDbResponse> MockAsync(int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description System.Threading.Tasks.Task < IDbResponse >"
  },
  "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod-1.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod-1.html",
    "title": "Interface IDbCommandMethod<TDbParams> | DbFacade",
    "keywords": "Interface IDbCommandMethod<TDbParams> Namespace : DbFacade.DataLayer.CommandConfig Assembly : DbFacade.dll Syntax public interface IDbCommandMethod<TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. Methods | Improve this Doc View Source Execute(TDbParams) Executes the specified parameters. Declaration IDbResponse Execute(TDbParams parameters) Parameters Type Name Description TDbParams parameters The parameters. Returns Type Description IDbResponse | Improve this Doc View Source ExecuteAsync(TDbParams) Executes the asynchronous. Declaration Task<IDbResponse> ExecuteAsync(TDbParams parameters) Parameters Type Name Description TDbParams parameters The parameters. Returns Type Description System.Threading.Tasks.Task < IDbResponse > | Improve this Doc View Source Mock(TDbParams, Int32, Action<IDictionary<String, Object>>) Mocks the specified parameters. Declaration IDbResponse Mock(TDbParams parameters, int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description TDbParams parameters The parameters. System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description IDbResponse | Improve this Doc View Source MockAsync(TDbParams, Int32, Action<IDictionary<String, Object>>) Mocks the asynchronous. Declaration Task<IDbResponse> MockAsync(TDbParams parameters, int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description TDbParams parameters The parameters. System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description System.Threading.Tasks.Task < IDbResponse >"
  },
  "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod-2.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod-2.html",
    "title": "Interface IDbCommandMethod<TDbParams, TDbDataModel> | DbFacade",
    "keywords": "Interface IDbCommandMethod<TDbParams, TDbDataModel> Namespace : DbFacade.DataLayer.CommandConfig Assembly : DbFacade.dll Syntax public interface IDbCommandMethod<TDbParams, TDbDataModel> where TDbDataModel : DbDataModel Type Parameters Name Description TDbParams The type of the database parameters. TDbDataModel The type of the database data model. Methods | Improve this Doc View Source Execute(TDbParams) Executes the specified parameters. Declaration IDbResponse<TDbDataModel> Execute(TDbParams parameters) Parameters Type Name Description TDbParams parameters The parameters. Returns Type Description IDbResponse <TDbDataModel> | Improve this Doc View Source ExecuteAsync(TDbParams) Executes the asynchronous. Declaration Task<IDbResponse<TDbDataModel>> ExecuteAsync(TDbParams parameters) Parameters Type Name Description TDbParams parameters The parameters. Returns Type Description System.Threading.Tasks.Task < IDbResponse <TDbDataModel>> | Improve this Doc View Source Mock(TDbParams, Int32, Action<IDictionary<String, Object>>) Mocks the specified parameters. Declaration IDbResponse<TDbDataModel> Mock(TDbParams parameters, int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description TDbParams parameters The parameters. System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description IDbResponse <TDbDataModel> | Improve this Doc View Source Mock<T>(TDbParams, IEnumerable<T>, Int32, Action<IDictionary<String, Object>>) Mocks the specified parameters. Declaration IDbResponse<TDbDataModel> Mock<T>(TDbParams parameters, IEnumerable<T> responseData, int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description TDbParams parameters The parameters. System.Collections.Generic.IEnumerable <T> responseData The response data. System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description IDbResponse <TDbDataModel> Type Parameters Name Description T | Improve this Doc View Source MockAsync(TDbParams, Int32, Action<IDictionary<String, Object>>) Mocks the asynchronous. Declaration Task<IDbResponse<TDbDataModel>> MockAsync(TDbParams parameters, int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description TDbParams parameters The parameters. System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description System.Threading.Tasks.Task < IDbResponse <TDbDataModel>> | Improve this Doc View Source MockAsync<T>(TDbParams, IEnumerable<T>, Int32, Action<IDictionary<String, Object>>) Mocks the asynchronous. Declaration Task<IDbResponse<TDbDataModel>> MockAsync<T>(TDbParams parameters, IEnumerable<T> responseData, int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description TDbParams parameters The parameters. System.Collections.Generic.IEnumerable <T> responseData The response data. System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description System.Threading.Tasks.Task < IDbResponse <TDbDataModel>> Type Parameters Name Description T"
  },
  "api/DbFacade.DataLayer.CommandConfig.IParameterlessDbCommandMethod-1.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.IParameterlessDbCommandMethod-1.html",
    "title": "Interface IParameterlessDbCommandMethod<TDbDataModel> | DbFacade",
    "keywords": "Interface IParameterlessDbCommandMethod<TDbDataModel> Namespace : DbFacade.DataLayer.CommandConfig Assembly : DbFacade.dll Syntax public interface IParameterlessDbCommandMethod<TDbDataModel> where TDbDataModel : DbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. Methods | Improve this Doc View Source Execute() Executes this instance. Declaration IDbResponse<TDbDataModel> Execute() Returns Type Description IDbResponse <TDbDataModel> | Improve this Doc View Source ExecuteAsync() Executes the asynchronous. Declaration Task<IDbResponse<TDbDataModel>> ExecuteAsync() Returns Type Description System.Threading.Tasks.Task < IDbResponse <TDbDataModel>> | Improve this Doc View Source Mock(Int32, Action<IDictionary<String, Object>>) Mocks the specified return value. Declaration IDbResponse<TDbDataModel> Mock(int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description IDbResponse <TDbDataModel> | Improve this Doc View Source Mock<T>(IEnumerable<T>, Int32, Action<IDictionary<String, Object>>) Mocks the specified response data. Declaration IDbResponse<TDbDataModel> Mock<T>(IEnumerable<T> responseData, int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> responseData The response data. System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description IDbResponse <TDbDataModel> Type Parameters Name Description T | Improve this Doc View Source MockAsync(Int32, Action<IDictionary<String, Object>>) Mocks the asynchronous. Declaration Task<IDbResponse<TDbDataModel>> MockAsync(int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description System.Threading.Tasks.Task < IDbResponse <TDbDataModel>> | Improve this Doc View Source MockAsync<T>(IEnumerable<T>, Int32, Action<IDictionary<String, Object>>) Mocks the asynchronous. Declaration Task<IDbResponse<TDbDataModel>> MockAsync<T>(IEnumerable<T> responseData, int returnValue, Action<IDictionary<string, object>> outputValues = null) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> responseData The response data. System.Int32 returnValue The return value. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValues The output values. Returns Type Description System.Threading.Tasks.Task < IDbResponse <TDbDataModel>> Type Parameters Name Description T"
  },
  "api/DbFacade.DataLayer.CommandConfig.Parameters.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.Parameters.html",
    "title": "Namespace DbFacade.DataLayer.CommandConfig.Parameters | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.CommandConfig.Parameters Interfaces IDbCommandConfigParams<TDbParams> IDbCommandParameterConfig<TDbParams>"
  },
  "api/DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandConfigParams-1.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandConfigParams-1.html",
    "title": "Interface IDbCommandConfigParams<TDbParams> | DbFacade",
    "keywords": "Interface IDbCommandConfigParams<TDbParams> Inherited Members System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.ContainsKey(System.String) System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.Add(System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>) System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.Remove(System.String) System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.TryGetValue(System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>) System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.Item[System.String] System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.Keys System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.Values System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.Add(System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.Clear() System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.Contains(System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>[], System.Int32) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.Remove(System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.Count System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.IsReadOnly System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.GetEnumerator() System.Collections.IEnumerable.GetEnumerator() Namespace : DbFacade.DataLayer.CommandConfig.Parameters Assembly : DbFacade.dll Syntax public interface IDbCommandConfigParams<TDbParams> : IDictionary<string, IDbCommandParameterConfig<TDbParams>>, ICollection<KeyValuePair<string, IDbCommandParameterConfig<TDbParams>>>, IEnumerable<KeyValuePair<string, IDbCommandParameterConfig<TDbParams>>>, IEnumerable Type Parameters Name Description TDbParams The type of the database parameters. Properties | Improve this Doc View Source Factory Gets the factory. Declaration DbCommandParameterConfigFactory<TDbParams> Factory { get; } Property Value Type Description DbCommandParameterConfigFactory <TDbParams> The factory. Methods | Improve this Doc View Source AddAsync(String, IDbCommandParameterConfig<TDbParams>) Adds the asynchronous. Declaration Task AddAsync(string key, IDbCommandParameterConfig<TDbParams> value) Parameters Type Name Description System.String key The key. IDbCommandParameterConfig <TDbParams> value The value. Returns Type Description System.Threading.Tasks.Task"
  },
  "api/DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig-1.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig-1.html",
    "title": "Interface IDbCommandParameterConfig<TDbParams> | DbFacade",
    "keywords": "Interface IDbCommandParameterConfig<TDbParams> Namespace : DbFacade.DataLayer.CommandConfig.Parameters Assembly : DbFacade.dll Syntax public interface IDbCommandParameterConfig<TDbParams> Type Parameters Name Description TDbParams The type of the database parameters."
  },
  "api/DbFacade.DataLayer.ConnectionService.DbConnectionConfig-6.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.DbConnectionConfig-6.html",
    "title": "Class DbConnectionConfig<TDbDataReader, TDbConnection, TDbCommand, TDbTransaction, TDbParameter, TDbConnectionConfig> | DbFacade",
    "keywords": "Class DbConnectionConfig<TDbDataReader, TDbConnection, TDbCommand, TDbTransaction, TDbParameter, TDbConnectionConfig> Inheritance System.Object DbConnectionConfigBase DbConnectionConfig<TDbDataReader, TDbConnection, TDbCommand, TDbTransaction, TDbParameter, TDbConnectionConfig> DefaultConnectionConfig<TDbConnectionConfig> OdbcConnectionConfig<TDbConnectionConfig> OleDbConnectionConfig<TDbConnectionConfig> OracleConnectionConfig<TDbConnectionConfig> SqlConnectionConfig<TDbConnectionConfig> SqLiteConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig IAsyncInit Inherited Members DbConnectionConfigBase.InitAsync() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class DbConnectionConfig<TDbDataReader, TDbConnection, TDbCommand, TDbTransaction, TDbParameter, TDbConnectionConfig> : DbConnectionConfigBase, IDbConnectionConfig, IAsyncInit where TDbDataReader : DbDataReader where TDbConnection : DbConnection where TDbCommand : DbCommand where TDbTransaction : DbTransaction where TDbParameter : DbParameter where TDbConnectionConfig : DbConnectionConfigBase Type Parameters Name Description TDbDataReader The type of the database data reader. TDbConnection The type of the database connection. TDbCommand The type of the database command. TDbTransaction The type of the database transaction. TDbParameter The type of the database parameter. TDbConnectionConfig The type of the database connection configuration. Methods | Improve this Doc View Source GetDbConnectionProvider() Declaration protected virtual string GetDbConnectionProvider() Returns Type Description System.String | Improve this Doc View Source GetDbConnectionProviderAsync() Declaration protected virtual async Task<string> GetDbConnectionProviderAsync() Returns Type Description System.Threading.Tasks.Task < System.String > | Improve this Doc View Source GetDbConnectionString() Declaration protected virtual string GetDbConnectionString() Returns Type Description System.String | Improve this Doc View Source GetDbConnectionStringAsync() Declaration protected virtual async Task<string> GetDbConnectionStringAsync() Returns Type Description System.Threading.Tasks.Task < System.String > | Improve this Doc View Source OnError(Exception) Called when [error]. Declaration protected virtual void OnError(Exception ex) Parameters Type Name Description System.Exception ex The ex. | Improve this Doc View Source OnErrorAsync(Exception) Called when [error asynchronous]. Declaration protected virtual async Task OnErrorAsync(Exception ex) Parameters Type Name Description System.Exception ex The ex. Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source OnFacadeError(FacadeException) Called when [facade error]. Declaration protected virtual void OnFacadeError(FacadeException ex) Parameters Type Name Description FacadeException ex The ex. | Improve this Doc View Source OnFacadeErrorAsync(FacadeException) Called when [facade error asynchronous]. Declaration protected virtual async Task OnFacadeErrorAsync(FacadeException ex) Parameters Type Name Description FacadeException ex The ex. Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source OnSQLExecutionError(SQLExecutionException) Called when [SQL execution error]. Declaration protected virtual void OnSQLExecutionError(SQLExecutionException ex) Parameters Type Name Description SQLExecutionException ex The ex. | Improve this Doc View Source OnSQLExecutionErrorAsync(SQLExecutionException) Called when [SQL execution error asynchronous]. Declaration protected virtual async Task OnSQLExecutionErrorAsync(SQLExecutionException ex) Parameters Type Name Description SQLExecutionException ex The ex. Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source OnValidationError<TDbParams>(ValidationException<TDbParams>) Called when [validation error]. Declaration protected virtual void OnValidationError<TDbParams>(ValidationException<TDbParams> ex) Parameters Type Name Description ValidationException <TDbParams> ex The ex. Type Parameters Name Description TDbParams The type of the database parameters. | Improve this Doc View Source OnValidationErrorAsync<TDbParams>(ValidationException<TDbParams>) Called when [validation error asynchronous]. Declaration protected virtual async Task OnValidationErrorAsync<TDbParams>(ValidationException<TDbParams> ex) Parameters Type Name Description ValidationException <TDbParams> ex The ex. Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TDbParams The type of the database parameters. Implements IDbConnectionConfig IAsyncInit Extension Methods DbConnectionService.Register<TDbConnectionConfig>(TDbConnectionConfig) DbConnectionService.RegisterAsync<TDbConnectionConfig>(TDbConnectionConfig)"
  },
  "api/DbFacade.DataLayer.ConnectionService.DbConnectionConfigBase.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.DbConnectionConfigBase.html",
    "title": "Class DbConnectionConfigBase | DbFacade",
    "keywords": "Class DbConnectionConfigBase Inheritance System.Object DbConnectionConfigBase DbConnectionConfig<TDbDataReader, TDbConnection, TDbCommand, TDbTransaction, TDbParameter, TDbConnectionConfig> Implements IDbConnectionConfig IAsyncInit Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class DbConnectionConfigBase : IDbConnectionConfig, IAsyncInit Methods | Improve this Doc View Source InitAsync() Initializes the asynchronous. Declaration public async Task InitAsync() Returns Type Description System.Threading.Tasks.Task Implements IDbConnectionConfig IAsyncInit Extension Methods DbConnectionService.Register<TDbConnectionConfig>(TDbConnectionConfig) DbConnectionService.RegisterAsync<TDbConnectionConfig>(TDbConnectionConfig)"
  },
  "api/DbFacade.DataLayer.ConnectionService.DefaultConnectionConfig-1.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.DefaultConnectionConfig-1.html",
    "title": "Class DefaultConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class DefaultConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfigBase DbConnectionConfig < System.Data.Common.DbDataReader , System.Data.Common.DbConnection , System.Data.Common.DbCommand , System.Data.Common.DbTransaction , System.Data.Common.DbParameter , TDbConnectionConfig> DefaultConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig IAsyncInit Inherited Members DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.GetDbConnectionString() DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.GetDbConnectionProvider() DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.GetDbConnectionStringAsync() DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.GetDbConnectionProviderAsync() DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.OnError(Exception) DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.OnValidationError<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.OnSQLExecutionError(SQLExecutionException) DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.OnFacadeError(FacadeException) DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.OnErrorAsync(Exception) DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.OnValidationErrorAsync<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.OnSQLExecutionErrorAsync(SQLExecutionException) DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>.OnFacadeErrorAsync(FacadeException) DbConnectionConfigBase.InitAsync() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class DefaultConnectionConfig<TDbConnectionConfig> : DbConnectionConfig<DbDataReader, DbConnection, DbCommand, DbTransaction, DbParameter, TDbConnectionConfig>, IDbConnectionConfig, IAsyncInit where TDbConnectionConfig : DbConnectionConfigBase Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. Implements IDbConnectionConfig IAsyncInit Extension Methods DbConnectionService.Register<TDbConnectionConfig>(TDbConnectionConfig) DbConnectionService.RegisterAsync<TDbConnectionConfig>(TDbConnectionConfig)"
  },
  "api/DbFacade.DataLayer.ConnectionService.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.html",
    "title": "Namespace DbFacade.DataLayer.ConnectionService | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.ConnectionService Classes DbConnectionConfig<TDbDataReader, TDbConnection, TDbCommand, TDbTransaction, TDbParameter, TDbConnectionConfig> DbConnectionConfigBase DefaultConnectionConfig<TDbConnectionConfig> OdbcConnectionConfig<TDbConnectionConfig> OleDbConnectionConfig<TDbConnectionConfig> OracleConnectionConfig<TDbConnectionConfig> SqlConnectionConfig<TDbConnectionConfig> SqLiteConnectionConfig<TDbConnectionConfig> Interfaces IDbCommandConfig IDbConnectionConfig"
  },
  "api/DbFacade.DataLayer.ConnectionService.IDbCommandConfig.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.IDbCommandConfig.html",
    "title": "Interface IDbCommandConfig | DbFacade",
    "keywords": "Interface IDbCommandConfig Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public interface IDbCommandConfig Properties | Improve this Doc View Source CommandId Gets the command identifier. Declaration Guid CommandId { get; } Property Value Type Description System.Guid The command identifier. Methods | Improve this Doc View Source CreateMethod(Action<IDbCommandConfigParams<Object>>) Creates the method. Declaration IDbCommandMethod CreateMethod(Action<IDbCommandConfigParams<object>> parametersInitializer = null) Parameters Type Name Description System.Action < IDbCommandConfigParams < System.Object >> parametersInitializer The parameters initializer. Returns Type Description IDbCommandMethod | Improve this Doc View Source CreateMethod<TDbParams>(Action<IDbCommandConfigParams<TDbParams>>, Action<IValidator<TDbParams>>) Creates the method. Declaration IDbCommandMethod<TDbParams> CreateMethod<TDbParams>(Action<IDbCommandConfigParams<TDbParams>> parametersInitializer = null, Action<IValidator<TDbParams>> validatorInitializer = null) Parameters Type Name Description System.Action < IDbCommandConfigParams <TDbParams>> parametersInitializer The parameters initializer. System.Action < IValidator <TDbParams>> validatorInitializer The validator initializer. Returns Type Description IDbCommandMethod <TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. | Improve this Doc View Source CreateMethod<TDbParams>(Action<IDbCommandConfigParams<TDbParams>>, Action<IValidator<TDbParams>>, Action<TDbParams>[]) Creates the method. Declaration IDbCommandMethod<TDbParams> CreateMethod<TDbParams>(Action<IDbCommandConfigParams<TDbParams>> parametersInitializer, Action<IValidator<TDbParams>> validatorInitializer, params Action<TDbParams>[] onBeforeActions) Parameters Type Name Description System.Action < IDbCommandConfigParams <TDbParams>> parametersInitializer The parameters initializer. System.Action < IValidator <TDbParams>> validatorInitializer The validator initializer. System.Action <TDbParams>[] onBeforeActions The on before actions. Returns Type Description IDbCommandMethod <TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. | Improve this Doc View Source CreateMethod<TDbParams, TDbDataModel>(Action<IDbCommandConfigParams<TDbParams>>, Action<IValidator<TDbParams>>) Creates the method. Declaration IDbCommandMethod<TDbParams, TDbDataModel> CreateMethod<TDbParams, TDbDataModel>(Action<IDbCommandConfigParams<TDbParams>> parametersInitializer = null, Action<IValidator<TDbParams>> validatorInitializer = null) where TDbDataModel : DbDataModel Parameters Type Name Description System.Action < IDbCommandConfigParams <TDbParams>> parametersInitializer The parameters initializer. System.Action < IValidator <TDbParams>> validatorInitializer The validator initializer. Returns Type Description IDbCommandMethod <TDbParams, TDbDataModel> Type Parameters Name Description TDbParams The type of the database parameters. TDbDataModel The type of the database data model. | Improve this Doc View Source CreateMethod<TDbParams, TDbDataModel>(Action<IDbCommandConfigParams<TDbParams>>, Action<IValidator<TDbParams>>, Action<TDbParams>[]) Creates the method. Declaration IDbCommandMethod<TDbParams, TDbDataModel> CreateMethod<TDbParams, TDbDataModel>(Action<IDbCommandConfigParams<TDbParams>> parametersInitializer, Action<IValidator<TDbParams>> validatorInitializer, params Action<TDbParams>[] onBeforeActions) where TDbDataModel : DbDataModel Parameters Type Name Description System.Action < IDbCommandConfigParams <TDbParams>> parametersInitializer The parameters initializer. System.Action < IValidator <TDbParams>> validatorInitializer The validator initializer. System.Action <TDbParams>[] onBeforeActions The on before actions. Returns Type Description IDbCommandMethod <TDbParams, TDbDataModel> Type Parameters Name Description TDbParams The type of the database parameters. TDbDataModel The type of the database data model. | Improve this Doc View Source CreateMethodAsync(Func<IDbCommandConfigParams<Object>, Task>) Creates the method asynchronous. Declaration Task<IDbCommandMethod> CreateMethodAsync(Func<IDbCommandConfigParams<object>, Task> parametersInitializer = null) Parameters Type Name Description System.Func < IDbCommandConfigParams < System.Object >, System.Threading.Tasks.Task > parametersInitializer The parameters initializer. Returns Type Description System.Threading.Tasks.Task < IDbCommandMethod > | Improve this Doc View Source CreateMethodAsync<TDbParams>(Func<IDbCommandConfigParams<TDbParams>, Task>, Func<IValidator<TDbParams>, Task>) Creates the method asynchronous. Declaration Task<IDbCommandMethod<TDbParams>> CreateMethodAsync<TDbParams>(Func<IDbCommandConfigParams<TDbParams>, Task> parametersInitializer = null, Func<IValidator<TDbParams>, Task> validatorInitializer = null) Parameters Type Name Description System.Func < IDbCommandConfigParams <TDbParams>, System.Threading.Tasks.Task > parametersInitializer The parameters initializer. System.Func < IValidator <TDbParams>, System.Threading.Tasks.Task > validatorInitializer The validator initializer. Returns Type Description System.Threading.Tasks.Task < IDbCommandMethod <TDbParams>> Type Parameters Name Description TDbParams The type of the database parameters. | Improve this Doc View Source CreateMethodAsync<TDbParams>(Func<IDbCommandConfigParams<TDbParams>, Task>, Func<IValidator<TDbParams>, Task>, Func<TDbParams, Task>[]) Creates the method asynchronous. Declaration Task<IDbCommandMethod<TDbParams>> CreateMethodAsync<TDbParams>(Func<IDbCommandConfigParams<TDbParams>, Task> parametersInitializer, Func<IValidator<TDbParams>, Task> validatorInitializer, params Func<TDbParams, Task>[] onBeforeAsyncActions) Parameters Type Name Description System.Func < IDbCommandConfigParams <TDbParams>, System.Threading.Tasks.Task > parametersInitializer The parameters initializer. System.Func < IValidator <TDbParams>, System.Threading.Tasks.Task > validatorInitializer The validator initializer. System.Func <TDbParams, System.Threading.Tasks.Task >[] onBeforeAsyncActions The on before asynchronous actions. Returns Type Description System.Threading.Tasks.Task < IDbCommandMethod <TDbParams>> Type Parameters Name Description TDbParams The type of the database parameters. | Improve this Doc View Source CreateMethodAsync<TDbParams, TDbDataModel>(Func<IDbCommandConfigParams<TDbParams>, Task>, Func<IValidator<TDbParams>, Task>) Creates the method asynchronous. Declaration Task<IDbCommandMethod<TDbParams, TDbDataModel>> CreateMethodAsync<TDbParams, TDbDataModel>(Func<IDbCommandConfigParams<TDbParams>, Task> parametersInitializer = null, Func<IValidator<TDbParams>, Task> validatorInitializer = null) where TDbDataModel : DbDataModel Parameters Type Name Description System.Func < IDbCommandConfigParams <TDbParams>, System.Threading.Tasks.Task > parametersInitializer The parameters initializer. System.Func < IValidator <TDbParams>, System.Threading.Tasks.Task > validatorInitializer The validator initializer. Returns Type Description System.Threading.Tasks.Task < IDbCommandMethod <TDbParams, TDbDataModel>> Type Parameters Name Description TDbParams The type of the database parameters. TDbDataModel The type of the database data model. | Improve this Doc View Source CreateMethodAsync<TDbParams, TDbDataModel>(Func<IDbCommandConfigParams<TDbParams>, Task>, Func<IValidator<TDbParams>, Task>, Func<TDbParams, Task>[]) Creates the method asynchronous. Declaration Task<IDbCommandMethod<TDbParams, TDbDataModel>> CreateMethodAsync<TDbParams, TDbDataModel>(Func<IDbCommandConfigParams<TDbParams>, Task> parametersInitializer, Func<IValidator<TDbParams>, Task> validatorInitializer, params Func<TDbParams, Task>[] onBeforeAsyncActions) where TDbDataModel : DbDataModel Parameters Type Name Description System.Func < IDbCommandConfigParams <TDbParams>, System.Threading.Tasks.Task > parametersInitializer The parameters initializer. System.Func < IValidator <TDbParams>, System.Threading.Tasks.Task > validatorInitializer The validator initializer. System.Func <TDbParams, System.Threading.Tasks.Task >[] onBeforeAsyncActions The on before asynchronous actions. Returns Type Description System.Threading.Tasks.Task < IDbCommandMethod <TDbParams, TDbDataModel>> Type Parameters Name Description TDbParams The type of the database parameters. TDbDataModel The type of the database data model. | Improve this Doc View Source CreateParameterlessMethod<TDbDataModel>(Action<IDbCommandConfigParams<Object>>) Creates the parameterless method. Declaration IParameterlessDbCommandMethod<TDbDataModel> CreateParameterlessMethod<TDbDataModel>(Action<IDbCommandConfigParams<object>> parametersInitializer = null) where TDbDataModel : DbDataModel Parameters Type Name Description System.Action < IDbCommandConfigParams < System.Object >> parametersInitializer The parameters initializer. Returns Type Description IParameterlessDbCommandMethod <TDbDataModel> Type Parameters Name Description TDbDataModel The type of the database data model. | Improve this Doc View Source CreateParameterlessMethodAsync<TDbDataModel>(Func<IDbCommandConfigParams<Object>, Task>) Creates the parameterless method asynchronous. Declaration Task<IParameterlessDbCommandMethod<TDbDataModel>> CreateParameterlessMethodAsync<TDbDataModel>(Func<IDbCommandConfigParams<object>, Task> parametersInitializer = null) where TDbDataModel : DbDataModel Parameters Type Name Description System.Func < IDbCommandConfigParams < System.Object >, System.Threading.Tasks.Task > parametersInitializer The parameters initializer. Returns Type Description System.Threading.Tasks.Task < IParameterlessDbCommandMethod <TDbDataModel>> Type Parameters Name Description TDbDataModel The type of the database data model."
  },
  "api/DbFacade.DataLayer.ConnectionService.IDbConnectionConfig.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.IDbConnectionConfig.html",
    "title": "Interface IDbConnectionConfig | DbFacade",
    "keywords": "Interface IDbConnectionConfig Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public interface IDbConnectionConfig"
  },
  "api/DbFacade.DataLayer.ConnectionService.OdbcConnectionConfig-1.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.OdbcConnectionConfig-1.html",
    "title": "Class OdbcConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class OdbcConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfigBase DbConnectionConfig < System.Data.Odbc.OdbcDataReader , System.Data.Odbc.OdbcConnection , System.Data.Odbc.OdbcCommand , System.Data.Odbc.OdbcTransaction , System.Data.Odbc.OdbcParameter , TDbConnectionConfig> OdbcConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig IAsyncInit Inherited Members DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.GetDbConnectionString() DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.GetDbConnectionProvider() DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.GetDbConnectionStringAsync() DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.GetDbConnectionProviderAsync() DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.OnError(Exception) DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.OnValidationError<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.OnSQLExecutionError(SQLExecutionException) DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.OnFacadeError(FacadeException) DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.OnErrorAsync(Exception) DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.OnValidationErrorAsync<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.OnSQLExecutionErrorAsync(SQLExecutionException) DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>.OnFacadeErrorAsync(FacadeException) DbConnectionConfigBase.InitAsync() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class OdbcConnectionConfig<TDbConnectionConfig> : DbConnectionConfig<OdbcDataReader, OdbcConnection, OdbcCommand, OdbcTransaction, OdbcParameter, TDbConnectionConfig>, IDbConnectionConfig, IAsyncInit where TDbConnectionConfig : DbConnectionConfigBase Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. Implements IDbConnectionConfig IAsyncInit Extension Methods DbConnectionService.Register<TDbConnectionConfig>(TDbConnectionConfig) DbConnectionService.RegisterAsync<TDbConnectionConfig>(TDbConnectionConfig)"
  },
  "api/DbFacade.DataLayer.ConnectionService.OleDbConnectionConfig-1.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.OleDbConnectionConfig-1.html",
    "title": "Class OleDbConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class OleDbConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfigBase DbConnectionConfig < System.Data.OleDb.OleDbDataReader , System.Data.OleDb.OleDbConnection , System.Data.OleDb.OleDbCommand , System.Data.OleDb.OleDbTransaction , System.Data.OleDb.OleDbParameter , TDbConnectionConfig> OleDbConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig IAsyncInit Inherited Members DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.GetDbConnectionString() DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.GetDbConnectionProvider() DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.GetDbConnectionStringAsync() DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.GetDbConnectionProviderAsync() DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.OnError(Exception) DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.OnValidationError<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.OnSQLExecutionError(SQLExecutionException) DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.OnFacadeError(FacadeException) DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.OnErrorAsync(Exception) DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.OnValidationErrorAsync<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.OnSQLExecutionErrorAsync(SQLExecutionException) DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>.OnFacadeErrorAsync(FacadeException) DbConnectionConfigBase.InitAsync() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class OleDbConnectionConfig<TDbConnectionConfig> : DbConnectionConfig<OleDbDataReader, OleDbConnection, OleDbCommand, OleDbTransaction, OleDbParameter, TDbConnectionConfig>, IDbConnectionConfig, IAsyncInit where TDbConnectionConfig : DbConnectionConfigBase Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. Implements IDbConnectionConfig IAsyncInit Extension Methods DbConnectionService.Register<TDbConnectionConfig>(TDbConnectionConfig) DbConnectionService.RegisterAsync<TDbConnectionConfig>(TDbConnectionConfig)"
  },
  "api/DbFacade.DataLayer.ConnectionService.OracleConnectionConfig-1.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.OracleConnectionConfig-1.html",
    "title": "Class OracleConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class OracleConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfigBase DbConnectionConfig < Oracle.ManagedDataAccess.Client.OracleDataReader , Oracle.ManagedDataAccess.Client.OracleConnection , Oracle.ManagedDataAccess.Client.OracleCommand , Oracle.ManagedDataAccess.Client.OracleTransaction , Oracle.ManagedDataAccess.Client.OracleParameter , TDbConnectionConfig> OracleConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig IAsyncInit Inherited Members DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.GetDbConnectionString() DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.GetDbConnectionProvider() DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.GetDbConnectionStringAsync() DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.GetDbConnectionProviderAsync() DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.OnError(Exception) DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.OnValidationError<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.OnSQLExecutionError(SQLExecutionException) DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.OnFacadeError(FacadeException) DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.OnErrorAsync(Exception) DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.OnValidationErrorAsync<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.OnSQLExecutionErrorAsync(SQLExecutionException) DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>.OnFacadeErrorAsync(FacadeException) DbConnectionConfigBase.InitAsync() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class OracleConnectionConfig<TDbConnectionConfig> : DbConnectionConfig<OracleDataReader, OracleConnection, OracleCommand, OracleTransaction, OracleParameter, TDbConnectionConfig>, IDbConnectionConfig, IAsyncInit where TDbConnectionConfig : DbConnectionConfigBase Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. Implements IDbConnectionConfig IAsyncInit Extension Methods DbConnectionService.Register<TDbConnectionConfig>(TDbConnectionConfig) DbConnectionService.RegisterAsync<TDbConnectionConfig>(TDbConnectionConfig)"
  },
  "api/DbFacade.DataLayer.ConnectionService.SqlConnectionConfig-1.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.SqlConnectionConfig-1.html",
    "title": "Class SqlConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class SqlConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfigBase DbConnectionConfig < System.Data.SqlClient.SqlDataReader , System.Data.SqlClient.SqlConnection , System.Data.SqlClient.SqlCommand , System.Data.SqlClient.SqlTransaction , System.Data.SqlClient.SqlParameter , TDbConnectionConfig> SqlConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig IAsyncInit Inherited Members DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.GetDbConnectionString() DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.GetDbConnectionProvider() DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.GetDbConnectionStringAsync() DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.GetDbConnectionProviderAsync() DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.OnError(Exception) DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.OnValidationError<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.OnSQLExecutionError(SQLExecutionException) DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.OnFacadeError(FacadeException) DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.OnErrorAsync(Exception) DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.OnValidationErrorAsync<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.OnSQLExecutionErrorAsync(SQLExecutionException) DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>.OnFacadeErrorAsync(FacadeException) DbConnectionConfigBase.InitAsync() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class SqlConnectionConfig<TDbConnectionConfig> : DbConnectionConfig<SqlDataReader, SqlConnection, SqlCommand, SqlTransaction, SqlParameter, TDbConnectionConfig>, IDbConnectionConfig, IAsyncInit where TDbConnectionConfig : DbConnectionConfigBase Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. Implements IDbConnectionConfig IAsyncInit Extension Methods DbConnectionService.Register<TDbConnectionConfig>(TDbConnectionConfig) DbConnectionService.RegisterAsync<TDbConnectionConfig>(TDbConnectionConfig)"
  },
  "api/DbFacade.DataLayer.ConnectionService.SqLiteConnectionConfig-1.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.SqLiteConnectionConfig-1.html",
    "title": "Class SqLiteConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class SqLiteConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfigBase DbConnectionConfig < System.Data.SQLite.SQLiteDataReader , System.Data.SQLite.SQLiteConnection , System.Data.SQLite.SQLiteCommand , System.Data.SQLite.SQLiteTransaction , System.Data.SQLite.SQLiteParameter , TDbConnectionConfig> SqLiteConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig IAsyncInit Inherited Members DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.GetDbConnectionString() DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.GetDbConnectionProvider() DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.GetDbConnectionStringAsync() DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.GetDbConnectionProviderAsync() DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.OnError(Exception) DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.OnValidationError<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.OnSQLExecutionError(SQLExecutionException) DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.OnFacadeError(FacadeException) DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.OnErrorAsync(Exception) DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.OnValidationErrorAsync<TDbParams>(ValidationException<TDbParams>) DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.OnSQLExecutionErrorAsync(SQLExecutionException) DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>.OnFacadeErrorAsync(FacadeException) DbConnectionConfigBase.InitAsync() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class SqLiteConnectionConfig<TDbConnectionConfig> : DbConnectionConfig<SQLiteDataReader, SQLiteConnection, SQLiteCommand, SQLiteTransaction, SQLiteParameter, TDbConnectionConfig>, IDbConnectionConfig, IAsyncInit where TDbConnectionConfig : DbConnectionConfigBase Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. Implements IDbConnectionConfig IAsyncInit Extension Methods DbConnectionService.Register<TDbConnectionConfig>(TDbConnectionConfig) DbConnectionService.RegisterAsync<TDbConnectionConfig>(TDbConnectionConfig)"
  },
  "api/DbFacade.DataLayer.Models.DbDataModel.html": {
    "href": "api/DbFacade.DataLayer.Models.DbDataModel.html",
    "title": "Class DbDataModel | DbFacade",
    "keywords": "Class DbDataModel Inheritance System.Object DbDataModel Implements IDbDataModel Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax [JsonObject] [Serializable] public abstract class DbDataModel : IDbDataModel Properties | Improve this Doc View Source DataBindingErrors Gets the data binding errors. Declaration [JsonIgnore] public IEnumerable<string> DataBindingErrors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > The data binding errors. | Improve this Doc View Source HasDataBindingErrors Gets a value indicating whether this instance has data binding errors. Declaration [JsonIgnore] public bool HasDataBindingErrors { get; } Property Value Type Description System.Boolean true if this instance has data binding errors; otherwise, false . Methods | Improve this Doc View Source CreateNestedModel<TDbDataModel>() Creates the nested model. Declaration protected TDbDataModel CreateNestedModel<TDbDataModel>() where TDbDataModel : DbDataModel Returns Type Description TDbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. | Improve this Doc View Source CreateNestedModelAsync<TDbDataModel>() Creates the nested model asynchronous. Declaration protected async Task<TDbDataModel> CreateNestedModelAsync<TDbDataModel>() where TDbDataModel : DbDataModel Returns Type Description System.Threading.Tasks.Task <TDbDataModel> Type Parameters Name Description TDbDataModel The type of the database data model. | Improve this Doc View Source GetColumn<T>(String, T) Gets the column. Declaration protected T GetColumn<T>(string col, T defaultValue = null) Parameters Type Name Description System.String col The col. T defaultValue The default value. Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetColumn<T>(String, Func<String, T>, T) Gets the column. Declaration protected T GetColumn<T>(string col, Func<string, T> convert, T defaultValue = null) Parameters Type Name Description System.String col The col. System.Func < System.String , T> convert The convert. T defaultValue The default value. Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetColumn<T, TParse>(String, Func<TParse, T>, T) Gets the column. Declaration protected T GetColumn<T, TParse>(string col, Func<TParse, T> convert, T defaultValue = null) where TParse : IComparable Parameters Type Name Description System.String col The col. System.Func <TParse, T> convert The convert. T defaultValue The default value. Returns Type Description T Type Parameters Name Description T TParse The type of the parse. | Improve this Doc View Source GetColumnAsync<T>(String, T) Gets the column asynchronous. Declaration protected async Task<T> GetColumnAsync<T>(string col, T defaultValue = null) Parameters Type Name Description System.String col The col. T defaultValue The default value. Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T | Improve this Doc View Source GetColumnAsync<T>(String, Func<String, T>, T) Gets the column asynchronous. Declaration protected async Task<T> GetColumnAsync<T>(string col, Func<string, T> convert, T defaultValue = null) Parameters Type Name Description System.String col The col. System.Func < System.String , T> convert The convert. T defaultValue The default value. Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T | Improve this Doc View Source GetColumnAsync<T, TParse>(String, Func<TParse, T>, T) Gets the column asynchronous. Declaration protected async Task<T> GetColumnAsync<T, TParse>(string col, Func<TParse, T> convert, T defaultValue = null) where TParse : IComparable Parameters Type Name Description System.String col The col. System.Func <TParse, T> convert The convert. T defaultValue The default value. Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T TParse The type of the parse. | Improve this Doc View Source GetDateTimeColumn(String, String, DateTimeStyles) Gets the date time column. Declaration protected DateTime? GetDateTimeColumn(string col, string format, DateTimeStyles style = DateTimeStyles.None) Parameters Type Name Description System.String col The col. System.String format The format. System.Globalization.DateTimeStyles style The style. Returns Type Description System.Nullable < System.DateTime > | Improve this Doc View Source GetDateTimeColumn(String, String, IFormatProvider, DateTimeStyles) Gets the date time column. Declaration protected DateTime? GetDateTimeColumn(string col, string format, IFormatProvider provider, DateTimeStyles style = DateTimeStyles.None) Parameters Type Name Description System.String col The col. System.String format The format. System.IFormatProvider provider The provider. System.Globalization.DateTimeStyles style The style. Returns Type Description System.Nullable < System.DateTime > | Improve this Doc View Source GetDateTimeColumnAsync(String, String, DateTimeStyles) Gets the date time column asynchronous. Declaration protected async Task<DateTime?> GetDateTimeColumnAsync(string col, string format, DateTimeStyles style = DateTimeStyles.None) Parameters Type Name Description System.String col The col. System.String format The format. System.Globalization.DateTimeStyles style The style. Returns Type Description System.Threading.Tasks.Task < System.Nullable < System.DateTime >> | Improve this Doc View Source GetDateTimeColumnAsync(String, String, IFormatProvider, DateTimeStyles) Gets the date time column asynchronous. Declaration protected async Task<DateTime?> GetDateTimeColumnAsync(string col, string format, IFormatProvider provider, DateTimeStyles style = DateTimeStyles.None) Parameters Type Name Description System.String col The col. System.String format The format. System.IFormatProvider provider The provider. System.Globalization.DateTimeStyles style The style. Returns Type Description System.Threading.Tasks.Task < System.Nullable < System.DateTime >> | Improve this Doc View Source GetEnumerableColumn<T>(String, String) Gets the enumerable column. Declaration protected IEnumerable<T> GetEnumerableColumn<T>(string col, string delimeter = \",\") Parameters Type Name Description System.String col The col. System.String delimeter The delimeter. Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetEnumerableColumnAsync<T>(String, String) Gets the enumerable column asynchronous. Declaration protected async Task<IEnumerable<T>> GetEnumerableColumnAsync<T>(string col, string delimeter = \",\") Parameters Type Name Description System.String col The col. System.String delimeter The delimeter. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable <T>> Type Parameters Name Description T | Improve this Doc View Source GetFlagColumn<T>(String, T) Gets the flag column. Declaration protected bool GetFlagColumn<T>(string col, T trueValue) where T : IComparable Parameters Type Name Description System.String col The col. T trueValue The true value. Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source GetFlagColumnAsync<T>(String, T) Gets the flag column asynchronous. Declaration protected async Task<bool> GetFlagColumnAsync<T>(string col, T trueValue) where T : IComparable Parameters Type Name Description System.String col The col. T trueValue The true value. Returns Type Description System.Threading.Tasks.Task < System.Boolean > Type Parameters Name Description T | Improve this Doc View Source GetFormattedDateTimeStringColumn(String, String) Gets the formatted date time string column. Declaration protected string GetFormattedDateTimeStringColumn(string col, string format) Parameters Type Name Description System.String col The col. System.String format The format. Returns Type Description System.String | Improve this Doc View Source GetFormattedDateTimeStringColumnAsync(String, String) Gets the formatted date time string column asynchronous. Declaration protected async Task<string> GetFormattedDateTimeStringColumnAsync(string col, string format) Parameters Type Name Description System.String col The col. System.String format The format. Returns Type Description System.Threading.Tasks.Task < System.String > | Improve this Doc View Source Init() Initializes this instance. Declaration protected virtual void Init() | Improve this Doc View Source InitAsync() Initializes the asynchronous. Declaration protected virtual async Task InitAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source IsDbCommand(IDbCommandConfig) Determines whether [is database command] [the specified configuration]. Declaration protected bool IsDbCommand(IDbCommandConfig config) Parameters Type Name Description IDbCommandConfig config The configuration. Returns Type Description System.Boolean true if [is database command] [the specified configuration]; otherwise, false . | Improve this Doc View Source IsDbCommandAsync(IDbCommandConfig) Determines whether [is database command asynchronous] [the specified configuration]. Declaration protected async Task<bool> IsDbCommandAsync(IDbCommandConfig config) Parameters Type Name Description IDbCommandConfig config The configuration. Returns Type Description System.Threading.Tasks.Task < System.Boolean > true if [is database command asynchronous] [the specified configuration]; otherwise, false . | Improve this Doc View Source ToJson() Converts to json. Declaration public string ToJson() Returns Type Description System.String | Improve this Doc View Source ToJsonAsync() Converts to jsonasync. Declaration public async Task<string> ToJsonAsync() Returns Type Description System.Threading.Tasks.Task < System.String > Implements IDbDataModel"
  },
  "api/DbFacade.DataLayer.Models.html": {
    "href": "api/DbFacade.DataLayer.Models.html",
    "title": "Namespace DbFacade.DataLayer.Models | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.Models Classes DbDataModel Interfaces IDbDataModel IDbResponse IDbResponse<TDbDataModel> IJsonSerializable<TDbDataModel> IReadOnlyDbCollection<TDbDataModel> IXMLSerializable<TDbDataModel>"
  },
  "api/DbFacade.DataLayer.Models.IDbDataModel.html": {
    "href": "api/DbFacade.DataLayer.Models.IDbDataModel.html",
    "title": "Interface IDbDataModel | DbFacade",
    "keywords": "Interface IDbDataModel Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IDbDataModel Properties | Improve this Doc View Source DataBindingErrors Gets the data binding errors. Declaration [JsonIgnore] IEnumerable<string> DataBindingErrors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > The data binding errors. | Improve this Doc View Source HasDataBindingErrors Gets a value indicating whether this instance has data binding errors. Declaration bool HasDataBindingErrors { get; } Property Value Type Description System.Boolean true if this instance has data binding errors; otherwise, false . Methods | Improve this Doc View Source ToJson() Converts to json. Declaration string ToJson() Returns Type Description System.String | Improve this Doc View Source ToJsonAsync() Converts to jsonasync. Declaration Task<string> ToJsonAsync() Returns Type Description System.Threading.Tasks.Task < System.String >"
  },
  "api/DbFacade.DataLayer.Models.IDbResponse.html": {
    "href": "api/DbFacade.DataLayer.Models.IDbResponse.html",
    "title": "Interface IDbResponse | DbFacade",
    "keywords": "Interface IDbResponse Inherited Members IDbResponse<DbDataModel>.ReturnValue IDbResponse<DbDataModel>.IsNull IDbResponse<DbDataModel>.HasDataBindingErrors IDbResponse<DbDataModel>.CommandId IDbResponse<DbDataModel>.Error IDbResponse<DbDataModel>.HasError IDbResponse<DbDataModel>.GetOutputValue(String) IDbResponse<DbDataModel>.GetOutputValue<T>(String) IDbResponse<DbDataModel>.GetOutputModel<T>() IDbResponse<DbDataModel>.GetOutputValueAsync(String) IDbResponse<DbDataModel>.GetOutputValueAsync<T>(String) IDbResponse<DbDataModel>.GetOutputModelAsync<T>() System.Collections.Generic.IEnumerable<DbFacade.DataLayer.Models.DbDataModel>.GetEnumerator() IReadOnlyDbCollection<DbDataModel>.Contains(DbDataModel) IReadOnlyDbCollection<DbDataModel>.Count() IReadOnlyDbCollection<DbDataModel>.First() IReadOnlyDbCollection<DbDataModel>.Exists(Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.Find(Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.FindIndex(Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.FindIndex(Int32, Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.FindIndex(Int32, Int32, Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.FindLastIndex(Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.FindLastIndex(Int32, Int32, Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.ForEach(Action<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.IndexOf(DbDataModel, Int32, Int32) IReadOnlyDbCollection<DbDataModel>.IndexOf(DbDataModel, Int32) IReadOnlyDbCollection<DbDataModel>.IndexOf(DbDataModel) IReadOnlyDbCollection<DbDataModel>.LastIndexOf(DbDataModel) IReadOnlyDbCollection<DbDataModel>.LastIndexOf(DbDataModel, Int32) IReadOnlyDbCollection<DbDataModel>.LastIndexOf(DbDataModel, Int32, Int32) IReadOnlyDbCollection<DbDataModel>.Reverse(Int32, Int32) IReadOnlyDbCollection<DbDataModel>.Reverse() IReadOnlyDbCollection<DbDataModel>.Sort(Int32, Int32, IComparer<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.Sort(Comparison<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.Sort() IReadOnlyDbCollection<DbDataModel>.Sort(IComparer<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.ToArray() IReadOnlyDbCollection<DbDataModel>.ToList() IReadOnlyDbCollection<DbDataModel>.ToListAsync() IXMLSerializable<DbDataModel>.Serialize(TextWriter) IXMLSerializable<DbDataModel>.SerializeAsync(TextWriter) IXMLSerializable<DbDataModel>.Serialize(XmlWriter) IXMLSerializable<DbDataModel>.SerializeAsync(XmlWriter) IJsonSerializable<DbDataModel>.ToJson() IJsonSerializable<DbDataModel>.ToJsonAsync() Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IDbResponse : IDbResponse<DbDataModel>, IEnumerable<DbDataModel>, IEnumerable, IReadOnlyDbCollection<DbDataModel>, IXMLSerializable<DbDataModel>, IJsonSerializable<DbDataModel>"
  },
  "api/DbFacade.DataLayer.Models.IDbResponse-1.html": {
    "href": "api/DbFacade.DataLayer.Models.IDbResponse-1.html",
    "title": "Interface IDbResponse<TDbDataModel> | DbFacade",
    "keywords": "Interface IDbResponse<TDbDataModel> Inherited Members System.Collections.Generic.IEnumerable<TDbDataModel>.GetEnumerator() IReadOnlyDbCollection<TDbDataModel>.Contains(TDbDataModel) IReadOnlyDbCollection<TDbDataModel>.Count() IReadOnlyDbCollection<TDbDataModel>.First() IReadOnlyDbCollection<TDbDataModel>.Exists(Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.Find(Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.FindIndex(Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.FindIndex(Int32, Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.FindIndex(Int32, Int32, Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.FindLastIndex(Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.FindLastIndex(Int32, Int32, Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.ForEach(Action<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.IndexOf(TDbDataModel, Int32, Int32) IReadOnlyDbCollection<TDbDataModel>.IndexOf(TDbDataModel, Int32) IReadOnlyDbCollection<TDbDataModel>.IndexOf(TDbDataModel) IReadOnlyDbCollection<TDbDataModel>.LastIndexOf(TDbDataModel) IReadOnlyDbCollection<TDbDataModel>.LastIndexOf(TDbDataModel, Int32) IReadOnlyDbCollection<TDbDataModel>.LastIndexOf(TDbDataModel, Int32, Int32) IReadOnlyDbCollection<TDbDataModel>.Reverse(Int32, Int32) IReadOnlyDbCollection<TDbDataModel>.Reverse() IReadOnlyDbCollection<TDbDataModel>.Sort(Int32, Int32, IComparer<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.Sort(Comparison<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.Sort() IReadOnlyDbCollection<TDbDataModel>.Sort(IComparer<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.ToArray() IReadOnlyDbCollection<TDbDataModel>.ToList() IReadOnlyDbCollection<TDbDataModel>.ToListAsync() IXMLSerializable<TDbDataModel>.Serialize(TextWriter) IXMLSerializable<TDbDataModel>.SerializeAsync(TextWriter) IXMLSerializable<TDbDataModel>.Serialize(XmlWriter) IXMLSerializable<TDbDataModel>.SerializeAsync(XmlWriter) IJsonSerializable<TDbDataModel>.ToJson() IJsonSerializable<TDbDataModel>.ToJsonAsync() Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IDbResponse<TDbDataModel> : IEnumerable<TDbDataModel>, IEnumerable, IReadOnlyDbCollection<TDbDataModel>, IXMLSerializable<TDbDataModel>, IJsonSerializable<TDbDataModel> where TDbDataModel : DbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. Properties | Improve this Doc View Source CommandId Gets the command identifier. Declaration Guid CommandId { get; } Property Value Type Description System.Guid The command identifier. | Improve this Doc View Source Error Gets the error. Declaration Exception Error { get; } Property Value Type Description System.Exception The error. | Improve this Doc View Source HasDataBindingErrors Gets a value indicating whether this instance has data binding errors. Declaration bool HasDataBindingErrors { get; } Property Value Type Description System.Boolean true if this instance has data binding errors; otherwise, false . | Improve this Doc View Source HasError Gets a value indicating whether this instance has error. Declaration bool HasError { get; } Property Value Type Description System.Boolean true if this instance has error; otherwise, false . | Improve this Doc View Source IsNull Gets a value indicating whether this instance is null. Declaration bool IsNull { get; } Property Value Type Description System.Boolean true if this instance is null; otherwise, false . | Improve this Doc View Source ReturnValue Gets the return value. Declaration int ReturnValue { get; } Property Value Type Description System.Int32 The return value. Methods | Improve this Doc View Source GetOutputModel<T>() Gets the output model. Declaration T GetOutputModel<T>() where T : DbDataModel Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetOutputModelAsync<T>() Gets the output model asynchronous. Declaration Task<T> GetOutputModelAsync<T>() where T : DbDataModel Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T | Improve this Doc View Source GetOutputValue(String) Gets the output value. Declaration object GetOutputValue(string key) Parameters Type Name Description System.String key The key. Returns Type Description System.Object | Improve this Doc View Source GetOutputValue<T>(String) Gets the output value. Declaration T GetOutputValue<T>(string key) Parameters Type Name Description System.String key The key. Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetOutputValueAsync(String) Gets the output value asynchronous. Declaration Task<object> GetOutputValueAsync(string key) Parameters Type Name Description System.String key The key. Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source GetOutputValueAsync<T>(String) Gets the output value asynchronous. Declaration Task<T> GetOutputValueAsync<T>(string key) Parameters Type Name Description System.String key The key. Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T"
  },
  "api/DbFacade.DataLayer.Models.IJsonSerializable-1.html": {
    "href": "api/DbFacade.DataLayer.Models.IJsonSerializable-1.html",
    "title": "Interface IJsonSerializable<TDbDataModel> | DbFacade",
    "keywords": "Interface IJsonSerializable<TDbDataModel> Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IJsonSerializable<TDbDataModel> where TDbDataModel : DbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. Methods | Improve this Doc View Source ToJson() Converts to json. Declaration string ToJson() Returns Type Description System.String | Improve this Doc View Source ToJsonAsync() Converts to jsonasync. Declaration Task<string> ToJsonAsync() Returns Type Description System.Threading.Tasks.Task < System.String >"
  },
  "api/DbFacade.DataLayer.Models.IReadOnlyDbCollection-1.html": {
    "href": "api/DbFacade.DataLayer.Models.IReadOnlyDbCollection-1.html",
    "title": "Interface IReadOnlyDbCollection<TDbDataModel> | DbFacade",
    "keywords": "Interface IReadOnlyDbCollection<TDbDataModel> Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IReadOnlyDbCollection<TDbDataModel> where TDbDataModel : DbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. Methods | Improve this Doc View Source Contains(TDbDataModel) Determines whether this instance contains the object. Declaration bool Contains(TDbDataModel item) Parameters Type Name Description TDbDataModel item The item. Returns Type Description System.Boolean true if [contains] [the specified item]; otherwise, false . | Improve this Doc View Source Count() Counts this instance. Declaration int Count() Returns Type Description System.Int32 | Improve this Doc View Source Exists(Predicate<TDbDataModel>) Existses the specified match. Declaration bool Exists(Predicate<TDbDataModel> match) Parameters Type Name Description System.Predicate <TDbDataModel> match The match. Returns Type Description System.Boolean | Improve this Doc View Source Find(Predicate<TDbDataModel>) Finds the specified match. Declaration TDbDataModel Find(Predicate<TDbDataModel> match) Parameters Type Name Description System.Predicate <TDbDataModel> match The match. Returns Type Description TDbDataModel | Improve this Doc View Source FindIndex(Int32, Int32, Predicate<TDbDataModel>) Finds the index. Declaration int FindIndex(int startIndex, int count, Predicate<TDbDataModel> match) Parameters Type Name Description System.Int32 startIndex The start index. System.Int32 count The count. System.Predicate <TDbDataModel> match The match. Returns Type Description System.Int32 | Improve this Doc View Source FindIndex(Int32, Predicate<TDbDataModel>) Finds the index. Declaration int FindIndex(int startIndex, Predicate<TDbDataModel> match) Parameters Type Name Description System.Int32 startIndex The start index. System.Predicate <TDbDataModel> match The match. Returns Type Description System.Int32 | Improve this Doc View Source FindIndex(Predicate<TDbDataModel>) Finds the index. Declaration int FindIndex(Predicate<TDbDataModel> match) Parameters Type Name Description System.Predicate <TDbDataModel> match The match. Returns Type Description System.Int32 | Improve this Doc View Source FindLastIndex(Int32, Int32, Predicate<TDbDataModel>) Finds the last index. Declaration int FindLastIndex(int startIndex, int count, Predicate<TDbDataModel> match) Parameters Type Name Description System.Int32 startIndex The start index. System.Int32 count The count. System.Predicate <TDbDataModel> match The match. Returns Type Description System.Int32 | Improve this Doc View Source FindLastIndex(Predicate<TDbDataModel>) Finds the last index. Declaration int FindLastIndex(Predicate<TDbDataModel> match) Parameters Type Name Description System.Predicate <TDbDataModel> match The match. Returns Type Description System.Int32 | Improve this Doc View Source First() Firsts this instance. Declaration TDbDataModel First() Returns Type Description TDbDataModel | Improve this Doc View Source ForEach(Action<TDbDataModel>) Fors the each. Declaration void ForEach(Action<TDbDataModel> action) Parameters Type Name Description System.Action <TDbDataModel> action The action. | Improve this Doc View Source IndexOf(TDbDataModel) Indexes the of. Declaration int IndexOf(TDbDataModel item) Parameters Type Name Description TDbDataModel item The item. Returns Type Description System.Int32 | Improve this Doc View Source IndexOf(TDbDataModel, Int32) Indexes the of. Declaration int IndexOf(TDbDataModel item, int index) Parameters Type Name Description TDbDataModel item The item. System.Int32 index The index. Returns Type Description System.Int32 | Improve this Doc View Source IndexOf(TDbDataModel, Int32, Int32) Indexes the of. Declaration int IndexOf(TDbDataModel item, int index, int count) Parameters Type Name Description TDbDataModel item The item. System.Int32 index The index. System.Int32 count The count. Returns Type Description System.Int32 | Improve this Doc View Source LastIndexOf(TDbDataModel) Lasts the index of. Declaration int LastIndexOf(TDbDataModel item) Parameters Type Name Description TDbDataModel item The item. Returns Type Description System.Int32 | Improve this Doc View Source LastIndexOf(TDbDataModel, Int32) Lasts the index of. Declaration int LastIndexOf(TDbDataModel item, int index) Parameters Type Name Description TDbDataModel item The item. System.Int32 index The index. Returns Type Description System.Int32 | Improve this Doc View Source LastIndexOf(TDbDataModel, Int32, Int32) Lasts the index of. Declaration int LastIndexOf(TDbDataModel item, int index, int count) Parameters Type Name Description TDbDataModel item The item. System.Int32 index The index. System.Int32 count The count. Returns Type Description System.Int32 | Improve this Doc View Source Reverse() Reverses this instance. Declaration void Reverse() | Improve this Doc View Source Reverse(Int32, Int32) Reverses the specified index. Declaration void Reverse(int index, int count) Parameters Type Name Description System.Int32 index The index. System.Int32 count The count. | Improve this Doc View Source Sort() Sorts this instance. Declaration void Sort() | Improve this Doc View Source Sort(IComparer<TDbDataModel>) Sorts the specified comparer. Declaration void Sort(IComparer<TDbDataModel> comparer) Parameters Type Name Description System.Collections.Generic.IComparer <TDbDataModel> comparer The comparer. | Improve this Doc View Source Sort(Comparison<TDbDataModel>) Sorts the specified comparison. Declaration void Sort(Comparison<TDbDataModel> comparison) Parameters Type Name Description System.Comparison <TDbDataModel> comparison The comparison. | Improve this Doc View Source Sort(Int32, Int32, IComparer<TDbDataModel>) Sorts the specified index. Declaration void Sort(int index, int count, IComparer<TDbDataModel> comparer) Parameters Type Name Description System.Int32 index The index. System.Int32 count The count. System.Collections.Generic.IComparer <TDbDataModel> comparer The comparer. | Improve this Doc View Source ToArray() Converts to array. Declaration TDbDataModel[] ToArray() Returns Type Description TDbDataModel[] | Improve this Doc View Source ToList() Converts to list. Declaration List<TDbDataModel> ToList() Returns Type Description System.Collections.Generic.List <TDbDataModel> | Improve this Doc View Source ToListAsync() Converts to listasync. Declaration Task<List<TDbDataModel>> ToListAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDbDataModel>>"
  },
  "api/DbFacade.DataLayer.Models.IXMLSerializable-1.html": {
    "href": "api/DbFacade.DataLayer.Models.IXMLSerializable-1.html",
    "title": "Interface IXMLSerializable<TDbDataModel> | DbFacade",
    "keywords": "Interface IXMLSerializable<TDbDataModel> Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IXMLSerializable<TDbDataModel> where TDbDataModel : DbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. Methods | Improve this Doc View Source Serialize(TextWriter) Serializes the specified text writer. Declaration void Serialize(TextWriter textWriter) Parameters Type Name Description System.IO.TextWriter textWriter The text writer. | Improve this Doc View Source Serialize(XmlWriter) Serializes the specified XML writer. Declaration void Serialize(XmlWriter xmlWriter) Parameters Type Name Description System.Xml.XmlWriter xmlWriter The XML writer. | Improve this Doc View Source SerializeAsync(TextWriter) Serializes the asynchronous. Declaration Task SerializeAsync(TextWriter textWriter) Parameters Type Name Description System.IO.TextWriter textWriter The text writer. Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source SerializeAsync(XmlWriter) Serializes the asynchronous. Declaration Task SerializeAsync(XmlWriter xmlWriter) Parameters Type Name Description System.Xml.XmlWriter xmlWriter The XML writer. Returns Type Description System.Threading.Tasks.Task"
  },
  "api/DbFacade.DataLayer.Models.Validators.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.html",
    "title": "Namespace DbFacade.DataLayer.Models.Validators | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.Models.Validators Interfaces IValidationResult IValidator<TDbParams>"
  },
  "api/DbFacade.DataLayer.Models.Validators.IValidationResult.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.IValidationResult.html",
    "title": "Interface IValidationResult | DbFacade",
    "keywords": "Interface IValidationResult Namespace : DbFacade.DataLayer.Models.Validators Assembly : DbFacade.dll Syntax public interface IValidationResult Properties | Improve this Doc View Source Errors Gets the errors. Declaration IEnumerable<IValidationRuleResult> Errors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IValidationRuleResult > The errors. | Improve this Doc View Source IsValid Returns true if ... is valid. Declaration bool IsValid { get; } Property Value Type Description System.Boolean true if this instance is valid; otherwise, false ."
  },
  "api/DbFacade.DataLayer.Models.Validators.IValidator-1.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.IValidator-1.html",
    "title": "Interface IValidator<TDbParams> | DbFacade",
    "keywords": "Interface IValidator<TDbParams> Namespace : DbFacade.DataLayer.Models.Validators Assembly : DbFacade.dll Syntax public interface IValidator<TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. Properties | Improve this Doc View Source Count Gets the count. Declaration int Count { get; } Property Value Type Description System.Int32 The count. | Improve this Doc View Source Rules Gets the rules. Declaration ValidationRuleFactory<TDbParams> Rules { get; } Property Value Type Description ValidationRuleFactory <TDbParams> The rules. Methods | Improve this Doc View Source Add(IValidationRule<TDbParams>) Adds the specified rule. Declaration void Add(IValidationRule<TDbParams> rule) Parameters Type Name Description IValidationRule <TDbParams> rule The rule. | Improve this Doc View Source AddAsync(IValidationRule<TDbParams>) Adds the asynchronous. Declaration Task AddAsync(IValidationRule<TDbParams> rule) Parameters Type Name Description IValidationRule <TDbParams> rule The rule. Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Validate(TDbParams) Validates the specified parameters model. Declaration IValidationResult Validate(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description IValidationResult | Improve this Doc View Source ValidateAsync(TDbParams) Validates the asynchronous. Declaration Task<IValidationResult> ValidateAsync(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description System.Threading.Tasks.Task < IValidationResult >"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.EmailDomainMode.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.EmailDomainMode.html",
    "title": "Enum EmailDomainMode | DbFacade",
    "keywords": "Enum EmailDomainMode Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public enum EmailDomainMode Fields Name Description AllowAll The allow all Blacklist The blacklist Whitelist The whitelist"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.html",
    "title": "Namespace DbFacade.DataLayer.Models.Validators.Rules | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.Models.Validators.Rules Classes ValidationRule<TDbParams> Interfaces IValidationRule<TDbParams> IValidationRuleResult Enums EmailDomainMode ValidationStatus Delegates ValidationRule<TDbParams>.DelegateRuleHandler<T> ValidationRule<TDbParams>.DelegateRuleHandlerAsync<T>"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.IValidationRule-1.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.IValidationRule-1.html",
    "title": "Interface IValidationRule<TDbParams> | DbFacade",
    "keywords": "Interface IValidationRule<TDbParams> Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public interface IValidationRule<TDbParams> Type Parameters Name Description TDbParams The type of the b parameters. Methods | Improve this Doc View Source Validate(TDbParams) Validates the specified parameters model. Declaration IValidationRuleResult Validate(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description IValidationRuleResult | Improve this Doc View Source ValidateAsync(TDbParams) Validates the asynchronous. Declaration Task<IValidationRuleResult> ValidateAsync(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description System.Threading.Tasks.Task < IValidationRuleResult >"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.IValidationRuleResult.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.IValidationRuleResult.html",
    "title": "Interface IValidationRuleResult | DbFacade",
    "keywords": "Interface IValidationRuleResult Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public interface IValidationRuleResult Properties | Improve this Doc View Source ErrorMessage Gets the error message. Declaration string ErrorMessage { get; } Property Value Type Description System.String The error message. | Improve this Doc View Source Model Gets the model. Declaration object Model { get; } Property Value Type Description System.Object The model. | Improve this Doc View Source Status Gets the status. Declaration ValidationStatus Status { get; } Property Value Type Description ValidationStatus The status."
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationRule-1.DelegateRuleHandler-1.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationRule-1.DelegateRuleHandler-1.html",
    "title": "Delegate ValidationRule<TDbParams>.DelegateRuleHandler<T> | DbFacade",
    "keywords": "Delegate ValidationRule<TDbParams>.DelegateRuleHandler<T> Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public delegate bool DelegateRuleHandler<T>(T value); Parameters Type Name Description T value The value. Returns Type Description System.Boolean Type Parameters Name Description T"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationRule-1.DelegateRuleHandlerAsync-1.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationRule-1.DelegateRuleHandlerAsync-1.html",
    "title": "Delegate ValidationRule<TDbParams>.DelegateRuleHandlerAsync<T> | DbFacade",
    "keywords": "Delegate ValidationRule<TDbParams>.DelegateRuleHandlerAsync<T> Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public delegate Task<bool> DelegateRuleHandlerAsync<T>(T value); Parameters Type Name Description T value The value. Returns Type Description System.Threading.Tasks.Task < System.Boolean > Type Parameters Name Description T"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationRule-1.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationRule-1.html",
    "title": "Class ValidationRule<TDbParams> | DbFacade",
    "keywords": "Class ValidationRule<TDbParams> Inheritance System.Object ValidationRule<TDbParams> Implements IValidationRule <TDbParams> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public abstract class ValidationRule<TDbParams> : IValidationRule<TDbParams> Type Parameters Name Description TDbParams The type of the b parameters. Constructors | Improve this Doc View Source ValidationRule() Initializes a new instance of the ValidationRule<TDbParams> class. Declaration protected ValidationRule() Properties | Improve this Doc View Source GetParamFunc Gets the get parameter function. Declaration protected Func<TDbParams, object> GetParamFunc { get; } Property Value Type Description System.Func <TDbParams, System.Object > The get parameter function. | Improve this Doc View Source IsNullable Gets a value indicating whether this instance is nullable. Declaration protected bool IsNullable { get; } Property Value Type Description System.Boolean true if this instance is nullable; otherwise, false . | Improve this Doc View Source ParamsValue Gets the parameters value. Declaration protected object ParamsValue { get; } Property Value Type Description System.Object The parameters value. Methods | Improve this Doc View Source GetErrorMessageCore() Gets the error message core. Declaration protected virtual string GetErrorMessageCore() Returns Type Description System.String | Improve this Doc View Source GetErrorMessageCoreAsync() Gets the error message core asynchronous. Declaration protected virtual async Task<string> GetErrorMessageCoreAsync() Returns Type Description System.Threading.Tasks.Task < System.String > | Improve this Doc View Source GetRules() Gets the rules. Declaration public static ValidationRule<TDbParams> GetRules() Returns Type Description ValidationRule <TDbParams> | Improve this Doc View Source IsNumber(Func<TDbParams, String>, Boolean) Determines whether the specified selector is number. Declaration public static IValidationRule<TDbParams> IsNumber(Func<TDbParams, string> selector, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source Validate(TDbParams) Validates the specified parameters model. Declaration public IValidationRuleResult Validate(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description IValidationRuleResult | Improve this Doc View Source ValidateAsync(TDbParams) Validates the asynchronous. Declaration public async Task<IValidationRuleResult> ValidateAsync(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description System.Threading.Tasks.Task < IValidationRuleResult > | Improve this Doc View Source ValidateRule() Validates the rule. Declaration protected virtual bool ValidateRule() Returns Type Description System.Boolean | Improve this Doc View Source ValidateRuleAsync() Validates the rule asynchronous. Declaration protected virtual async Task<bool> ValidateRuleAsync() Returns Type Description System.Threading.Tasks.Task < System.Boolean > Implements IValidationRule<TDbParams> See Also IValidationRule <TDbParams> IValidationRule <TDbParams> IValidationRule <TDbParams> IValidationRule <TDbParams>"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationStatus.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationStatus.html",
    "title": "Enum ValidationStatus | DbFacade",
    "keywords": "Enum ValidationStatus Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public enum ValidationStatus Fields Name Description FAIL The fail PASS The pass"
  },
  "api/DbFacade.Exceptions.DbConnectionConfigNotRegisteredException.html": {
    "href": "api/DbFacade.Exceptions.DbConnectionConfigNotRegisteredException.html",
    "title": "Class DbConnectionConfigNotRegisteredException | DbFacade",
    "keywords": "Class DbConnectionConfigNotRegisteredException Inheritance System.Object System.Exception FacadeException DbConnectionConfigNotRegisteredException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : DbFacade.Exceptions Assembly : DbFacade.dll Syntax public class DbConnectionConfigNotRegisteredException : FacadeException, ISerializable, _Exception Methods | Improve this Doc View Source Name() Names this instance. Declaration public override string Name() Returns Type Description System.String Overrides FacadeException.Name() Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/DbFacade.Exceptions.FacadeException.html": {
    "href": "api/DbFacade.Exceptions.FacadeException.html",
    "title": "Class FacadeException | DbFacade",
    "keywords": "Class FacadeException Inheritance System.Object System.Exception FacadeException DbConnectionConfigNotRegisteredException SQLExecutionException ValidationException<DbParams> Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : DbFacade.Exceptions Assembly : DbFacade.dll Syntax public class FacadeException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source FacadeException() Initializes a new instance of the FacadeException class. Declaration public FacadeException() | Improve this Doc View Source FacadeException(String) Initializes a new instance of the FacadeException class. Declaration public FacadeException(string errorMessage) Parameters Type Name Description System.String errorMessage The error message. | Improve this Doc View Source FacadeException(String, Exception) Initializes a new instance of the FacadeException class. Declaration public FacadeException(string errorMessage, Exception innerException) Parameters Type Name Description System.String errorMessage The error message. System.Exception innerException The inner exception. Methods | Improve this Doc View Source Name() Names this instance. Declaration public virtual string Name() Returns Type Description System.String Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/DbFacade.Exceptions.html": {
    "href": "api/DbFacade.Exceptions.html",
    "title": "Namespace DbFacade.Exceptions | DbFacade",
    "keywords": "Namespace DbFacade.Exceptions Classes DbConnectionConfigNotRegisteredException FacadeException SQLExecutionException ValidationException<DbParams>"
  },
  "api/DbFacade.Exceptions.SQLExecutionException.html": {
    "href": "api/DbFacade.Exceptions.SQLExecutionException.html",
    "title": "Class SQLExecutionException | DbFacade",
    "keywords": "Class SQLExecutionException Inheritance System.Object System.Exception FacadeException SQLExecutionException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : DbFacade.Exceptions Assembly : DbFacade.dll Syntax public class SQLExecutionException : FacadeException, ISerializable, _Exception Properties | Improve this Doc View Source CommandText Gets the command text. Declaration public string CommandText { get; } Property Value Type Description System.String The command text. Methods | Improve this Doc View Source Name() Names this instance. Declaration public override string Name() Returns Type Description System.String Overrides FacadeException.Name() Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/DbFacade.Exceptions.ValidationException-1.html": {
    "href": "api/DbFacade.Exceptions.ValidationException-1.html",
    "title": "Class ValidationException<DbParams> | DbFacade",
    "keywords": "Class ValidationException<DbParams> Inheritance System.Object System.Exception FacadeException ValidationException<DbParams> Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : DbFacade.Exceptions Assembly : DbFacade.dll Syntax public class ValidationException<DbParams> : FacadeException, ISerializable, _Exception Type Parameters Name Description DbParams The type of the b parameters. Properties | Improve this Doc View Source Count Gets the count. Declaration public int Count { get; } Property Value Type Description System.Int32 The count. | Improve this Doc View Source Parameters Gets the parameters. Declaration public DbParams Parameters { get; } Property Value Type Description DbParams The parameters. | Improve this Doc View Source ValidationErrors Gets the validation errors. Declaration public IEnumerable<IValidationRuleResult> ValidationErrors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IValidationRuleResult > The validation errors. Methods | Improve this Doc View Source Name() Names this instance. Declaration public override string Name() Returns Type Description System.String Overrides FacadeException.Name() Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/DbFacade.Factories.DbCommandConfigFactory-1.html": {
    "href": "api/DbFacade.Factories.DbCommandConfigFactory-1.html",
    "title": "Class DbCommandConfigFactory<TDbConnectionConfig> | DbFacade",
    "keywords": "Class DbCommandConfigFactory<TDbConnectionConfig> Inheritance System.Object DbCommandConfigFactory<TDbConnectionConfig> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.Factories Assembly : DbFacade.dll Syntax public class DbCommandConfigFactory<TDbConnectionConfig> where TDbConnectionConfig : DbConnectionConfigBase Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. Methods | Improve this Doc View Source CreateFetchCommand(String, String, Boolean) Creates the fetch command. Declaration public static IDbCommandConfig CreateFetchCommand(string commandText, string label, bool requiresValidation = false) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description IDbCommandConfig | Improve this Doc View Source CreateFetchCommand(String, String, CommandType, Boolean) Creates the fetch command. Declaration public static IDbCommandConfig CreateFetchCommand(string commandText, string label, CommandType commandType, bool requiresValidation = false) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Data.CommandType commandType Type of the command. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description IDbCommandConfig | Improve this Doc View Source CreateFetchCommandAsync(String, String, Boolean) Creates the fetch command asynchronous. Declaration public static async Task<IDbCommandConfig> CreateFetchCommandAsync(string commandText, string label, bool requiresValidation = false) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description System.Threading.Tasks.Task < IDbCommandConfig > | Improve this Doc View Source CreateFetchCommandAsync(String, String, CommandType, Boolean) Creates the fetch command asynchronous. Declaration public static async Task<IDbCommandConfig> CreateFetchCommandAsync(string commandText, string label, CommandType commandType, bool requiresValidation = false) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Data.CommandType commandType Type of the command. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description System.Threading.Tasks.Task < IDbCommandConfig > | Improve this Doc View Source CreateTransactionCommand(String, String, Boolean) Creates the transaction command. Declaration public static IDbCommandConfig CreateTransactionCommand(string commandText, string label, bool requiresValidation = true) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description IDbCommandConfig | Improve this Doc View Source CreateTransactionCommand(String, String, CommandType, Boolean) Creates the transaction command. Declaration protected static IDbCommandConfig CreateTransactionCommand(string commandText, string label, CommandType commandType, bool requiresValidation = true) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Data.CommandType commandType Type of the command. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description IDbCommandConfig | Improve this Doc View Source CreateTransactionCommandAsync(String, String, Boolean) Creates the transaction command asynchronous. Declaration public static async Task<IDbCommandConfig> CreateTransactionCommandAsync(string commandText, string label, bool requiresValidation = true) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description System.Threading.Tasks.Task < IDbCommandConfig > | Improve this Doc View Source CreateTransactionCommandAsync(String, String, CommandType, Boolean) Creates the transaction command asynchronous. Declaration public static async Task<IDbCommandConfig> CreateTransactionCommandAsync(string commandText, string label, CommandType commandType, bool requiresValidation = true) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Data.CommandType commandType Type of the command. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description System.Threading.Tasks.Task < IDbCommandConfig >"
  },
  "api/DbFacade.Factories.DbCommandParameterConfigFactory-1.html": {
    "href": "api/DbFacade.Factories.DbCommandParameterConfigFactory-1.html",
    "title": "Class DbCommandParameterConfigFactory<TDbParams> | DbFacade",
    "keywords": "Class DbCommandParameterConfigFactory<TDbParams> Inheritance System.Object DbCommandParameterConfigFactory<TDbParams> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.Factories Assembly : DbFacade.dll Syntax public sealed class DbCommandParameterConfigFactory<TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. Methods | Improve this Doc View Source AnsiString(DelegateHandler<TDbParams, String>, Boolean) ANSIs the string. Declaration public IDbCommandParameterConfig<TDbParams> AnsiString(DelegateHandler<TDbParams, string> returnFunction, bool isNullable = true) Parameters Type Name Description DelegateHandler <TDbParams, System.String > returnFunction The return function. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source AnsiString(String, Boolean) ANSIs the string. Declaration public IDbCommandParameterConfig<TDbParams> AnsiString(string value, bool isNullable = true) Parameters Type Name Description System.String value The value. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source AnsiStringAsync(DelegateHandler<TDbParams, String>, Boolean) ANSIs the string asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> AnsiStringAsync(DelegateHandler<TDbParams, string> returnFunction, bool isNullable = true) Parameters Type Name Description DelegateHandler <TDbParams, System.String > returnFunction The return function. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source AnsiStringAsync(String, Boolean) ANSIs the string asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> AnsiStringAsync(string value, bool isNullable = true) Parameters Type Name Description System.String value The value. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source AnsiStringFixedLength(DelegateHandler<TDbParams, String>, Boolean) ANSIs the length of the string fixed. Declaration public IDbCommandParameterConfig<TDbParams> AnsiStringFixedLength(DelegateHandler<TDbParams, string> returnFunction, bool isNullable = true) Parameters Type Name Description DelegateHandler <TDbParams, System.String > returnFunction The return function. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source AnsiStringFixedLength(String, Boolean) ANSIs the length of the string fixed. Declaration public IDbCommandParameterConfig<TDbParams> AnsiStringFixedLength(string value, bool isNullable = true) Parameters Type Name Description System.String value The value. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source AnsiStringFixedLengthAsync(DelegateHandler<TDbParams, String>, Boolean) ANSIs the string fixed length asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> AnsiStringFixedLengthAsync(DelegateHandler<TDbParams, string> returnFunction, bool isNullable = true) Parameters Type Name Description DelegateHandler <TDbParams, System.String > returnFunction The return function. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source AnsiStringFixedLengthAsync(String, Boolean) ANSIs the string fixed length asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> AnsiStringFixedLengthAsync(string value, bool isNullable = true) Parameters Type Name Description System.String value The value. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source Create<T>(T) Creates the specified value. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(T value) Parameters Type Name Description T value The value. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Create<T>(T, Boolean) Creates the specified value. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(T value, bool isNullable) Parameters Type Name Description T value The value. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Create<T>(T, DbType, Boolean) Creates the specified value. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(T value, DbType dbType, bool isNullable) Parameters Type Name Description T value The value. System.Data.DbType dbType Type of the database. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Create<T>(DelegateHandler<TDbParams, T>) Creates the specified return function. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(DelegateHandler<TDbParams, T> returnFunction) Parameters Type Name Description DelegateHandler <TDbParams, T> returnFunction The return function. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Create<T>(DelegateHandler<TDbParams, T>, Boolean) Creates the specified return function. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(DelegateHandler<TDbParams, T> returnFunction, bool isNullable) Parameters Type Name Description DelegateHandler <TDbParams, T> returnFunction The return function. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Create<T>(DelegateHandler<TDbParams, T>, DbType, Boolean) Creates the specified return function. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(DelegateHandler<TDbParams, T> returnFunction, DbType dbType, bool isNullable) Parameters Type Name Description DelegateHandler <TDbParams, T> returnFunction The return function. System.Data.DbType dbType Type of the database. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source CreateAsync<T>(T) Creates the asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> CreateAsync<T>(T value) Parameters Type Name Description T value The value. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source CreateAsync<T>(T, Boolean) Creates the asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> CreateAsync<T>(T value, bool isNullable) Parameters Type Name Description T value The value. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source CreateAsync<T>(T, DbType, Boolean) Creates the asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> CreateAsync<T>(T value, DbType dbType, bool isNullable) Parameters Type Name Description T value The value. System.Data.DbType dbType Type of the database. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source CreateAsync<T>(DelegateHandler<TDbParams, T>) Creates the asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> CreateAsync<T>(DelegateHandler<TDbParams, T> returnFunction) Parameters Type Name Description DelegateHandler <TDbParams, T> returnFunction The return function. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source CreateAsync<T>(DelegateHandler<TDbParams, T>, Boolean) Creates the asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> CreateAsync<T>(DelegateHandler<TDbParams, T> returnFunction, bool isNullable) Parameters Type Name Description DelegateHandler <TDbParams, T> returnFunction The return function. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source CreateAsync<T>(DelegateHandler<TDbParams, T>, DbType, Boolean) Creates the asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> CreateAsync<T>(DelegateHandler<TDbParams, T> returnFunction, DbType dbType, bool isNullable) Parameters Type Name Description DelegateHandler <TDbParams, T> returnFunction The return function. System.Data.DbType dbType Type of the database. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source CreateReturnValue() Creates the return value. Declaration public IDbCommandParameterConfig<TDbParams> CreateReturnValue() Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source CreateReturnValueAsync() Creates the return value asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> CreateReturnValueAsync() Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source DateTime2(DelegateHandler<TDbParams, DateTime>) Dates the time2. Declaration public IDbCommandParameterConfig<TDbParams> DateTime2(DelegateHandler<TDbParams, DateTime> returnFunction) Parameters Type Name Description DelegateHandler <TDbParams, System.DateTime > returnFunction The return function. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source DateTime2(DelegateHandler<TDbParams, Nullable<DateTime>>) Dates the time2. Declaration public IDbCommandParameterConfig<TDbParams> DateTime2(DelegateHandler<TDbParams, DateTime?> returnFunction) Parameters Type Name Description DelegateHandler <TDbParams, System.Nullable < System.DateTime >> returnFunction The return function. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source DateTime2(DateTime) Dates the time2. Declaration public IDbCommandParameterConfig<TDbParams> DateTime2(DateTime value) Parameters Type Name Description System.DateTime value The value. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source DateTime2Async(DelegateHandler<TDbParams, DateTime>) Dates the time2 asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> DateTime2Async(DelegateHandler<TDbParams, DateTime> returnFunction) Parameters Type Name Description DelegateHandler <TDbParams, System.DateTime > returnFunction The return function. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source DateTime2Async(DelegateHandler<TDbParams, Nullable<DateTime>>) Dates the time2 asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> DateTime2Async(DelegateHandler<TDbParams, DateTime?> returnFunction) Parameters Type Name Description DelegateHandler <TDbParams, System.Nullable < System.DateTime >> returnFunction The return function. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source DateTime2Async(DateTime) Dates the time2 asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> DateTime2Async(DateTime value) Parameters Type Name Description System.DateTime value The value. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputAnsiString(Nullable<Int32>) Outputs the ANSI string. Declaration public IDbCommandParameterConfig<TDbParams> OutputAnsiString(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputAnsiStringAsync(Nullable<Int32>) Outputs the ANSI string asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputAnsiStringAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputAnsiStringFixedLength(Nullable<Int32>) Outputs the length of the ANSI string fixed. Declaration public IDbCommandParameterConfig<TDbParams> OutputAnsiStringFixedLength(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputAnsiStringFixedLengthAsync(Nullable<Int32>) Outputs the ANSI string fixed length asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputAnsiStringFixedLengthAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputBinary(Nullable<Int32>) Outputs the binary. Declaration public IDbCommandParameterConfig<TDbParams> OutputBinary(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputBinaryAsync(Nullable<Int32>) Outputs the binary asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputBinaryAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputBoolean(Nullable<Int32>) Outputs the boolean. Declaration public IDbCommandParameterConfig<TDbParams> OutputBoolean(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputBooleanAsync(Nullable<Int32>) Outputs the boolean asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputBooleanAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputByte(Nullable<Int32>) Outputs the byte. Declaration public IDbCommandParameterConfig<TDbParams> OutputByte(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputByteAsync(Nullable<Int32>) Outputs the byte asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputByteAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputChar(Nullable<Int32>) Outputs the character. Declaration public IDbCommandParameterConfig<TDbParams> OutputChar(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputCharArray(Nullable<Int32>) Outputs the character array. Declaration public IDbCommandParameterConfig<TDbParams> OutputCharArray(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputCharArrayAsync(Nullable<Int32>) Outputs the character array asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputCharArrayAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputCharAsync(Nullable<Int32>) Outputs the character asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputCharAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputDateTime(Nullable<Int32>) Outputs the date time. Declaration public IDbCommandParameterConfig<TDbParams> OutputDateTime(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputDateTime2(Nullable<Int32>) Outputs the date time2. Declaration public IDbCommandParameterConfig<TDbParams> OutputDateTime2(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputDateTime2Async(Nullable<Int32>) Outputs the date time2 asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputDateTime2Async(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputDateTimeAsync(Nullable<Int32>) Outputs the date time asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputDateTimeAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputDateTimeOffset(Nullable<Int32>) Outputs the date time offset. Declaration public IDbCommandParameterConfig<TDbParams> OutputDateTimeOffset(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputDateTimeOffsetAsync(Nullable<Int32>) Outputs the date time offset asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputDateTimeOffsetAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputDecimal(Nullable<Int32>) Outputs the decimal. Declaration public IDbCommandParameterConfig<TDbParams> OutputDecimal(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputDecimalAsync(Nullable<Int32>) Outputs the decimal asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputDecimalAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputDouble(Nullable<Int32>) Outputs the double. Declaration public IDbCommandParameterConfig<TDbParams> OutputDouble(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputDoubleAsync(Nullable<Int32>) Outputs the double asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputDoubleAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputGuid(Nullable<Int32>) Outputs the unique identifier. Declaration public IDbCommandParameterConfig<TDbParams> OutputGuid(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputGuidAsync(Nullable<Int32>) Outputs the unique identifier asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputGuidAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputInt16(Nullable<Int32>) Outputs the int16. Declaration public IDbCommandParameterConfig<TDbParams> OutputInt16(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputInt16Async(Nullable<Int32>) Outputs the int16 asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputInt16Async(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputInt32(Nullable<Int32>) Outputs the int32. Declaration public IDbCommandParameterConfig<TDbParams> OutputInt32(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputInt32Async(Nullable<Int32>) Outputs the int32 asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputInt32Async(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputInt64(Nullable<Int32>) Outputs the int64. Declaration public IDbCommandParameterConfig<TDbParams> OutputInt64(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputInt64Async(Nullable<Int32>) Outputs the int64 asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputInt64Async(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputSByte(Nullable<Int32>) Outputs the s byte. Declaration public IDbCommandParameterConfig<TDbParams> OutputSByte(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputSByteAsync(Nullable<Int32>) Outputs the s byte asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputSByteAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputSingle(Nullable<Int32>) Outputs the single. Declaration public IDbCommandParameterConfig<TDbParams> OutputSingle(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputSingleAsync(Nullable<Int32>) Outputs the single asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputSingleAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputString(Nullable<Int32>) Outputs the string. Declaration public IDbCommandParameterConfig<TDbParams> OutputString(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputStringAsync(Nullable<Int32>) Outputs the string asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputStringAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputTimeSpan(Nullable<Int32>) Outputs the time span. Declaration public IDbCommandParameterConfig<TDbParams> OutputTimeSpan(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputTimeSpanAsync(Nullable<Int32>) Outputs the time span asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputTimeSpanAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputUInt16(Nullable<Int32>) Outputs the u int16. Declaration public IDbCommandParameterConfig<TDbParams> OutputUInt16(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputUInt16Async(Nullable<Int32>) Outputs the u int16 asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputUInt16Async(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputUInt32(Nullable<Int32>) Outputs the u int32. Declaration public IDbCommandParameterConfig<TDbParams> OutputUInt32(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputUInt32Async(Nullable<Int32>) Outputs the u int32 asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputUInt32Async(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputUInt64(Nullable<Int32>) Outputs the u int64. Declaration public IDbCommandParameterConfig<TDbParams> OutputUInt64(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputUInt64Async(Nullable<Int32>) Outputs the u int64 asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputUInt64Async(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>> | Improve this Doc View Source OutputXml(Nullable<Int32>) Outputs the XML. Declaration public IDbCommandParameterConfig<TDbParams> OutputXml(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputXmlAsync(Nullable<Int32>) Outputs the XML asynchronous. Declaration public async Task<IDbCommandParameterConfig<TDbParams>> OutputXmlAsync(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description System.Threading.Tasks.Task < IDbCommandParameterConfig <TDbParams>>"
  },
  "api/DbFacade.Factories.DelegateHandler-2.html": {
    "href": "api/DbFacade.Factories.DelegateHandler-2.html",
    "title": "Delegate DelegateHandler<TDbParams, T> | DbFacade",
    "keywords": "Delegate DelegateHandler<TDbParams, T> Namespace : DbFacade.Factories Assembly : DbFacade.dll Syntax public delegate T DelegateHandler<TDbParams, T>(TDbParams value); Parameters Type Name Description TDbParams value The value. Returns Type Description T Type Parameters Name Description TDbParams The type of the database parameters. T"
  },
  "api/DbFacade.Factories.html": {
    "href": "api/DbFacade.Factories.html",
    "title": "Namespace DbFacade.Factories | DbFacade",
    "keywords": "Namespace DbFacade.Factories Classes DbCommandConfigFactory<TDbConnectionConfig> DbCommandParameterConfigFactory<TDbParams> ValidationRuleFactory<TDbParams> ValidatorFactory Delegates DelegateHandler<TDbParams, T>"
  },
  "api/DbFacade.Factories.ValidationRuleFactory-1.html": {
    "href": "api/DbFacade.Factories.ValidationRuleFactory-1.html",
    "title": "Class ValidationRuleFactory<TDbParams> | DbFacade",
    "keywords": "Class ValidationRuleFactory<TDbParams> Inheritance System.Object ValidationRuleFactory<TDbParams> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.Factories Assembly : DbFacade.dll Syntax public sealed class ValidationRuleFactory<TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. Methods | Improve this Doc View Source BeforeAsync(Func<TDbParams, Nullable<DateTime>>, DateTime) Befores the asynchronous. Declaration public async Task<IValidationRule<TDbParams>> BeforeAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source CreateFactoryAsync() Creates the factory asynchronous. Declaration public static async Task<ValidationRuleFactory<TDbParams>> CreateFactoryAsync() Returns Type Description System.Threading.Tasks.Task < ValidationRuleFactory <TDbParams>> | Improve this Doc View Source Delegate(Func<TDbParams, Boolean>, String) Delegates the specified handler. Declaration public IValidationRule<TDbParams> Delegate(Func<TDbParams, bool> handler, string errorMessage) Parameters Type Name Description System.Func <TDbParams, System.Boolean > handler The handler. System.String errorMessage The error message. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source Delegate<T>(Func<TDbParams, T>, Func<T, Boolean>) Delegates the specified selector. Declaration public IValidationRule<TDbParams> Delegate<T>(Func<TDbParams, T> selector, Func<T, bool> handler) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. System.Func <T, System.Boolean > handler The handler. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source DelegateAsync(Func<TDbParams, Task<Boolean>>, String) Delegates the asynchronous. Declaration public async Task<IValidationRule<TDbParams>> DelegateAsync(Func<TDbParams, Task<bool>> handler, string errorMessage) Parameters Type Name Description System.Func <TDbParams, System.Threading.Tasks.Task < System.Boolean >> handler The handler. System.String errorMessage The error message. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source DelegateAsync<T>(Func<TDbParams, T>, Func<T, Task<Boolean>>) Delegates the asynchronous. Declaration public async Task<IValidationRule<TDbParams>> DelegateAsync<T>(Func<TDbParams, T> selector, Func<T, Task<bool>> handler) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. System.Func <T, System.Threading.Tasks.Task < System.Boolean >> handler The handler. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source Email(Func<TDbParams, String>, Boolean) Emails the specified selector. Declaration public IValidationRule<TDbParams> Email(Func<TDbParams, string> selector, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source Email(Func<TDbParams, String>, IEnumerable<String>, EmailDomainMode, Boolean) Emails the specified selector. Declaration public IValidationRule<TDbParams> Email(Func<TDbParams, string> selector, IEnumerable<string> domains, EmailDomainMode mode, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Collections.Generic.IEnumerable < System.String > domains The domains. EmailDomainMode mode The mode. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source EmailAsync(Func<TDbParams, String>, Boolean) Emails the asynchronous. Declaration public async Task<IValidationRule<TDbParams>> EmailAsync(Func<TDbParams, string> selector, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source EmailAsync(Func<TDbParams, String>, IEnumerable<String>, EmailDomainMode, Boolean) Emails the asynchronous. Declaration public async Task<IValidationRule<TDbParams>> EmailAsync(Func<TDbParams, string> selector, IEnumerable<string> domains, EmailDomainMode mode, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Collections.Generic.IEnumerable < System.String > domains The domains. EmailDomainMode mode The mode. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source Equals<T>(Func<TDbParams, T>, T) Equalses the specified selector. Declaration public IValidationRule<TDbParams> Equals<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Equals<T>(Func<TDbParams, String>, T) Equalses the specified selector. Declaration public IValidationRule<TDbParams> Equals<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source EqualsAsync<T>(Func<TDbParams, T>, T) Equalses the asynchronous. Declaration public async Task<IValidationRule<TDbParams>> EqualsAsync<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source EqualsAsync<T>(Func<TDbParams, String>, T) Equalses the asynchronous. Declaration public async Task<IValidationRule<TDbParams>> EqualsAsync<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source GreaterThan<T>(Func<TDbParams, T>, T) Greaters the than. Declaration public IValidationRule<TDbParams> GreaterThan<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThan<T>(Func<TDbParams, String>, T) Greaters the than. Declaration public IValidationRule<TDbParams> GreaterThan<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThanAsync<T>(Func<TDbParams, T>, T) Greaters the than asynchronous. Declaration public async Task<IValidationRule<TDbParams>> GreaterThanAsync<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source GreaterThanAsync<T>(Func<TDbParams, String>, T) Greaters the than asynchronous. Declaration public async Task<IValidationRule<TDbParams>> GreaterThanAsync<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source GreaterThanOrEqual<T>(Func<TDbParams, T>, T) Greaters the than or equal. Declaration public IValidationRule<TDbParams> GreaterThanOrEqual<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThanOrEqual<T>(Func<TDbParams, String>, T) Greaters the than or equal. Declaration public IValidationRule<TDbParams> GreaterThanOrEqual<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThanOrEqualAsync<T>(Func<TDbParams, T>, T) Greaters the than or equal asynchronous. Declaration public async Task<IValidationRule<TDbParams>> GreaterThanOrEqualAsync<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source GreaterThanOrEqualAsync<T>(Func<TDbParams, String>, T) Greaters the than or equal asynchronous. Declaration public async Task<IValidationRule<TDbParams>> GreaterThanOrEqualAsync<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfterAsync(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether [is after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsAfterAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsAfterAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsAfterAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsAfterAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsAfterAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsAfterAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsAfterAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsAfterAsync(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsAfterAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsAfterAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsAfterAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsAfterAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsAfterAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsAfterAsync(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether [is after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsAfterAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBeforeAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsBeforeAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsBeforeAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsBeforeAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsBeforeAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsBeforeAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsBeforeAsync(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsBeforeAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsBeforeAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsBeforeAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsBeforeAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsBeforeAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsBeforeAsync(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether [is before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsBeforeAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsDateTime(Func<TDbParams, String>, String, Boolean) Determines whether [is date time] [the specified selector]. Declaration public IValidationRule<TDbParams> IsDateTime(Func<TDbParams, string> selector, string dateFormat = null, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsDateTime(Func<TDbParams, String>, String, CultureInfo, Boolean) Determines whether [is date time] [the specified selector]. Declaration public IValidationRule<TDbParams> IsDateTime(Func<TDbParams, string> selector, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsDateTime(Func<TDbParams, String>, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is date time] [the specified selector]. Declaration public IValidationRule<TDbParams> IsDateTime(Func<TDbParams, string> selector, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsDateTime(Func<TDbParams, String>, String, DateTimeStyles, Boolean) Determines whether [is date time] [the specified selector]. Declaration public IValidationRule<TDbParams> IsDateTime(Func<TDbParams, string> selector, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsDateTimeAsync(Func<TDbParams, String>, String, Boolean) Determines whether [is date time asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsDateTimeAsync(Func<TDbParams, string> selector, string dateFormat = null, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsDateTimeAsync(Func<TDbParams, String>, String, CultureInfo, Boolean) Determines whether [is date time asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsDateTimeAsync(Func<TDbParams, string> selector, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsDateTimeAsync(Func<TDbParams, String>, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is date time asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsDateTimeAsync(Func<TDbParams, string> selector, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsDateTimeAsync(Func<TDbParams, String>, String, DateTimeStyles, Boolean) Determines whether [is date time asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsDateTimeAsync(Func<TDbParams, string> selector, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNDigitString(Func<TDbParams, String>, Int32, Boolean) Determines whether [is n digit string] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNDigitString(Func<TDbParams, string> selector, int length, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 length The length. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNDigitStringAsync(Func<TDbParams, String>, Int32, Boolean) Determines whether [is n digit string asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNDigitStringAsync(Func<TDbParams, string> selector, int length, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 length The length. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNotNullOrEmpty(Func<TDbParams, String>) Determines whether [is not null or empty] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotNullOrEmpty(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotNullOrEmptyAsync(Func<TDbParams, String>) Determines whether [is not null or empty asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNotNullOrEmptyAsync(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNotNullOrWhiteSpace(Func<TDbParams, String>) Determines whether [is not null or white space] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotNullOrWhiteSpace(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotNullOrWhiteSpaceAsync(Func<TDbParams, String>) Determines whether [is not null or white space asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNotNullOrWhiteSpaceAsync(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOnAsync(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether [is not on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNotOnAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNotOnAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is not on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNotOnAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNotOnAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is not on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNotOnAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNotOnAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is not on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNotOnAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNotOnAsync(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is not on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNotOnAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNotOnAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is not on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNotOnAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNotOnAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is not on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNotOnAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNotOnAsync(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether [is not on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNotOnAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNullOrEmpty(Func<TDbParams, String>) Determines whether [is null or empty] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNullOrEmpty(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNullOrEmptyAsync(Func<TDbParams, String>) Determines whether [is null or empty asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNullOrEmptyAsync(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNullOrWhiteSpace(Func<TDbParams, String>) Determines whether [is null or white space] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNullOrWhiteSpace(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNullOrWhiteSpaceAsync(Func<TDbParams, String>) Determines whether [is null or white space asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNullOrWhiteSpaceAsync(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsNumber(Func<TDbParams, String>, Boolean) Determines whether the specified selector is number. Declaration public IValidationRule<TDbParams> IsNumber(Func<TDbParams, string> selector, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNumberAsync(Func<TDbParams, String>, Boolean) Determines whether [is number asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsNumberAsync(Func<TDbParams, string> selector, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnAsync(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether [is on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnAsync(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnAsync(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether [is on asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfterAsync(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether [is on or after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrAfterAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrAfterAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is on or after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrAfterAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrAfterAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is on or after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrAfterAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrAfterAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is on or after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrAfterAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrAfterAsync(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is on or after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrAfterAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrAfterAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is on or after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrAfterAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrAfterAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is on or after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrAfterAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrAfterAsync(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether [is on or after asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrAfterAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBeforeAsync(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether [is on or before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrBeforeAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrBeforeAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is on or before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrBeforeAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrBeforeAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is on or before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrBeforeAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrBeforeAsync(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is on or before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrBeforeAsync(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrBeforeAsync(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is on or before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrBeforeAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrBeforeAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is on or before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrBeforeAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrBeforeAsync(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is on or before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrBeforeAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsOnOrBeforeAsync(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether [is on or before asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsOnOrBeforeAsync(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source IsSocialSecurityNumber(Func<TDbParams, String>, Boolean, Boolean) Determines whether [is social security number] [the specified selector]. Declaration public IValidationRule<TDbParams> IsSocialSecurityNumber(Func<TDbParams, string> selector, bool allowDashes = true, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Boolean allowDashes if set to true [allow dashes]. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsSocialSecurityNumberAsync(Func<TDbParams, String>, Boolean, Boolean) Determines whether [is social security number asynchronous] [the specified selector]. Declaration public async Task<IValidationRule<TDbParams>> IsSocialSecurityNumberAsync(Func<TDbParams, string> selector, bool allowDashes = true, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Boolean allowDashes if set to true [allow dashes]. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source LengthEquals(Func<TDbParams, String>, Int32, Boolean) Lengthes the equals. Declaration public IValidationRule<TDbParams> LengthEquals(Func<TDbParams, string> selector, int limit, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 limit The limit. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source LengthEqualsAsync(Func<TDbParams, String>, Int32, Boolean) Lengthes the equals asynchronous. Declaration public async Task<IValidationRule<TDbParams>> LengthEqualsAsync(Func<TDbParams, string> selector, int limit, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 limit The limit. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source LessThan<T>(Func<TDbParams, T>, T) Lesses the than. Declaration public IValidationRule<TDbParams> LessThan<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source LessThan<T>(Func<TDbParams, String>, T) Lesses the than. Declaration public IValidationRule<TDbParams> LessThan<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source LessThanAsync<T>(Func<TDbParams, T>, T) Lesses the than asynchronous. Declaration public async Task<IValidationRule<TDbParams>> LessThanAsync<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source LessThanAsync<T>(Func<TDbParams, String>, T) Lesses the than asynchronous. Declaration public async Task<IValidationRule<TDbParams>> LessThanAsync<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source LessThanOrEqual<T>(Func<TDbParams, T>, T) Lesses the than or equal. Declaration public IValidationRule<TDbParams> LessThanOrEqual<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source LessThanOrEqual<T>(Func<TDbParams, String>, T) Lesses the than or equal. Declaration public IValidationRule<TDbParams> LessThanOrEqual<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source LessThanOrEqualAsync<T>(Func<TDbParams, T>, T) Lesses the than or equal asynchronous. Declaration public async Task<IValidationRule<TDbParams>> LessThanOrEqualAsync<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source LessThanOrEqualAsync<T>(Func<TDbParams, String>, T) Lesses the than or equal asynchronous. Declaration public async Task<IValidationRule<TDbParams>> LessThanOrEqualAsync<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source Match(Func<TDbParams, String>, String, Boolean) Matches the specified selector. Declaration public IValidationRule<TDbParams> Match(Func<TDbParams, string> selector, string regexMatchStr, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String regexMatchStr The regex match string. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source Match(Func<TDbParams, String>, String, RegexOptions, Boolean) Matches the specified selector. Declaration public IValidationRule<TDbParams> Match(Func<TDbParams, string> selector, string regexMatchStr, RegexOptions options, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String regexMatchStr The regex match string. System.Text.RegularExpressions.RegexOptions options The options. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source MatchAsync(Func<TDbParams, String>, String, Boolean) Matches the asynchronous. Declaration public async Task<IValidationRule<TDbParams>> MatchAsync(Func<TDbParams, string> selector, string regexMatchStr, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String regexMatchStr The regex match string. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source MatchAsync(Func<TDbParams, String>, String, RegexOptions, Boolean) Matches the asynchronous. Declaration public async Task<IValidationRule<TDbParams>> MatchAsync(Func<TDbParams, string> selector, string regexMatchStr, RegexOptions options, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String regexMatchStr The regex match string. System.Text.RegularExpressions.RegexOptions options The options. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source MaxLength(Func<TDbParams, String>, Int32, Boolean) Maximums the length. Declaration public IValidationRule<TDbParams> MaxLength(Func<TDbParams, string> selector, int limit, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 limit The limit. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source MaxLengthAsync(Func<TDbParams, String>, Int32, Boolean) Maximums the length asynchronous. Declaration public async Task<IValidationRule<TDbParams>> MaxLengthAsync(Func<TDbParams, string> selector, int limit, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 limit The limit. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source MinLength(Func<TDbParams, String>, Int32, Boolean) Minimums the length. Declaration public IValidationRule<TDbParams> MinLength(Func<TDbParams, string> selector, int limit, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 limit The limit. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source MinLengthAsync(Func<TDbParams, String>, Int32, Boolean) Minimums the length asynchronous. Declaration public async Task<IValidationRule<TDbParams>> MinLengthAsync(Func<TDbParams, string> selector, int limit, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 limit The limit. System.Boolean isNullable if set to true [is nullable]. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> | Improve this Doc View Source NotEqualTo<T>(Func<TDbParams, T>, T) Nots the equal to. Declaration public IValidationRule<TDbParams> NotEqualTo<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source NotEqualTo<T>(Func<TDbParams, String>, T) Nots the equal to. Declaration public IValidationRule<TDbParams> NotEqualTo<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source NotEqualToAsync<T>(Func<TDbParams, T>, T) Nots the equal to asynchronous. Declaration public async Task<IValidationRule<TDbParams>> NotEqualToAsync<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source NotEqualToAsync<T>(Func<TDbParams, String>, T) Nots the equal to asynchronous. Declaration public async Task<IValidationRule<TDbParams>> NotEqualToAsync<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>> Type Parameters Name Description T | Improve this Doc View Source OnOrAfter(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Called when [or after]. Declaration public IValidationRule<TDbParams> OnOrAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source Required(Func<TDbParams, Object>) Requireds the specified selector. Declaration public IValidationRule<TDbParams> Required(Func<TDbParams, object> selector) Parameters Type Name Description System.Func <TDbParams, System.Object > selector The selector. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source RequiredAsync(Func<TDbParams, Object>) Requireds the asynchronous. Declaration public async Task<IValidationRule<TDbParams>> RequiredAsync(Func<TDbParams, object> selector) Parameters Type Name Description System.Func <TDbParams, System.Object > selector The selector. Returns Type Description System.Threading.Tasks.Task < IValidationRule <TDbParams>>"
  },
  "api/DbFacade.Factories.ValidatorFactory.html": {
    "href": "api/DbFacade.Factories.ValidatorFactory.html",
    "title": "Class ValidatorFactory | DbFacade",
    "keywords": "Class ValidatorFactory Inheritance System.Object ValidatorFactory Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.Factories Assembly : DbFacade.dll Syntax public sealed class ValidatorFactory Methods | Improve this Doc View Source Create<TDbParams>(Action<IValidator<TDbParams>>) Creates the specified validator initializer. Declaration public static IValidator<TDbParams> Create<TDbParams>(Action<IValidator<TDbParams>> validatorInitializer = null) Parameters Type Name Description System.Action < IValidator <TDbParams>> validatorInitializer The validator initializer. Returns Type Description IValidator <TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. | Improve this Doc View Source CreateAsync<TDbParams>(Func<IValidator<TDbParams>, Task>) Creates the asynchronous. Declaration public static async Task<IValidator<TDbParams>> CreateAsync<TDbParams>(Func<IValidator<TDbParams>, Task> validatorInitializer = null) Parameters Type Name Description System.Func < IValidator <TDbParams>, System.Threading.Tasks.Task > validatorInitializer The validator initializer. Returns Type Description System.Threading.Tasks.Task < IValidator <TDbParams>> Type Parameters Name Description TDbParams The type of the database parameters."
  },
  "api/DbFacade.Services.DbConnectionService.html": {
    "href": "api/DbFacade.Services.DbConnectionService.html",
    "title": "Class DbConnectionService | DbFacade",
    "keywords": "Class DbConnectionService Inheritance System.Object DbConnectionService Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.Services Assembly : DbFacade.dll Syntax public static class DbConnectionService Methods | Improve this Doc View Source Register<TDbConnectionConfig>(TDbConnectionConfig) Registers the specified configuration. Declaration public static void Register<TDbConnectionConfig>(this TDbConnectionConfig config) where TDbConnectionConfig : DbConnectionConfigBase Parameters Type Name Description TDbConnectionConfig config The configuration. Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. | Improve this Doc View Source RegisterAsync<TDbConnectionConfig>(TDbConnectionConfig) Registers the asynchronous. Declaration public static async Task RegisterAsync<TDbConnectionConfig>(this TDbConnectionConfig config) where TDbConnectionConfig : DbConnectionConfigBase Parameters Type Name Description TDbConnectionConfig config The configuration. Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration."
  },
  "api/DbFacade.Services.html": {
    "href": "api/DbFacade.Services.html",
    "title": "Namespace DbFacade.Services | DbFacade",
    "keywords": "Namespace DbFacade.Services Classes DbConnectionService"
  },
  "api/DbFacade.Utils.html": {
    "href": "api/DbFacade.Utils.html",
    "title": "Namespace DbFacade.Utils | DbFacade",
    "keywords": "Namespace DbFacade.Utils Classes InstanceCreatorService Interfaces IAsyncInit IMockDbTableRow"
  },
  "api/DbFacade.Utils.IAsyncInit.html": {
    "href": "api/DbFacade.Utils.IAsyncInit.html",
    "title": "Interface IAsyncInit | DbFacade",
    "keywords": "Interface IAsyncInit Namespace : DbFacade.Utils Assembly : DbFacade.dll Syntax public interface IAsyncInit Methods | Improve this Doc View Source InitAsync() Initializes the asynchronous. Declaration Task InitAsync() Returns Type Description System.Threading.Tasks.Task"
  },
  "api/DbFacade.Utils.IMockDbTableRow.html": {
    "href": "api/DbFacade.Utils.IMockDbTableRow.html",
    "title": "Interface IMockDbTableRow | DbFacade",
    "keywords": "Interface IMockDbTableRow Namespace : DbFacade.Utils Assembly : DbFacade.dll Syntax public interface IMockDbTableRow"
  },
  "api/DbFacade.Utils.InstanceCreatorService.html": {
    "href": "api/DbFacade.Utils.InstanceCreatorService.html",
    "title": "Class InstanceCreatorService | DbFacade",
    "keywords": "Class InstanceCreatorService Inheritance System.Object InstanceCreatorService Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.Utils Assembly : DbFacade.dll Syntax public class InstanceCreatorService Methods | Improve this Doc View Source AddCreator<T>(Func<T>) Adds the creator. Declaration public static void AddCreator<T>(Func<T> creator) Parameters Type Name Description System.Func <T> creator The creator. Type Parameters Name Description T"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Main Library Documentation | DbFacade",
    "keywords": "Main Library Documentation"
  },
  "articles/GettingStarted.html": {
    "href": "articles/GettingStarted.html",
    "title": "| DbFacade",
    "keywords": ""
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | DbFacade",
    "keywords": "Add your introductions here!"
  },
  "GettingStarted/DeclareMethods.html": {
    "href": "GettingStarted/DeclareMethods.html",
    "title": "Declare Methods | DbFacade",
    "keywords": "Declare Methods Directory Structure Modify the current directory structure as follows in your project directory. |- MyProjectDirectory | |- DomainLayer | | |- Connections | | | |- MyProjectSQLConnection.cs | | |- Models | | | |- Data | | | | |- SampleDataModel.cs | | | |- Parameter | | | | |- GetSampleDataParameters.cs | | |- Methods | | | |- MyProjectSQLMethods.cs Add Methods class Create a MyProjectSQLMethods.cs class file in MyProjectDirectory/DomainLayer/Methods as follows: internal class MyProjectSQLMethods { public static readonly IDbCommandMethod<GetSampleDataParameters,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<GetSampleDataParameters,SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.Guid)); p.Add(\"String\", p.Factory.Create(m => m.String)); }); } When mapping parameters to the method like p.Add(\"Guid\", p.Factory.Create(m => m.Guid)); notice that you do not need to add the leading @ expected by SQL stored procedures. This is automaticlly resolved before the method is executed."
  },
  "GettingStarted/DefineModels.html": {
    "href": "GettingStarted/DefineModels.html",
    "title": "Define Models | DbFacade",
    "keywords": "Define Models Directory Structure Modify the current directory structure as follows in your project directory. |- MyProjectDirectory | |- DomainLayer | | |- Connections | | | |- MyProjectSQLConnection.cs | | |- Models | | | |- Data | | | | |- SampleDataModel.cs | | | |- Parameter | | | | |- GetSampleDataParameters.cs Add Parameter Model Create a GetSampleDataParameters.cs class file in MyProjectDirectory/DomainLayer/Models/Parameters as follows: public class GetSampleDataParameters { public Guid Guid { get; set; } public string String { get; set; } } Add Data Model Create a SampleDataModel.cs class file in MyProjectDirectory/DomainLayer/Models/Data as follows: public class SampleDataModel: DbDataModel { public Guid Guid { get; set; } public string String { get; set; } public bool Bool { get; set; } public int Integer { get; set; } protected override void Init() { Guid = GetColumn<Guid>(\"Guid\"); String = GetColumn<string>(\"String\"); Bool = GetColumn<bool>(\"Bool\"); Integer = GetColumn<int>(\"Integer\"); } // if you plan to use asynchronous programing you must add the following to support asynchronous model binding. // Otherwise ignore this method override. protected override async Task InitAsync() { Guid = await GetColumnAsync<Guid>(\"Guid\"); String = await GetColumnAsync<string>(\"String\"); Bool = await GetColumnAsync<bool>(\"Bool\"); Integer = await GetColumnAsync<int>(\"Integer\"); } }"
  },
  "GettingStarted/DomainFacade.html": {
    "href": "GettingStarted/DomainFacade.html",
    "title": "Domain Facade | DbFacade",
    "keywords": "Domain Facade Putting it all together Directory Structure Modify the current directory structure as follows in your project directory. |- MyProjectDirectory | |- DomainLayer | | |- Connections | | | |- MyProjectSQLConnection.cs | | |- Models | | | |- Data | | | | |- SampleDataModel.cs | | | |- Parameter | | | | |- GetSampleDataParameters.cs | | |- Methods | | | |- MyProjectSQLMethods.cs | | |- IDomainFacade.cs | | |- DomainFacade.cs Add Domain Facade class Create a IDomainFacade.cs interface file in MyProjectDirectory/DomainLayer as follows: public interface IDomainFacade { public IDbResponse<SampleDataModel> GetSampleData(GetSampleDataParameters parameters); } Create a DomainFacade class file in MyProjectDirectory/DomainLayer as follows: internal class DomainFacade: IDomainFacade { public DomainFacade(){ string connectionString = \"MyConnectionString\"; // Get this value from a configuration source in real code; string providerName = \"MyProviderName\"; // Get this value from a configuration source in real code; // MyProjectSQLConnection must be registered before any calls can be made MyProjectSQLConnection.RegisterConnection(string connectionString, string providerName); } public IDbResponse<SampleDataModel> GetSampleData(GetSampleDataParameters parameters) => MyProjectSQLMethods.GetSampleData.Execute(parameters); } Using Domain Facade You may now use public class MyClass { private IDomainFacade DomainFacade {get; set;} public MyClass(){ DomainFacade = new DomainFacade(); } public void DoSomething(){ var results = DomainFacade.GetSampleData(new GetSampleDataParameters(){ Guid = Guid.NewGuid(), // use a real Guid here not a new one( this is example only) String = \"Some string value\" }); if(results.HasError){ Exception error = result.Error; // Uh Oh! Need to handle error result. }else{ // Everything is Good! } } } Recomendations Since your project code will likely call the DomainFacade object many times consider creating a global instance of it in your project. In Core projects this can be done with dependancy injection. Core Specific Notes When using the Core version of this library you may need to include some extra code in Startup.cs to configure the provider types. Please consult the official .NET Core doumentation about registering client factories and adding Connection strings for the latest information. public void ConfigureServices(IServiceCollection services) { ... DbProviderFactories.RegisterFactory(\"System.Data.SqlClient\", SqlClientFactory.Instance); services.AddConnectionStrings(connectionStrings => { connectionStrings.MySQLConnectionString = connectionStrings.GetSqlConnection( Configuration.GetConnectionString(\"MySQLConnectionString\"), Configuration[\"MySQLConnectionString:ProviderName\"], builder => { builder.UserID = Configuration[\"MySQLConnectionString:UserID\"]; builder.Password = Configuration[\"MySQLConnectionString:Password\"]; }); }); ... }"
  },
  "GettingStarted/index.html": {
    "href": "GettingStarted/index.html",
    "title": "Installation | DbFacade",
    "keywords": "Installation .Net Framework Install-Package DbFacade The latest version can also be downloaded directly from NuGet.org at: https://www.nuget.org/packages/DbFacade/ .Net Core Install-Package DbFacade.Core The latest version can also be downloaded directly from NuGet.org at: https://www.nuget.org/packages/DbFacade.Core/"
  },
  "GettingStarted/SetupConnection.html": {
    "href": "GettingStarted/SetupConnection.html",
    "title": "Setup Connection | DbFacade",
    "keywords": "Setup Connection Directory Structure Create a directory structure as follows in your project directory. |- MyProjectDirectory | |- DomainLayer | | |- Connections | | | |- MyProjectSQLConnection.cs Add Connection file Create a MyProjectSQLConnection.cs class file in MyProjectDirectory/DomainLayer/Connections as follows: internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { private string ConnectionString { get; set; } private string ProviderName { get; set; } private MyProjectSQLConnection(string connectionString, string providerName) { ConnectionString = connectionString; ProviderName = providerName; } protected override string GetDbConnectionString() => ConnectionString; protected override string GetDbConnectionProvider() => ProviderName; protected override async Task<string> GetDbConnectionStringAsync() { await Task.CompletedTask; return ConnectionString; } protected override async Task<string> GetDbConnectionProviderAsync() { await Task.CompletedTask; return ProviderName; } public static void RegisterConnection(string connectionString, string providerName) => new MyProjectSQLConnection(connectionString, providerName).Register(); } Add Command Configurations Add a SQL stored procedure command definition to class MyProjectSQLConnection as a static property as follows public static IDbCommandConfig GetSampleData = DbCommandConfigFactory<MyProjectSQLConnection>.CreateFetchCommand(\"[dbo].[SampleData_Get]\", \"Get Sample Data\"); Complete Class Code internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { private string ConnectionString { get; set; } private string ProviderName { get; set; } private MyProjectSQLConnection(string connectionString, string providerName) { ConnectionString = connectionString; ProviderName = providerName; } protected override string GetDbConnectionString() => ConnectionString; protected override string GetDbConnectionProvider() => ProviderName; protected override async Task<string> GetDbConnectionStringAsync() { await Task.CompletedTask; return ConnectionString; } protected override async Task<string> GetDbConnectionProviderAsync() { await Task.CompletedTask; return ProviderName; } public static void RegisterConnection(string connectionString, string providerName) => new MyProjectSQLConnection(connectionString, providerName).Register(); public static IDbCommandConfig GetSampleData = DbCommandConfigFactory<MyProjectSQLConnection>.CreateFetchCommand(\"[dbo].[SampleData_Get]\", \"Get Sample Data\"); }"
  },
  "index.html": {
    "href": "index.html",
    "title": "DbFacade | DbFacade",
    "keywords": "DbFacade About Confused about how C# .NET projects set up calls to SQL databases? Need a well structured design pattern to organize calls to database stored procedures? Then DbFacade is the solution! DbFacade builds upon ADO.NET and simplifies structuring calls to SQL database stored procedures. Features Simplified parameter binding Built-In configurable parameter validation Easy data model binding Supports syncronous or asyncronous methods Supports .Net Framework and .Net Core projects Installation .Net Framework Install-Package DbFacade The latest version can also be downloaded directly from NuGet.org Here .Net Core Install-Package DbFacade.Core The latest version can also be downloaded directly from NuGet.org Here Documentation For the latest README updates and documentation please visit Here"
  }
}