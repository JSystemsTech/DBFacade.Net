{
  "Advanced/Connection/ErrorHandling.html": {
    "href": "Advanced/Connection/ErrorHandling.html",
    "title": "Error Handling | DbFacade",
    "keywords": "Error Handling While DbResponse objects provide an Error property for Exceptions thrown in the method execution pipeline, the connection object also provides a means of capturing and handling exceptions. Why Use this option? If you have an external error logging call that captures application errors this is a convienient way to capture those errors upfront without having to replicate for each call on the DomainFacade file. Use Cases As of Version 1.13.0 internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { public static void Configure() { Configure(GetDbConnectionString, o => { o.SetOnErrorHandler(OnError); o.SetOnValidationError(OnValidationError); o.SetOnSQLExecutionError(OnSQLExecutionError); o.SetOnFacadeError(OnFacadeError); }); } //Handle any Error //Generally the most common one to use private static void OnError(Exception ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle method Validation Errors private static void OnValidationError<TDbParams>(ValidationException<TDbParams> ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle SQL execution Errors private static void OnSQLExecutionError(SQLExecutionException ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle rare Facade Error. //This shouldn't normally be hit all that often when an error occurs, so this is best used in debug mode. private static void OnFacadeError(FacadeException ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } ... } If your code Executes methods asynchronsly you will need to define the async error handler(s). internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { public static void Configure() { Configure(GetDbConnectionString, o => { o.SetOnErrorHandlerAsync(OnErrorAsync); o.SetOnValidationErrorAsync(OnValidationErrorAsync); o.SetOnSQLExecutionErrorAsync(OnSQLExecutionErrorAsync); o.SetOnFacadeErrorAsync(OnFacadeErrorAsync); }); } //Handle any Error //Generally the most common one to use private static async Task OnErrorAsync(Exception ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle method Validation Errors private static async Task OnValidationErrorAsync<TDbParams>(ValidationException<TDbParams> ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle SQL execution Errors private static async Task OnSQLExecutionErrorAsync(SQLExecutionException ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle rare Facade Error. //This shouldn't normally be hit all that often when an error occurs, so this is best used in debug mode. private static async Task OnFacadeErrorAsync(FacadeException ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } ... } Version 1.12.1 and earlier internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { ... //Handle any Error //Generally the most common one to use protected override void OnError(Exception ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle method Validation Errors protected override void OnValidationError<TDbParams>(ValidationException<TDbParams> ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle SQL execution Errors protected override void OnSQLExecutionError(SQLExecutionException ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle rare Facade Error. //This shouldn't normally be hit all that often when an error occurs, so this is best used in debug mode. protected override void OnFacadeError(FacadeException ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } ... } If your code Executes methods asynchronsly you will need to define the async error handler(s). internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { ... //Handle any Error //Generally the most common one to use protected override async Task OnErrorAsync(Exception ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle method Validation Errors protected override async Task OnValidationErrorAsync<TDbParams>(ValidationException<TDbParams> ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle SQL execution Errors protected override async Task OnSQLExecutionErrorAsync(SQLExecutionException ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } //Handle rare Facade Error. //This shouldn't normally be hit all that often when an error occurs, so this is best used in debug mode. protected override async Task OnFacadeErrorAsync(FacadeException ex, IDbCommandSettings commandSettings) { //Run custom logic to log error } ... } Recomendation Generally you should only need to override the OnError / OnErrorAsync methods to do the bulk of error handling. But if you need to run specialized error handling for SQL exceptions or validation errors, or if you only want to handle specific types of exceptions then the other methods are available."
  },
  "Advanced/Connection/IDbCommandConfig.html": {
    "href": "Advanced/Connection/IDbCommandConfig.html",
    "title": "Command Configurations | DbFacade",
    "keywords": "Command Configurations Fetch Command Add a SQL stored procedure command definition to class MyProjectSQLConnection as a static property as follows public static IDbCommandConfig GetSampleData = CreateFetchCommand(\"[dbo].[SampleData_Get]\", \"Get Sample Data\"); Transaction Command If you have a stored procedure that you want to execute as a transaction then you can declare it as follows. NOTE Transaction commands parameter validation is enforced on methods. public static IDbCommandConfig GetSampleData = CreateTransactionCommand(\"[dbo].[My_Transaction]\", \"My Transaction); WARNING Some Db connection types do not support transations. Please consult appropriate ADO.NET documentation for more information. If transactions are not supported then use a fetch command instead Schema Command Config Factories Add a IDbCommandConfigSchemaFactory object definition to class MyProjectSQLConnection as a static property, and then add a SQL stored procedure command definition to class MyProjectSQLConnection as a static property as follows private static IDbCommandConfigSchemaFactory MySchema = CreateSchemaFactory(\"MySchema\"); public static IDbCommandConfig GetOtherSampleData = MySchema.CreateFetchCommand(\"SampleData_Get_Other\", \"Get Other Sample Data\"); Why use this over calling the standard 'MyProjectSQLConnection.CreateFetchCommand'? It is up to you which you which option you prefer. Both are valid, but here are some of the benefits You define the target schema name once. You only need to worry about the name of the stored procedure The command text will automatically be fully qualified and formated AKA MySchema.CreateFetchCommand(\"SampleData_Get_Other\", \"Get Other Sample Data\") calculates the command text to [MySchema].[SampleData_Get_Other] Less time spent on writing out the full command text especially if you have many calls to define The default schema for most databases is dbo so that Factory instance is already available to use. public static IDbCommandConfig GetSampleData = Dbo.CreateFetchCommand(\"SampleData_Get\", \"Get Sample Data\");"
  },
  "Advanced/Connection/Types.html": {
    "href": "Advanced/Connection/Types.html",
    "title": "Types | DbFacade",
    "keywords": "Types DbFacade supports diferent connection types depending on the type of database you are connecting to. Built-in Types SQL/SQL Server internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { ... } SQLite internal class MyProjectSQLiteConnection : SqLiteConnectionConfig<MyProjectSQLiteConnection> { ... } OleDb internal class MyProjectOleDbConnection : OleDbConnectionConfig<MyProjectOleDbConnection> { ... } Odbc internal class MyProjectOdbcConnection : OdbcConnectionConfig<MyProjectOdbcConnection> { ... } Oracle internal class MyProjectOracleConnection : OracleConnectionConfig<MyProjectOracleConnection> { ... } Custom Connection Type If you are trying to connect to a database type that is not listed above you may define your own connection type. Create Base abstract class public abstract class CustomConnectionConfig<TDbConnectionConfig> : DbConnectionConfigFull<TDbConnectionConfig> where TDbConnectionConfig : IDbConnectionConfig { public static void Configure(OnGetConnectionString getConnectionString, Action<IErrorHandlerOptions> handler) { handler(GetConnectionOptions().ErrorHandlerOptions); GetConnectionOptions().SetOnGetDbDataAdapter(() => new CustomDataAdapter()); GetConnectionOptions().SetOnGetConnectionString(getConnectionString); GetConnectionOptions().SetOnCreateDbConnection(connectionString => new CustomDbConnection(connectionString)); } } If the database type does not support transactions use the following. public abstract class CustomConnectionConfig<TDbConnectionConfig> : DbConnectionConfigNoTransaction<TDbConnectionConfig> where TDbConnectionConfig : IDbConnectionConfig { public static void Configure(OnGetConnectionString getConnectionString, Action<IErrorHandlerOptions> handler) { handler(GetConnectionOptions().ErrorHandlerOptions); GetConnectionOptions().SetOnGetDbDataAdapter(() => new CustomDataAdapter()); GetConnectionOptions().SetOnGetConnectionString(getConnectionString); GetConnectionOptions().SetOnCreateDbConnection(connectionString => new CustomDbConnection(connectionString)); } } Create the Connection class internal class MyProjectCustomConnection : CustomConnectionConfig<MyProjectCustomConnection> { ... }"
  },
  "Advanced/DbDataModel/GettingColumnValues.html": {
    "href": "Advanced/DbDataModel/GettingColumnValues.html",
    "title": "Getting Column Values | DbFacade",
    "keywords": "Getting Column Values Basic GetColumn Generally this is what you will need to use to get values from a data row GetColumn<string>(\"ColumnName\"); Generally you can use any type T as long as it is a struct or a class Async await GetColumnAsync<string>(\"ColumnName\"); Special IGetEnumerableColumn Sometimes you have values returned as a delimited string that needs to be translated into an enumerable. We have that covered for you already with GetEnumerableColumn<T>(string columnName) ! GetEnumerableColumn<string>(\"ColumnName\"); GetEnumerableColumn<int>(\"IntColumnName\"); By default the assumed delimeter is \",\" but you can pass in any string as the second parameter if necessary GetEnumerableColumn<string>(\"ColumnName\",\";\"); GetFlagColumn Typically most boolean column values are sent from the database as a BIT (a bool in C# ). But Sometimes you may be dealing with a legacy system where the values coing back are not type BIT but treated like a such. In that case we have the solution for that with GetFlagColumn<T>(string col, T trueValue) GetFlagColumn(\"FlagColumnName\", 'Y'); GetDateTimeColumn Generally to get a datetime from the database using GetColumn<DateTime>(\"ColumnName\") will suffice, but incase there are any specialized date formatting on the stored value in the database the following Helpers are available. GetDateTimeColumn(string col, string format, DateTimeStyles style = DateTimeStyles.None) GetDateTimeColumn(string col, string format, IFormatProvider provider, DateTimeStyles style = DateTimeStyles.None) GetFormattedDateTimeStringColumn Have a DateTime value in the database but only need a string formatted version of the value? We have you covered! GetFormattedDateTimeStringColumn(string col, string format) Async All of the helpers above have async versions to use in InitAsync await GetEnumerableColumnAsync<string>(\"ColumnName\"); await GetFlagColumnAsync(\"FlagColumnName\", 'Y'); await GetDateTimeColumnAsync(string col, string format, DateTimeStyles style = DateTimeStyles.None) await GetFormattedDateTimeStringColumnAsync(string col, string format) Data Binding Errors When building data models if there are exceptions thrown when using any of the GetColumn helpers the error message is collected and stored in the DataBindingErrors model property. This is espacially helpful durring debugging if you need to identify if you have incorrectly accessed a column value; Using same Model for multiple calls If you are using the same model on multiple calls, its best practice to make sure that the column names remain the same on each call. However if that is not the case you can consume the CommandId property to dictate which column name to use. GetColumn<string>(CommandId == MyProjectSQLConnection.GetSampleDataAlt.CommandId ? \"ColumnNameAlt\" : \"ColumnName\");"
  },
  "Advanced/DbDataModel/NestedModels.html": {
    "href": "Advanced/DbDataModel/NestedModels.html",
    "title": "Nested Models | DbFacade",
    "keywords": "Nested Models Sometimes you will have to design data models with inner model nesting. DbFacade supports that design pattern. public class MyDataModel : DbDataModel { public MyNestedDataModel MyNestedDataModel { get; private set; } protected override void Init() { MyNestedDataModel = CreateNestedModel<MyNestedDataModel>(); } protected override async Task InitAsync() { MyNestedDataModel = await CreateNestedModelAsync<MyNestedDataModel>(); } } public class MyNestedDataModel : DbDataModel { public string Value { get; private set; } protected override void Init() { Value = GetColumn<string>(\"ColumnName\"); } protected override async Task InitAsync() { Value = await GetColumnAsync<string>(\"ColumnName\"); } }"
  },
  "Advanced/DbResponse.html": {
    "href": "Advanced/DbResponse.html",
    "title": "DbResponse | DbFacade",
    "keywords": "DbResponse This is the default response object from method executions. DbRespnse<TDbDataModel> is also an IEnumerable which returns a fetched dataset. Return Value If you need to access a stored procedures return value you can call the ReturnValue property of the object. Output Variables Some stored procedures define output variables which return on the call. To access those values you can use the following: Single Parmameter Value T value = MyDbResonse.GetOutputValue<T>(string key); or with async T value = await MyDbResonse.GetOutputValueAsync<T>(string key); Multiple Values as DbDataModel public class MyOutputDataModel : DbDataModel { public string Value { get; private set; } protected override void Init() { Value = GetColumn<string>(\"OutputParameterName\"); } protected override async Task InitAsync() { Value = await GetColumnAsync<string>(\"ColumnName\"); } } MyOutputDataModel model = MyDbResonse.GetOutputModel<MyOutputDataModel>(); or with async MyOutputDataModel model = await MyDbResonse.GetOutputModelAsync<MyOutputDataModel>(); Additional DataSets If you stroed procedure has multiple data sets returning you can access the additional data sets as follows: int index = 1; //index 0 is always the first data set and is already a part of the response; IEnumerable<MyDataModel> data = MyDbResonse.DataSets.ElementAt(index).ToDbDataModelList<MyDataModel>(); or with async int index = 1; //index 0 is always the first data set and is already a part of the response; IEnumerable<MyDataModel> data = await MyDbResonse.DataSets.ElementAt(index).ToDbDataModelListAsync<MyDataModel>(); Raw DataSet Object If you have a need for accessing the raw C# 'DataTable' type objects you can access them in the following way: int index = 1; //index 0 is always the first data set and is already a part of the response; IEnumerable<MyDataModel> data = MyDbResonse.DataSets.ElementAt(index).ToDbDataModelList<MyDataModel>(); Note that this is the raw data response from the database call. You do not have access to any of the specialized column parser extensions that the 'DbDataModel' type class provides. This is especially useful if you are importing data into another service. Ex. the Aspose libraries make use of a DataTable to construct a MS Office table object. Error If the method execution call fires an exception the error is captured and set in the Error property and the HasError property is set to true . Error Message If the method execution call fires an exception the error is captured and the ErrorMessage property is set to the value of the Message property of the error Error Details If the method execution call fires an exception the error is captured and is of type FacadeException the ErrorDetails property is set to the value of the ErrorDetails property of the error HasDataBindingErrors If any of the data models have data binding errors the HasDataBindingErrors will be set to true"
  },
  "Advanced/index.html": {
    "href": "Advanced/index.html",
    "title": "Advanced | DbFacade",
    "keywords": "Advanced Please read the sections for more advanced use of the library Connection Types Error Handling Command Configurations Methods Types Parameters Validation DbDataModel Getting Column Values Nested Models DbResponse"
  },
  "Advanced/Methods/Parameters.html": {
    "href": "Advanced/Methods/Parameters.html",
    "title": "Parameters | DbFacade",
    "keywords": "Parameters Input Parameters public static readonly IDbCommandMethod<Guid,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<Guid,SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m)); }); Output Parameters public static readonly IDbCommandMethod<Guid,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<Guid,SampleDataModel>( p => { p.Add(\"MyOutputGuidParam\", p.Factory.CreateOutputGuid()); }); Non class Parameters public static readonly IDbCommandMethod<Guid,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<Guid,SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m)); }); public static readonly IDbCommandMethod<(Guid guid, string str),SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<(Guid guid, string str),SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.guid)); p.Add(\"String\", p.Factory.Create(m => m.str)); }); public static readonly IDbCommandMethod<(Guid guid, string[] strArr),SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<(Guid guid, string str),SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.guid)); p.Add(\"StringArr\", p.Factory.Create(m => string.Join(\",\",m.strArr))); });"
  },
  "Advanced/Methods/Types.html": {
    "href": "Advanced/Methods/Types.html",
    "title": "Types | DbFacade",
    "keywords": "Types With no expected Data No input parameters public static readonly IDbCommandMethod SomeParameterlessMethod = AdventureWorksConnection.SomeParameterlessMethod.CreateMethod(); With input parameters public static readonly IDbCommandMethod<GetSampleDataParameters> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<GetSampleDataParameters>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.Guid)); p.Add(\"String\", p.Factory.Create(m => m.String)); }); With data expected No input parameters public static readonly IParameterlessDbCommandMethod<SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateParameterlessMethod<SampleDataModel>(); With input parameters public static readonly IDbCommandMethod<GetSampleDataParameters,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<GetSampleDataParameters,SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.Guid)); p.Add(\"String\", p.Factory.Create(m => m.String)); });"
  },
  "Advanced/Methods/Validation.html": {
    "href": "Advanced/Methods/Validation.html",
    "title": "Validation | DbFacade",
    "keywords": "Validation public static readonly IDbCommandMethod<GetSampleDataParameters,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<GetSampleDataParameters,SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.Guid)); p.Add(\"String\", p.Factory.Create(m => m.String)); p.Add(\"Details\", p.Factory.Create(m => m.Details)); }, v => { v.Add(v.Rules.Required(m => m.String), \"String\"); // will set the parameter name to \"String\" v.Add(v.Rules.Required(m => m.Details)); // will set the parameter name to \"Unspecified Pramameter\" default value }); For doumentation on all available rules see Rules"
  },
  "Advanced/UnitTesting.html": {
    "href": "Advanced/UnitTesting.html",
    "title": "Unit Testing Connection | DbFacade",
    "keywords": "Unit Testing Connection If you plan to write unit tests for your db calls there is a simple way to enable the Mock Mode of a connection. Enabling Mock Mode will prevent the connection from actually calling the database and will instead parse the mapped data provided for the response value IDictionary<Guid, MockResponseData> mockDataDictionary = new Dictionary<Guid, MockResponseData>() { { MyDbConnection.SomeDbCall.CommandId, MockResponseData.Create(new SomeModelArray[] { new SomeModel { MyString = \"test string\", MyEnum = 1 } }, null, 0)}, { MyDbConnection.SomeDbCallWithOutputParameters.CommandId, MockResponseData.Create(new SomeModelArray[] { new SomeModel { MyString = \"test string\", MyEnum = 1 } }, outputVariables => { outputVariables.Add(\"MyStringOutputParam\", \"output response\"); }, 1)} }; DbConnectionService.EnableMockMode<MyDbConnection>(mockDataDictionary); Whene you are finished with your unit tests be sure to run the following to reset the connection config to run normally DbConnectionService.DisableMockMode<MyDbConnection>();"
  },
  "api/DbFacade.DataLayer.CommandConfig.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.html",
    "title": "Namespace DbFacade.DataLayer.CommandConfig | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.CommandConfig Interfaces IDbCommandMethod IDbCommandMethod<TDbParams> IDbCommandMethod<TDbParams, TDbDataModel> IDbMethod IParameterlessDbCommandMethod<TDbDataModel>"
  },
  "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod.html",
    "title": "Interface IDbCommandMethod | DbFacade",
    "keywords": "Interface IDbCommandMethod Inherited Members IDbMethod.MethodId Namespace : DbFacade.DataLayer.CommandConfig Assembly : DbFacade.dll Syntax public interface IDbCommandMethod : IDbMethod Methods | Improve this Doc View Source Execute() Executes this instance. Declaration IDbResponse Execute() Returns Type Description IDbResponse | Improve this Doc View Source ExecuteAsync() Executes the asynchronous. Declaration Task<IDbResponse> ExecuteAsync() Returns Type Description System.Threading.Tasks.Task < IDbResponse > Extension Methods MockDataResponseFactory.AddMockResponseData(IDbMethod, MockResponseData) Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod-1.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod-1.html",
    "title": "Interface IDbCommandMethod<TDbParams> | DbFacade",
    "keywords": "Interface IDbCommandMethod<TDbParams> Inherited Members IDbMethod.MethodId Namespace : DbFacade.DataLayer.CommandConfig Assembly : DbFacade.dll Syntax public interface IDbCommandMethod<TDbParams> : IDbMethod Type Parameters Name Description TDbParams The type of the database parameters. Methods | Improve this Doc View Source Execute(TDbParams, Boolean) Executes the specified parameters. Declaration IDbResponse Execute(TDbParams parameters, bool rawDataOnly = false) Parameters Type Name Description TDbParams parameters The parameters. System.Boolean rawDataOnly if set to true [raw data only]. Returns Type Description IDbResponse | Improve this Doc View Source ExecuteAsync(TDbParams, Boolean) Executes the asynchronous. Declaration Task<IDbResponse> ExecuteAsync(TDbParams parameters, bool rawDataOnly = false) Parameters Type Name Description TDbParams parameters The parameters. System.Boolean rawDataOnly if set to true [raw data only]. Returns Type Description System.Threading.Tasks.Task < IDbResponse > Extension Methods MockDataResponseFactory.AddMockResponseData(IDbMethod, MockResponseData) Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod-2.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.IDbCommandMethod-2.html",
    "title": "Interface IDbCommandMethod<TDbParams, TDbDataModel> | DbFacade",
    "keywords": "Interface IDbCommandMethod<TDbParams, TDbDataModel> Inherited Members IDbMethod.MethodId Namespace : DbFacade.DataLayer.CommandConfig Assembly : DbFacade.dll Syntax public interface IDbCommandMethod<TDbParams, TDbDataModel> : IDbMethod where TDbDataModel : DbDataModel Type Parameters Name Description TDbParams The type of the database parameters. TDbDataModel The type of the database data model. Methods | Improve this Doc View Source Execute(TDbParams, Boolean) Executes the specified parameters. Declaration IDbResponse<TDbDataModel> Execute(TDbParams parameters, bool rawDataOnly = false) Parameters Type Name Description TDbParams parameters The parameters. System.Boolean rawDataOnly if set to true [raw data only]. Returns Type Description IDbResponse <TDbDataModel> | Improve this Doc View Source ExecuteAsync(TDbParams, Boolean) Executes the asynchronous. Declaration Task<IDbResponse<TDbDataModel>> ExecuteAsync(TDbParams parameters, bool rawDataOnly = false) Parameters Type Name Description TDbParams parameters The parameters. System.Boolean rawDataOnly if set to true [raw data only]. Returns Type Description System.Threading.Tasks.Task < IDbResponse <TDbDataModel>> Extension Methods MockDataResponseFactory.AddMockResponseData(IDbMethod, MockResponseData) Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.CommandConfig.IDbMethod.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.IDbMethod.html",
    "title": "Interface IDbMethod | DbFacade",
    "keywords": "Interface IDbMethod Namespace : DbFacade.DataLayer.CommandConfig Assembly : DbFacade.dll Syntax public interface IDbMethod Properties | Improve this Doc View Source MethodId Declaration Guid MethodId { get; } Property Value Type Description System.Guid Extension Methods MockDataResponseFactory.AddMockResponseData(IDbMethod, MockResponseData) Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.CommandConfig.IParameterlessDbCommandMethod-1.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.IParameterlessDbCommandMethod-1.html",
    "title": "Interface IParameterlessDbCommandMethod<TDbDataModel> | DbFacade",
    "keywords": "Interface IParameterlessDbCommandMethod<TDbDataModel> Inherited Members IDbMethod.MethodId Namespace : DbFacade.DataLayer.CommandConfig Assembly : DbFacade.dll Syntax public interface IParameterlessDbCommandMethod<TDbDataModel> : IDbMethod where TDbDataModel : DbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. Methods | Improve this Doc View Source Execute(Boolean) Executes this instance. Declaration IDbResponse<TDbDataModel> Execute(bool rawDataOnly = false) Parameters Type Name Description System.Boolean rawDataOnly if set to true [raw data only]. Returns Type Description IDbResponse <TDbDataModel> | Improve this Doc View Source ExecuteAsync(Boolean) Executes the asynchronous. Declaration Task<IDbResponse<TDbDataModel>> ExecuteAsync(bool rawDataOnly = false) Parameters Type Name Description System.Boolean rawDataOnly if set to true [raw data only]. Returns Type Description System.Threading.Tasks.Task < IDbResponse <TDbDataModel>> Extension Methods MockDataResponseFactory.AddMockResponseData(IDbMethod, MockResponseData) Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.CommandConfig.Parameters.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.Parameters.html",
    "title": "Namespace DbFacade.DataLayer.CommandConfig.Parameters | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.CommandConfig.Parameters Interfaces IDbCommandConfigParams<TDbParams> IDbCommandParameterConfig<TDbParams>"
  },
  "api/DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandConfigParams-1.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandConfigParams-1.html",
    "title": "Interface IDbCommandConfigParams<TDbParams> | DbFacade",
    "keywords": "Interface IDbCommandConfigParams<TDbParams> Inherited Members System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.ContainsKey(System.String) System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.Add(System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>) System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.Remove(System.String) System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.TryGetValue(System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>) System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.Item[System.String] System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.Keys System.Collections.Generic.IDictionary<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>.Values System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.Add(System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.Clear() System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.Contains(System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>[], System.Int32) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.Remove(System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>) System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.Count System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.IsReadOnly System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig<TDbParams>>>.GetEnumerator() System.Collections.IEnumerable.GetEnumerator() Namespace : DbFacade.DataLayer.CommandConfig.Parameters Assembly : DbFacade.dll Syntax public interface IDbCommandConfigParams<TDbParams> : IDictionary<string, IDbCommandParameterConfig<TDbParams>>, ICollection<KeyValuePair<string, IDbCommandParameterConfig<TDbParams>>>, IEnumerable<KeyValuePair<string, IDbCommandParameterConfig<TDbParams>>>, IEnumerable Type Parameters Name Description TDbParams The type of the database parameters. Properties | Improve this Doc View Source Factory Gets the factory. Declaration DbCommandParameterConfigFactory<TDbParams> Factory { get; } Property Value Type Description DbCommandParameterConfigFactory <TDbParams> The factory. Methods | Improve this Doc View Source AddAsync(String, IDbCommandParameterConfig<TDbParams>) Adds the asynchronous. Declaration Task AddAsync(string key, IDbCommandParameterConfig<TDbParams> value) Parameters Type Name Description System.String key The key. IDbCommandParameterConfig <TDbParams> value The value. Returns Type Description System.Threading.Tasks.Task Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String) Utils.TryGetDataTable<To>(IEnumerable<To>, out DataTable)"
  },
  "api/DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig-1.html": {
    "href": "api/DbFacade.DataLayer.CommandConfig.Parameters.IDbCommandParameterConfig-1.html",
    "title": "Interface IDbCommandParameterConfig<TDbParams> | DbFacade",
    "keywords": "Interface IDbCommandParameterConfig<TDbParams> Namespace : DbFacade.DataLayer.CommandConfig.Parameters Assembly : DbFacade.dll Syntax public interface IDbCommandParameterConfig<TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.ConnectionService.DbConnectionConfig-1.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.DbConnectionConfig-1.html",
    "title": "Class DbConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class DbConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfig<TDbConnectionConfig> DbConnectionConfigFull<TDbConnectionConfig> DbConnectionConfigNoTransaction<TDbConnectionConfig> Implements IDbConnectionConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class DbConnectionConfig<TDbConnectionConfig> : IDbConnectionConfig where TDbConnectionConfig : IDbConnectionConfig Type Parameters Name Description TDbConnectionConfig Methods | Improve this Doc View Source DisableMockMode() Disables the mock mode. Declaration public static void DisableMockMode() | Improve this Doc View Source EnableMockMode() Enables the mock mode. Declaration public static void EnableMockMode() | Improve this Doc View Source GetConnectionOptions() Declaration protected static IConnectionOptions GetConnectionOptions() Returns Type Description IConnectionOptions Implements IDbConnectionConfig Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.ConnectionService.DbConnectionConfigFull-1.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.DbConnectionConfigFull-1.html",
    "title": "Class DbConnectionConfigFull<TDbConnectionConfig> | DbFacade",
    "keywords": "Class DbConnectionConfigFull<TDbConnectionConfig> Inheritance System.Object DbConnectionConfig <TDbConnectionConfig> DbConnectionConfigFull<TDbConnectionConfig> SqlConnectionConfig<TDbConnectionConfig> OdbcConnectionConfig<TDbConnectionConfig> OleDbConnectionConfig<TDbConnectionConfig> OracleConnectionConfig<TDbConnectionConfig> SqLiteConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig Inherited Members DbConnectionConfig<TDbConnectionConfig>.GetConnectionOptions() DbConnectionConfig<TDbConnectionConfig>.EnableMockMode() DbConnectionConfig<TDbConnectionConfig>.DisableMockMode() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class DbConnectionConfigFull<TDbConnectionConfig> : DbConnectionConfig<TDbConnectionConfig>, IDbConnectionConfig where TDbConnectionConfig : IDbConnectionConfig Type Parameters Name Description TDbConnectionConfig Fields | Improve this Doc View Source Dbo The dbo Declaration public static IDbCommandConfigSchemaFactoryFull Dbo Field Value Type Description IDbCommandConfigSchemaFactoryFull Methods | Improve this Doc View Source CreateFetchCommand(String, String, Boolean) Creates the fetch command. Declaration public static IDbCommandConfig CreateFetchCommand(string commandText, string label, bool requiresValidation = false) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description IDbCommandConfig | Improve this Doc View Source CreateFetchCommand(String, String, CommandType, Boolean) Creates the fetch command. Declaration public static IDbCommandConfig CreateFetchCommand(string commandText, string label, CommandType commandType, bool requiresValidation = false) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Data.CommandType commandType Type of the command. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description IDbCommandConfig | Improve this Doc View Source CreateSchemaFactory(String) Creates the schema factory. Declaration protected static IDbCommandConfigSchemaFactoryFull CreateSchemaFactory(string schema) Parameters Type Name Description System.String schema The schema. Returns Type Description IDbCommandConfigSchemaFactoryFull Implements IDbConnectionConfig Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.ConnectionService.DbConnectionConfigNoTransaction-1.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.DbConnectionConfigNoTransaction-1.html",
    "title": "Class DbConnectionConfigNoTransaction<TDbConnectionConfig> | DbFacade",
    "keywords": "Class DbConnectionConfigNoTransaction<TDbConnectionConfig> Inheritance System.Object DbConnectionConfig <TDbConnectionConfig> DbConnectionConfigNoTransaction<TDbConnectionConfig> Implements IDbConnectionConfig Inherited Members DbConnectionConfig<TDbConnectionConfig>.GetConnectionOptions() DbConnectionConfig<TDbConnectionConfig>.EnableMockMode() DbConnectionConfig<TDbConnectionConfig>.DisableMockMode() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class DbConnectionConfigNoTransaction<TDbConnectionConfig> : DbConnectionConfig<TDbConnectionConfig>, IDbConnectionConfig where TDbConnectionConfig : IDbConnectionConfig Type Parameters Name Description TDbConnectionConfig Fields | Improve this Doc View Source Dbo The dbo Declaration public static IDbCommandConfigSchemaFactory Dbo Field Value Type Description IDbCommandConfigSchemaFactory Methods | Improve this Doc View Source CreateFetchCommand(String, String, Boolean) Creates the fetch command. Declaration public static IDbCommandConfig CreateFetchCommand(string commandText, string label, bool requiresValidation = false) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description IDbCommandConfig | Improve this Doc View Source CreateFetchCommand(String, String, CommandType, Boolean) Creates the fetch command. Declaration public static IDbCommandConfig CreateFetchCommand(string commandText, string label, CommandType commandType, bool requiresValidation = false) Parameters Type Name Description System.String commandText The command text. System.String label The label. System.Data.CommandType commandType Type of the command. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description IDbCommandConfig | Improve this Doc View Source CreateSchemaFactory(String) Creates the schema factory. Declaration protected static IDbCommandConfigSchemaFactory CreateSchemaFactory(string schema) Parameters Type Name Description System.String schema The schema. Returns Type Description IDbCommandConfigSchemaFactory Implements IDbConnectionConfig Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.ConnectionService.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.html",
    "title": "Namespace DbFacade.DataLayer.ConnectionService | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.ConnectionService Classes DbConnectionConfig<TDbConnectionConfig> DbConnectionConfigFull<TDbConnectionConfig> DbConnectionConfigNoTransaction<TDbConnectionConfig> MockDataResponseFactory SqlConnectionConfig<TDbConnectionConfig> Interfaces IConnectionOptions IDbCommandConfig IDbCommandSettings IDbConnectionConfig IErrorHandlerOptions"
  },
  "api/DbFacade.DataLayer.ConnectionService.IConnectionOptions.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.IConnectionOptions.html",
    "title": "Interface IConnectionOptions | DbFacade",
    "keywords": "Interface IConnectionOptions Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public interface IConnectionOptions Properties | Improve this Doc View Source ErrorHandlerOptions Declaration IErrorHandlerOptions ErrorHandlerOptions { get; } Property Value Type Description IErrorHandlerOptions Methods | Improve this Doc View Source SetOnCreateDbConnection(OnCreateDbConnection) Declaration void SetOnCreateDbConnection(OnCreateDbConnection handler) Parameters Type Name Description OnCreateDbConnection handler | Improve this Doc View Source SetOnGetConnectionString(OnGetConnectionString) Declaration void SetOnGetConnectionString(OnGetConnectionString handler) Parameters Type Name Description OnGetConnectionString handler | Improve this Doc View Source SetOnGetDbDataAdapter(OnGetDbDataAdapter) Declaration void SetOnGetDbDataAdapter(OnGetDbDataAdapter handler) Parameters Type Name Description OnGetDbDataAdapter handler Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.ConnectionService.IDbCommandConfig.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.IDbCommandConfig.html",
    "title": "Interface IDbCommandConfig | DbFacade",
    "keywords": "Interface IDbCommandConfig Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public interface IDbCommandConfig Properties | Improve this Doc View Source CommandId Gets the command identifier. Declaration Guid CommandId { get; } Property Value Type Description System.Guid The command identifier. Methods | Improve this Doc View Source CreateMethod(Action<IDbCommandConfigParams<Object>>) Creates the method. Declaration IDbCommandMethod CreateMethod(Action<IDbCommandConfigParams<object>> parametersInitializer = null) Parameters Type Name Description System.Action < IDbCommandConfigParams < System.Object >> parametersInitializer The parameters initializer. Returns Type Description IDbCommandMethod | Improve this Doc View Source CreateMethod<TDbParams>(Action<IDbCommandConfigParams<TDbParams>>, Action<IValidator<TDbParams>>) Creates the method. Declaration IDbCommandMethod<TDbParams> CreateMethod<TDbParams>(Action<IDbCommandConfigParams<TDbParams>> parametersInitializer = null, Action<IValidator<TDbParams>> validatorInitializer = null) Parameters Type Name Description System.Action < IDbCommandConfigParams <TDbParams>> parametersInitializer The parameters initializer. System.Action < IValidator <TDbParams>> validatorInitializer The validator initializer. Returns Type Description IDbCommandMethod <TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. | Improve this Doc View Source CreateMethod<TDbParams>(Action<IDbCommandConfigParams<TDbParams>>, Action<IValidator<TDbParams>>, Action<TDbParams>[]) Creates the method. Declaration IDbCommandMethod<TDbParams> CreateMethod<TDbParams>(Action<IDbCommandConfigParams<TDbParams>> parametersInitializer, Action<IValidator<TDbParams>> validatorInitializer, params Action<TDbParams>[] onBeforeActions) Parameters Type Name Description System.Action < IDbCommandConfigParams <TDbParams>> parametersInitializer The parameters initializer. System.Action < IValidator <TDbParams>> validatorInitializer The validator initializer. System.Action <TDbParams>[] onBeforeActions The on before actions. Returns Type Description IDbCommandMethod <TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. | Improve this Doc View Source CreateMethod<TDbParams, TDbDataModel>(Action<IDbCommandConfigParams<TDbParams>>, Action<IValidator<TDbParams>>) Creates the method. Declaration IDbCommandMethod<TDbParams, TDbDataModel> CreateMethod<TDbParams, TDbDataModel>(Action<IDbCommandConfigParams<TDbParams>> parametersInitializer = null, Action<IValidator<TDbParams>> validatorInitializer = null) where TDbDataModel : DbDataModel Parameters Type Name Description System.Action < IDbCommandConfigParams <TDbParams>> parametersInitializer The parameters initializer. System.Action < IValidator <TDbParams>> validatorInitializer The validator initializer. Returns Type Description IDbCommandMethod <TDbParams, TDbDataModel> Type Parameters Name Description TDbParams The type of the database parameters. TDbDataModel The type of the database data model. | Improve this Doc View Source CreateMethod<TDbParams, TDbDataModel>(Action<IDbCommandConfigParams<TDbParams>>, Action<IValidator<TDbParams>>, Action<TDbParams>[]) Creates the method. Declaration IDbCommandMethod<TDbParams, TDbDataModel> CreateMethod<TDbParams, TDbDataModel>(Action<IDbCommandConfigParams<TDbParams>> parametersInitializer, Action<IValidator<TDbParams>> validatorInitializer, params Action<TDbParams>[] onBeforeActions) where TDbDataModel : DbDataModel Parameters Type Name Description System.Action < IDbCommandConfigParams <TDbParams>> parametersInitializer The parameters initializer. System.Action < IValidator <TDbParams>> validatorInitializer The validator initializer. System.Action <TDbParams>[] onBeforeActions The on before actions. Returns Type Description IDbCommandMethod <TDbParams, TDbDataModel> Type Parameters Name Description TDbParams The type of the database parameters. TDbDataModel The type of the database data model. | Improve this Doc View Source CreateParameterlessMethod<TDbDataModel>(Action<IDbCommandConfigParams<Object>>) Creates the parameterless method. Declaration IParameterlessDbCommandMethod<TDbDataModel> CreateParameterlessMethod<TDbDataModel>(Action<IDbCommandConfigParams<object>> parametersInitializer = null) where TDbDataModel : DbDataModel Parameters Type Name Description System.Action < IDbCommandConfigParams < System.Object >> parametersInitializer The parameters initializer. Returns Type Description IParameterlessDbCommandMethod <TDbDataModel> Type Parameters Name Description TDbDataModel The type of the database data model. Extension Methods MockDataResponseFactory.AddMockResponseData(IDbCommandConfig, MockResponseData) Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.ConnectionService.IDbCommandSettings.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.IDbCommandSettings.html",
    "title": "Interface IDbCommandSettings | DbFacade",
    "keywords": "Interface IDbCommandSettings Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public interface IDbCommandSettings Properties | Improve this Doc View Source CommandId Gets the command identifier. Declaration Guid CommandId { get; } Property Value Type Description System.Guid The command identifier. | Improve this Doc View Source CommandText Gets or sets the command text. Declaration string CommandText { get; } Property Value Type Description System.String The command text. | Improve this Doc View Source Label Gets or sets the label. Declaration string Label { get; } Property Value Type Description System.String The label. Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.ConnectionService.IDbConnectionConfig.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.IDbConnectionConfig.html",
    "title": "Interface IDbConnectionConfig | DbFacade",
    "keywords": "Interface IDbConnectionConfig Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public interface IDbConnectionConfig Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.ConnectionService.IErrorHandlerOptions.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.IErrorHandlerOptions.html",
    "title": "Interface IErrorHandlerOptions | DbFacade",
    "keywords": "Interface IErrorHandlerOptions Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public interface IErrorHandlerOptions Methods | Improve this Doc View Source SetOnErrorHandler(OnErrorHandler) Declaration void SetOnErrorHandler(OnErrorHandler handler) Parameters Type Name Description OnErrorHandler handler | Improve this Doc View Source SetOnErrorHandlerAsync(OnErrorHandlerAsync) Declaration void SetOnErrorHandlerAsync(OnErrorHandlerAsync handler) Parameters Type Name Description OnErrorHandlerAsync handler | Improve this Doc View Source SetOnFacadeErrorHandler(OnFacadeErrorHandler) Declaration void SetOnFacadeErrorHandler(OnFacadeErrorHandler handler) Parameters Type Name Description OnFacadeErrorHandler handler | Improve this Doc View Source SetOnFacadeErrorHandlerAsync(OnFacadeErrorHandlerAsync) Declaration void SetOnFacadeErrorHandlerAsync(OnFacadeErrorHandlerAsync handler) Parameters Type Name Description OnFacadeErrorHandlerAsync handler | Improve this Doc View Source SetOnSQLExecutionErrorHandler(OnSQLExecutionErrorHandler) Declaration void SetOnSQLExecutionErrorHandler(OnSQLExecutionErrorHandler handler) Parameters Type Name Description OnSQLExecutionErrorHandler handler | Improve this Doc View Source SetOnSQLExecutionErrorHandlerAsync(OnSQLExecutionErrorHandlerAsync) Declaration void SetOnSQLExecutionErrorHandlerAsync(OnSQLExecutionErrorHandlerAsync handler) Parameters Type Name Description OnSQLExecutionErrorHandlerAsync handler | Improve this Doc View Source SetOnValidationErrorHandler(OnValidationErrorHandler) Declaration void SetOnValidationErrorHandler(OnValidationErrorHandler handler) Parameters Type Name Description OnValidationErrorHandler handler | Improve this Doc View Source SetOnValidationErrorHandlerAsync(OnValidationErrorHandlerAsync) Declaration void SetOnValidationErrorHandlerAsync(OnValidationErrorHandlerAsync handler) Parameters Type Name Description OnValidationErrorHandlerAsync handler Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.ConnectionService.MockDataResponseFactory.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.MockDataResponseFactory.html",
    "title": "Class MockDataResponseFactory | DbFacade",
    "keywords": "Class MockDataResponseFactory Inheritance System.Object MockDataResponseFactory Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public static class MockDataResponseFactory Methods | Improve this Doc View Source AddMockResponseData(IDbMethod, MockResponseData) Declaration public static void AddMockResponseData(this IDbMethod method, MockResponseData response) Parameters Type Name Description IDbMethod method MockResponseData response | Improve this Doc View Source AddMockResponseData(IDbCommandConfig, MockResponseData) Declaration public static void AddMockResponseData(this IDbCommandConfig config, MockResponseData response) Parameters Type Name Description IDbCommandConfig config MockResponseData response | Improve this Doc View Source Clear() Declaration public static void Clear()"
  },
  "api/DbFacade.DataLayer.ConnectionService.SqlConnectionConfig-1.html": {
    "href": "api/DbFacade.DataLayer.ConnectionService.SqlConnectionConfig-1.html",
    "title": "Class SqlConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class SqlConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfig <TDbConnectionConfig> DbConnectionConfigFull <TDbConnectionConfig> SqlConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig Inherited Members DbConnectionConfigFull<TDbConnectionConfig>.CreateFetchCommand(String, String, Boolean) DbConnectionConfigFull<TDbConnectionConfig>.CreateFetchCommand(String, String, CommandType, Boolean) DbConnectionConfigFull<TDbConnectionConfig>.CreateSchemaFactory(String) DbConnectionConfigFull<TDbConnectionConfig>.Dbo DbConnectionConfig<TDbConnectionConfig>.GetConnectionOptions() DbConnectionConfig<TDbConnectionConfig>.EnableMockMode() DbConnectionConfig<TDbConnectionConfig>.DisableMockMode() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.ConnectionService Assembly : DbFacade.dll Syntax public abstract class SqlConnectionConfig<TDbConnectionConfig> : DbConnectionConfigFull<TDbConnectionConfig>, IDbConnectionConfig where TDbConnectionConfig : IDbConnectionConfig Type Parameters Name Description TDbConnectionConfig Methods | Improve this Doc View Source Configure(OnGetConnectionString, Action<IErrorHandlerOptions>) Declaration public static void Configure(OnGetConnectionString getConnectionString, Action<IErrorHandlerOptions> handler) Parameters Type Name Description OnGetConnectionString getConnectionString System.Action < IErrorHandlerOptions > handler | Improve this Doc View Source Configure(OnGetConnectionString, SqlCredential, Action<IErrorHandlerOptions>) Declaration public static void Configure(OnGetConnectionString getConnectionString, SqlCredential credential, Action<IErrorHandlerOptions> handler) Parameters Type Name Description OnGetConnectionString getConnectionString System.Data.SqlClient.SqlCredential credential System.Action < IErrorHandlerOptions > handler Implements IDbConnectionConfig Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.DbDataModel.html": {
    "href": "api/DbFacade.DataLayer.Models.DbDataModel.html",
    "title": "Class DbDataModel | DbFacade",
    "keywords": "Class DbDataModel Inheritance System.Object DbDataModel Implements IDbDataModel IDataCollectionModel Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax [JsonObject] [Serializable] public abstract class DbDataModel : IDbDataModel Properties | Improve this Doc View Source DataBindingErrors Gets the data binding errors. Declaration [JsonIgnore] public IEnumerable<string> DataBindingErrors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > The data binding errors. | Improve this Doc View Source HasDataBindingErrors Gets a value indicating whether this instance has data binding errors. Declaration [JsonIgnore] public bool HasDataBindingErrors { get; } Property Value Type Description System.Boolean true if this instance has data binding errors; otherwise, false . Methods | Improve this Doc View Source CreateNestedModel<TDbDataModel>() Creates the nested model. Declaration protected TDbDataModel CreateNestedModel<TDbDataModel>() where TDbDataModel : DbDataModel Returns Type Description TDbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. | Improve this Doc View Source CreateNestedModelAsync<TDbDataModel>() Creates the nested model asynchronous. Declaration protected async Task<TDbDataModel> CreateNestedModelAsync<TDbDataModel>() where TDbDataModel : DbDataModel Returns Type Description System.Threading.Tasks.Task <TDbDataModel> Type Parameters Name Description TDbDataModel The type of the database data model. | Improve this Doc View Source GetColumn<T>(String, T) Gets the column. Declaration protected T GetColumn<T>(string col, T defaultValue = null) Parameters Type Name Description System.String col The col. T defaultValue The default value. Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetColumnAsync<T>(String, T) Gets the column asynchronous. Declaration protected async Task<T> GetColumnAsync<T>(string col, T defaultValue = null) Parameters Type Name Description System.String col The col. T defaultValue The default value. Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T | Improve this Doc View Source GetDateTimeColumn(String, String, DateTimeStyles) Gets the date time column. Declaration protected DateTime? GetDateTimeColumn(string col, string format, DateTimeStyles style = DateTimeStyles.None) Parameters Type Name Description System.String col The col. System.String format The format. System.Globalization.DateTimeStyles style The style. Returns Type Description System.Nullable < System.DateTime > | Improve this Doc View Source GetDateTimeColumn(String, String, IFormatProvider, DateTimeStyles) Gets the date time column. Declaration protected DateTime? GetDateTimeColumn(string col, string format, IFormatProvider provider, DateTimeStyles style = DateTimeStyles.None) Parameters Type Name Description System.String col The col. System.String format The format. System.IFormatProvider provider The provider. System.Globalization.DateTimeStyles style The style. Returns Type Description System.Nullable < System.DateTime > | Improve this Doc View Source GetDateTimeColumnAsync(String, String, DateTimeStyles) Gets the date time column asynchronous. Declaration protected async Task<DateTime?> GetDateTimeColumnAsync(string col, string format, DateTimeStyles style = DateTimeStyles.None) Parameters Type Name Description System.String col The col. System.String format The format. System.Globalization.DateTimeStyles style The style. Returns Type Description System.Threading.Tasks.Task < System.Nullable < System.DateTime >> | Improve this Doc View Source GetDateTimeColumnAsync(String, String, IFormatProvider, DateTimeStyles) Gets the date time column asynchronous. Declaration protected async Task<DateTime?> GetDateTimeColumnAsync(string col, string format, IFormatProvider provider, DateTimeStyles style = DateTimeStyles.None) Parameters Type Name Description System.String col The col. System.String format The format. System.IFormatProvider provider The provider. System.Globalization.DateTimeStyles style The style. Returns Type Description System.Threading.Tasks.Task < System.Nullable < System.DateTime >> | Improve this Doc View Source GetEnumerableColumn<T>(String) Gets the enumerable column. Declaration protected IEnumerable<T> GetEnumerableColumn<T>(string col) Parameters Type Name Description System.String col The col. Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetEnumerableColumn<T>(String, Char) Gets the enumerable column. Declaration protected IEnumerable<T> GetEnumerableColumn<T>(string col, char delimeter) Parameters Type Name Description System.String col The col. System.Char delimeter The delimeter. Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetEnumerableColumn<T>(String, String) Gets the enumerable column. Declaration protected IEnumerable<T> GetEnumerableColumn<T>(string col, string delimeter) Parameters Type Name Description System.String col The col. System.String delimeter The delimeter. Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetEnumerableColumnAsync<T>(String) Gets the enumerable column asynchronous. Declaration protected async Task<IEnumerable<T>> GetEnumerableColumnAsync<T>(string col) Parameters Type Name Description System.String col The col. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable <T>> Type Parameters Name Description T | Improve this Doc View Source GetEnumerableColumnAsync<T>(String, Char) Gets the enumerable column asynchronous. Declaration protected async Task<IEnumerable<T>> GetEnumerableColumnAsync<T>(string col, char delimeter) Parameters Type Name Description System.String col The col. System.Char delimeter The delimeter. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable <T>> Type Parameters Name Description T | Improve this Doc View Source GetEnumerableColumnAsync<T>(String, String) Gets the enumerable column asynchronous. Declaration protected async Task<IEnumerable<T>> GetEnumerableColumnAsync<T>(string col, string delimeter) Parameters Type Name Description System.String col The col. System.String delimeter The delimeter. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable <T>> Type Parameters Name Description T | Improve this Doc View Source GetFlagColumn<T>(String, T) Gets the flag column. Declaration protected bool GetFlagColumn<T>(string col, T trueValue) where T : IComparable Parameters Type Name Description System.String col The col. T trueValue The true value. Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source GetFlagColumnAsync<T>(String, T) Gets the flag column asynchronous. Declaration protected async Task<bool> GetFlagColumnAsync<T>(string col, T trueValue) where T : IComparable Parameters Type Name Description System.String col The col. T trueValue The true value. Returns Type Description System.Threading.Tasks.Task < System.Boolean > Type Parameters Name Description T | Improve this Doc View Source GetFormattedDateTimeStringColumn(String, String) Gets the formatted date time string column. Declaration protected string GetFormattedDateTimeStringColumn(string col, string format) Parameters Type Name Description System.String col The col. System.String format The format. Returns Type Description System.String | Improve this Doc View Source GetFormattedDateTimeStringColumnAsync(String, String) Gets the formatted date time string column asynchronous. Declaration protected async Task<string> GetFormattedDateTimeStringColumnAsync(string col, string format) Parameters Type Name Description System.String col The col. System.String format The format. Returns Type Description System.Threading.Tasks.Task < System.String > | Improve this Doc View Source Init() Initializes this instance. Declaration protected virtual void Init() | Improve this Doc View Source InitAsync() Initializes the asynchronous. Declaration protected virtual async Task InitAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source InitDataCollection(IDataCollection) Initializes the data collection. Declaration public void InitDataCollection(IDataCollection collection) Parameters Type Name Description IDataCollection collection The collection. | Improve this Doc View Source IsDbCommand(IDbCommandConfig) Determines whether [is database command] [the specified configuration]. Declaration protected bool IsDbCommand(IDbCommandConfig config) Parameters Type Name Description IDbCommandConfig config The configuration. Returns Type Description System.Boolean true if [is database command] [the specified configuration]; otherwise, false . | Improve this Doc View Source IsDbCommandAsync(IDbCommandConfig) Determines whether [is database command asynchronous] [the specified configuration]. Declaration protected async Task<bool> IsDbCommandAsync(IDbCommandConfig config) Parameters Type Name Description IDbCommandConfig config The configuration. Returns Type Description System.Threading.Tasks.Task < System.Boolean > true if [is database command asynchronous] [the specified configuration]; otherwise, false . | Improve this Doc View Source ToJson() Converts to json. Declaration public string ToJson() Returns Type Description System.String | Improve this Doc View Source ToJsonAsync() Converts to jsonasync. Declaration public async Task<string> ToJsonAsync() Returns Type Description System.Threading.Tasks.Task < System.String > Implements IDbDataModel IDataCollectionModel Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.html": {
    "href": "api/DbFacade.DataLayer.Models.html",
    "title": "Namespace DbFacade.DataLayer.Models | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.Models Classes DbDataModel MockResponseData Interfaces IDbDataModel IDbResponse IDbResponse<TDbDataModel> IJsonSerializable<TDbDataModel> IMockResponseDataResponseBuilder IReadOnlyDbCollection<TDbDataModel> IXMLSerializable<TDbDataModel>"
  },
  "api/DbFacade.DataLayer.Models.IDbDataModel.html": {
    "href": "api/DbFacade.DataLayer.Models.IDbDataModel.html",
    "title": "Interface IDbDataModel | DbFacade",
    "keywords": "Interface IDbDataModel Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IDbDataModel Properties | Improve this Doc View Source DataBindingErrors Gets the data binding errors. Declaration [JsonIgnore] IEnumerable<string> DataBindingErrors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > The data binding errors. | Improve this Doc View Source HasDataBindingErrors Gets a value indicating whether this instance has data binding errors. Declaration bool HasDataBindingErrors { get; } Property Value Type Description System.Boolean true if this instance has data binding errors; otherwise, false . Methods | Improve this Doc View Source ToJson() Converts to json. Declaration string ToJson() Returns Type Description System.String | Improve this Doc View Source ToJsonAsync() Converts to jsonasync. Declaration Task<string> ToJsonAsync() Returns Type Description System.Threading.Tasks.Task < System.String > Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.IDbResponse.html": {
    "href": "api/DbFacade.DataLayer.Models.IDbResponse.html",
    "title": "Interface IDbResponse | DbFacade",
    "keywords": "Interface IDbResponse Inherited Members IDbResponse<DbDataModel>.ReturnValue IDbResponse<DbDataModel>.IsNull IDbResponse<DbDataModel>.HasDataBindingErrors IDbResponse<DbDataModel>.CommandId IDbResponse<DbDataModel>.DbCommandSettings IDbResponse<DbDataModel>.Error IDbResponse<DbDataModel>.HasError IDbResponse<DbDataModel>.ErrorMessage IDbResponse<DbDataModel>.ErrorDetails IDbResponse<DbDataModel>.GetOutputValue(String) IDbResponse<DbDataModel>.GetOutputValue<T>(String) IDbResponse<DbDataModel>.GetOutputModel<T>() IDbResponse<DbDataModel>.GetOutputValueAsync(String) IDbResponse<DbDataModel>.GetOutputValueAsync<T>(String) IDbResponse<DbDataModel>.GetOutputModelAsync<T>() IDbResponse<DbDataModel>.DataSets IDbResponse<DbDataModel>.DataSet System.Collections.Generic.IEnumerable<DbFacade.DataLayer.Models.DbDataModel>.GetEnumerator() IReadOnlyDbCollection<DbDataModel>.Contains(DbDataModel) IReadOnlyDbCollection<DbDataModel>.Count() IReadOnlyDbCollection<DbDataModel>.First() IReadOnlyDbCollection<DbDataModel>.Exists(Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.Find(Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.FindIndex(Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.FindIndex(Int32, Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.FindIndex(Int32, Int32, Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.FindLastIndex(Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.FindLastIndex(Int32, Int32, Predicate<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.ForEach(Action<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.IndexOf(DbDataModel, Int32, Int32) IReadOnlyDbCollection<DbDataModel>.IndexOf(DbDataModel, Int32) IReadOnlyDbCollection<DbDataModel>.IndexOf(DbDataModel) IReadOnlyDbCollection<DbDataModel>.LastIndexOf(DbDataModel) IReadOnlyDbCollection<DbDataModel>.LastIndexOf(DbDataModel, Int32) IReadOnlyDbCollection<DbDataModel>.LastIndexOf(DbDataModel, Int32, Int32) IReadOnlyDbCollection<DbDataModel>.Reverse(Int32, Int32) IReadOnlyDbCollection<DbDataModel>.Reverse() IReadOnlyDbCollection<DbDataModel>.Sort(Int32, Int32, IComparer<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.Sort(Comparison<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.Sort() IReadOnlyDbCollection<DbDataModel>.Sort(IComparer<DbDataModel>) IReadOnlyDbCollection<DbDataModel>.ToArray() IReadOnlyDbCollection<DbDataModel>.ToList() IReadOnlyDbCollection<DbDataModel>.ToListAsync() IXMLSerializable<DbDataModel>.Serialize(TextWriter) IXMLSerializable<DbDataModel>.SerializeAsync(TextWriter) IXMLSerializable<DbDataModel>.Serialize(XmlWriter) IXMLSerializable<DbDataModel>.SerializeAsync(XmlWriter) IJsonSerializable<DbDataModel>.ToJson() IJsonSerializable<DbDataModel>.ToJsonAsync() Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IDbResponse : IDbResponse<DbDataModel>, IEnumerable<DbDataModel>, IEnumerable, IReadOnlyDbCollection<DbDataModel>, IXMLSerializable<DbDataModel>, IJsonSerializable<DbDataModel> Extension Methods DbResponseExtensions.TryGetDataSet<TDbDataModel, T1>(IDbResponse<TDbDataModel>, out IEnumerable<T1>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>, out IEnumerable<T8>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8, T9>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>, out IEnumerable<T8>, out IEnumerable<T9>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>, out IEnumerable<T8>, out IEnumerable<T9>, out IEnumerable<T10>) Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String) Utils.TryGetDataTable<To>(IEnumerable<To>, out DataTable)"
  },
  "api/DbFacade.DataLayer.Models.IDbResponse-1.html": {
    "href": "api/DbFacade.DataLayer.Models.IDbResponse-1.html",
    "title": "Interface IDbResponse<TDbDataModel> | DbFacade",
    "keywords": "Interface IDbResponse<TDbDataModel> Inherited Members System.Collections.Generic.IEnumerable<TDbDataModel>.GetEnumerator() IReadOnlyDbCollection<TDbDataModel>.Contains(TDbDataModel) IReadOnlyDbCollection<TDbDataModel>.Count() IReadOnlyDbCollection<TDbDataModel>.First() IReadOnlyDbCollection<TDbDataModel>.Exists(Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.Find(Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.FindIndex(Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.FindIndex(Int32, Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.FindIndex(Int32, Int32, Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.FindLastIndex(Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.FindLastIndex(Int32, Int32, Predicate<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.ForEach(Action<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.IndexOf(TDbDataModel, Int32, Int32) IReadOnlyDbCollection<TDbDataModel>.IndexOf(TDbDataModel, Int32) IReadOnlyDbCollection<TDbDataModel>.IndexOf(TDbDataModel) IReadOnlyDbCollection<TDbDataModel>.LastIndexOf(TDbDataModel) IReadOnlyDbCollection<TDbDataModel>.LastIndexOf(TDbDataModel, Int32) IReadOnlyDbCollection<TDbDataModel>.LastIndexOf(TDbDataModel, Int32, Int32) IReadOnlyDbCollection<TDbDataModel>.Reverse(Int32, Int32) IReadOnlyDbCollection<TDbDataModel>.Reverse() IReadOnlyDbCollection<TDbDataModel>.Sort(Int32, Int32, IComparer<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.Sort(Comparison<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.Sort() IReadOnlyDbCollection<TDbDataModel>.Sort(IComparer<TDbDataModel>) IReadOnlyDbCollection<TDbDataModel>.ToArray() IReadOnlyDbCollection<TDbDataModel>.ToList() IReadOnlyDbCollection<TDbDataModel>.ToListAsync() IXMLSerializable<TDbDataModel>.Serialize(TextWriter) IXMLSerializable<TDbDataModel>.SerializeAsync(TextWriter) IXMLSerializable<TDbDataModel>.Serialize(XmlWriter) IXMLSerializable<TDbDataModel>.SerializeAsync(XmlWriter) IJsonSerializable<TDbDataModel>.ToJson() IJsonSerializable<TDbDataModel>.ToJsonAsync() Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IDbResponse<TDbDataModel> : IEnumerable<TDbDataModel>, IEnumerable, IReadOnlyDbCollection<TDbDataModel>, IXMLSerializable<TDbDataModel>, IJsonSerializable<TDbDataModel> where TDbDataModel : DbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. Properties | Improve this Doc View Source CommandId Gets the command identifier. Declaration Guid CommandId { get; } Property Value Type Description System.Guid The command identifier. | Improve this Doc View Source DataSet Gets the data set. Declaration DataSet DataSet { get; } Property Value Type Description System.Data.DataSet The data set. | Improve this Doc View Source DataSets Gets the data sets. Declaration IEnumerable<IDbDataSet> DataSets { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IDbDataSet > The data sets. | Improve this Doc View Source DbCommandSettings Gets the database command settings. Declaration IDbCommandSettings DbCommandSettings { get; } Property Value Type Description IDbCommandSettings The database command settings. | Improve this Doc View Source Error Gets the error. Declaration Exception Error { get; } Property Value Type Description System.Exception The error. | Improve this Doc View Source ErrorDetails Gets the error details. Declaration string ErrorDetails { get; } Property Value Type Description System.String The error details. | Improve this Doc View Source ErrorMessage Gets the error message. Declaration string ErrorMessage { get; } Property Value Type Description System.String The error message. | Improve this Doc View Source HasDataBindingErrors Gets a value indicating whether this instance has data binding errors. Declaration bool HasDataBindingErrors { get; } Property Value Type Description System.Boolean true if this instance has data binding errors; otherwise, false . | Improve this Doc View Source HasError Gets a value indicating whether this instance has error. Declaration bool HasError { get; } Property Value Type Description System.Boolean true if this instance has error; otherwise, false . | Improve this Doc View Source IsNull Gets a value indicating whether this instance is null. Declaration bool IsNull { get; } Property Value Type Description System.Boolean true if this instance is null; otherwise, false . | Improve this Doc View Source ReturnValue Gets the return value. Declaration int ReturnValue { get; } Property Value Type Description System.Int32 The return value. Methods | Improve this Doc View Source GetOutputModel<T>() Gets the output model. Declaration T GetOutputModel<T>() where T : DbDataModel Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetOutputModelAsync<T>() Gets the output model asynchronous. Declaration Task<T> GetOutputModelAsync<T>() where T : DbDataModel Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T | Improve this Doc View Source GetOutputValue(String) Gets the output value. Declaration object GetOutputValue(string key) Parameters Type Name Description System.String key The key. Returns Type Description System.Object | Improve this Doc View Source GetOutputValue<T>(String) Gets the output value. Declaration T GetOutputValue<T>(string key) Parameters Type Name Description System.String key The key. Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetOutputValueAsync(String) Gets the output value asynchronous. Declaration Task<object> GetOutputValueAsync(string key) Parameters Type Name Description System.String key The key. Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source GetOutputValueAsync<T>(String) Gets the output value asynchronous. Declaration Task<T> GetOutputValueAsync<T>(string key) Parameters Type Name Description System.String key The key. Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T Extension Methods DbResponseExtensions.TryGetDataSet<TDbDataModel, T1>(IDbResponse<TDbDataModel>, out IEnumerable<T1>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>, out IEnumerable<T8>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8, T9>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>, out IEnumerable<T8>, out IEnumerable<T9>) DbResponseExtensions.TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>, out IEnumerable<T8>, out IEnumerable<T9>, out IEnumerable<T10>) Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String) Utils.TryGetDataTable<To>(IEnumerable<To>, out DataTable)"
  },
  "api/DbFacade.DataLayer.Models.IJsonSerializable-1.html": {
    "href": "api/DbFacade.DataLayer.Models.IJsonSerializable-1.html",
    "title": "Interface IJsonSerializable<TDbDataModel> | DbFacade",
    "keywords": "Interface IJsonSerializable<TDbDataModel> Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IJsonSerializable<TDbDataModel> where TDbDataModel : DbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. Methods | Improve this Doc View Source ToJson() Converts to json. Declaration string ToJson() Returns Type Description System.String | Improve this Doc View Source ToJsonAsync() Converts to jsonasync. Declaration Task<string> ToJsonAsync() Returns Type Description System.Threading.Tasks.Task < System.String > Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.IMockResponseDataResponseBuilder.html": {
    "href": "api/DbFacade.DataLayer.Models.IMockResponseDataResponseBuilder.html",
    "title": "Interface IMockResponseDataResponseBuilder | DbFacade",
    "keywords": "Interface IMockResponseDataResponseBuilder Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IMockResponseDataResponseBuilder Methods | Improve this Doc View Source AddOutputValueHandler(Action<IDictionary<String, Object>>) Adds the output value handler. Declaration void AddOutputValueHandler(Action<IDictionary<string, object>> outputValueHandler = null) Parameters Type Name Description System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValueHandler The output value handler. | Improve this Doc View Source AddResponseData<T>(IEnumerable<T>) Adds the response data. Declaration void AddResponseData<T>(IEnumerable<T> responseData) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> responseData The response data. Type Parameters Name Description T | Improve this Doc View Source AddReturnValue(Nullable<Int32>) Adds the return value. Declaration void AddReturnValue(int? returnValue = null) Parameters Type Name Description System.Nullable < System.Int32 > returnValue The return value. Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.IReadOnlyDbCollection-1.html": {
    "href": "api/DbFacade.DataLayer.Models.IReadOnlyDbCollection-1.html",
    "title": "Interface IReadOnlyDbCollection<TDbDataModel> | DbFacade",
    "keywords": "Interface IReadOnlyDbCollection<TDbDataModel> Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IReadOnlyDbCollection<TDbDataModel> where TDbDataModel : DbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. Methods | Improve this Doc View Source Contains(TDbDataModel) Determines whether this instance contains the object. Declaration bool Contains(TDbDataModel item) Parameters Type Name Description TDbDataModel item The item. Returns Type Description System.Boolean true if [contains] [the specified item]; otherwise, false . | Improve this Doc View Source Count() Counts this instance. Declaration int Count() Returns Type Description System.Int32 | Improve this Doc View Source Exists(Predicate<TDbDataModel>) Existses the specified match. Declaration bool Exists(Predicate<TDbDataModel> match) Parameters Type Name Description System.Predicate <TDbDataModel> match The match. Returns Type Description System.Boolean | Improve this Doc View Source Find(Predicate<TDbDataModel>) Finds the specified match. Declaration TDbDataModel Find(Predicate<TDbDataModel> match) Parameters Type Name Description System.Predicate <TDbDataModel> match The match. Returns Type Description TDbDataModel | Improve this Doc View Source FindIndex(Int32, Int32, Predicate<TDbDataModel>) Finds the index. Declaration int FindIndex(int startIndex, int count, Predicate<TDbDataModel> match) Parameters Type Name Description System.Int32 startIndex The start index. System.Int32 count The count. System.Predicate <TDbDataModel> match The match. Returns Type Description System.Int32 | Improve this Doc View Source FindIndex(Int32, Predicate<TDbDataModel>) Finds the index. Declaration int FindIndex(int startIndex, Predicate<TDbDataModel> match) Parameters Type Name Description System.Int32 startIndex The start index. System.Predicate <TDbDataModel> match The match. Returns Type Description System.Int32 | Improve this Doc View Source FindIndex(Predicate<TDbDataModel>) Finds the index. Declaration int FindIndex(Predicate<TDbDataModel> match) Parameters Type Name Description System.Predicate <TDbDataModel> match The match. Returns Type Description System.Int32 | Improve this Doc View Source FindLastIndex(Int32, Int32, Predicate<TDbDataModel>) Finds the last index. Declaration int FindLastIndex(int startIndex, int count, Predicate<TDbDataModel> match) Parameters Type Name Description System.Int32 startIndex The start index. System.Int32 count The count. System.Predicate <TDbDataModel> match The match. Returns Type Description System.Int32 | Improve this Doc View Source FindLastIndex(Predicate<TDbDataModel>) Finds the last index. Declaration int FindLastIndex(Predicate<TDbDataModel> match) Parameters Type Name Description System.Predicate <TDbDataModel> match The match. Returns Type Description System.Int32 | Improve this Doc View Source First() Firsts this instance. Declaration TDbDataModel First() Returns Type Description TDbDataModel | Improve this Doc View Source ForEach(Action<TDbDataModel>) Fors the each. Declaration void ForEach(Action<TDbDataModel> action) Parameters Type Name Description System.Action <TDbDataModel> action The action. | Improve this Doc View Source IndexOf(TDbDataModel) Indexes the of. Declaration int IndexOf(TDbDataModel item) Parameters Type Name Description TDbDataModel item The item. Returns Type Description System.Int32 | Improve this Doc View Source IndexOf(TDbDataModel, Int32) Indexes the of. Declaration int IndexOf(TDbDataModel item, int index) Parameters Type Name Description TDbDataModel item The item. System.Int32 index The index. Returns Type Description System.Int32 | Improve this Doc View Source IndexOf(TDbDataModel, Int32, Int32) Indexes the of. Declaration int IndexOf(TDbDataModel item, int index, int count) Parameters Type Name Description TDbDataModel item The item. System.Int32 index The index. System.Int32 count The count. Returns Type Description System.Int32 | Improve this Doc View Source LastIndexOf(TDbDataModel) Lasts the index of. Declaration int LastIndexOf(TDbDataModel item) Parameters Type Name Description TDbDataModel item The item. Returns Type Description System.Int32 | Improve this Doc View Source LastIndexOf(TDbDataModel, Int32) Lasts the index of. Declaration int LastIndexOf(TDbDataModel item, int index) Parameters Type Name Description TDbDataModel item The item. System.Int32 index The index. Returns Type Description System.Int32 | Improve this Doc View Source LastIndexOf(TDbDataModel, Int32, Int32) Lasts the index of. Declaration int LastIndexOf(TDbDataModel item, int index, int count) Parameters Type Name Description TDbDataModel item The item. System.Int32 index The index. System.Int32 count The count. Returns Type Description System.Int32 | Improve this Doc View Source Reverse() Reverses this instance. Declaration void Reverse() | Improve this Doc View Source Reverse(Int32, Int32) Reverses the specified index. Declaration void Reverse(int index, int count) Parameters Type Name Description System.Int32 index The index. System.Int32 count The count. | Improve this Doc View Source Sort() Sorts this instance. Declaration void Sort() | Improve this Doc View Source Sort(IComparer<TDbDataModel>) Sorts the specified comparer. Declaration void Sort(IComparer<TDbDataModel> comparer) Parameters Type Name Description System.Collections.Generic.IComparer <TDbDataModel> comparer The comparer. | Improve this Doc View Source Sort(Comparison<TDbDataModel>) Sorts the specified comparison. Declaration void Sort(Comparison<TDbDataModel> comparison) Parameters Type Name Description System.Comparison <TDbDataModel> comparison The comparison. | Improve this Doc View Source Sort(Int32, Int32, IComparer<TDbDataModel>) Sorts the specified index. Declaration void Sort(int index, int count, IComparer<TDbDataModel> comparer) Parameters Type Name Description System.Int32 index The index. System.Int32 count The count. System.Collections.Generic.IComparer <TDbDataModel> comparer The comparer. | Improve this Doc View Source ToArray() Converts to array. Declaration TDbDataModel[] ToArray() Returns Type Description TDbDataModel[] | Improve this Doc View Source ToList() Converts to list. Declaration List<TDbDataModel> ToList() Returns Type Description System.Collections.Generic.List <TDbDataModel> | Improve this Doc View Source ToListAsync() Converts to listasync. Declaration Task<List<TDbDataModel>> ToListAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDbDataModel>> Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.IXMLSerializable-1.html": {
    "href": "api/DbFacade.DataLayer.Models.IXMLSerializable-1.html",
    "title": "Interface IXMLSerializable<TDbDataModel> | DbFacade",
    "keywords": "Interface IXMLSerializable<TDbDataModel> Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IXMLSerializable<TDbDataModel> where TDbDataModel : DbDataModel Type Parameters Name Description TDbDataModel The type of the database data model. Methods | Improve this Doc View Source Serialize(TextWriter) Serializes the specified text writer. Declaration void Serialize(TextWriter textWriter) Parameters Type Name Description System.IO.TextWriter textWriter The text writer. | Improve this Doc View Source Serialize(XmlWriter) Serializes the specified XML writer. Declaration void Serialize(XmlWriter xmlWriter) Parameters Type Name Description System.Xml.XmlWriter xmlWriter The XML writer. | Improve this Doc View Source SerializeAsync(TextWriter) Serializes the asynchronous. Declaration Task SerializeAsync(TextWriter textWriter) Parameters Type Name Description System.IO.TextWriter textWriter The text writer. Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source SerializeAsync(XmlWriter) Serializes the asynchronous. Declaration Task SerializeAsync(XmlWriter xmlWriter) Parameters Type Name Description System.Xml.XmlWriter xmlWriter The XML writer. Returns Type Description System.Threading.Tasks.Task Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.MockResponseData.html": {
    "href": "api/DbFacade.DataLayer.Models.MockResponseData.html",
    "title": "Class MockResponseData | DbFacade",
    "keywords": "Class MockResponseData Inheritance System.Object MockResponseData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.Models Assembly : DbFacade.dll Syntax public sealed class MockResponseData Methods | Improve this Doc View Source Create(Action<IMockResponseDataResponseBuilder>) Creates the specified builder handler. Declaration public static MockResponseData Create(Action<IMockResponseDataResponseBuilder> builderHandler) Parameters Type Name Description System.Action < IMockResponseDataResponseBuilder > builderHandler The builder handler. Returns Type Description MockResponseData | Improve this Doc View Source Create(Action<IDictionary<String, Object>>, Nullable<Int32>) Creates the specified output value handler. Declaration public static MockResponseData Create(Action<IDictionary<string, object>> outputValueHandler = null, int? returnValue = null) Parameters Type Name Description System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValueHandler The output value handler. System.Nullable < System.Int32 > returnValue The return value. Returns Type Description MockResponseData | Improve this Doc View Source Create(Int32) Creates the specified output value handler. Declaration public static MockResponseData Create(int returnValue) Parameters Type Name Description System.Int32 returnValue The return value. Returns Type Description MockResponseData | Improve this Doc View Source Create<T>(IEnumerable<T>, Action<IDictionary<String, Object>>, Nullable<Int32>) Creates the specified response data. Declaration public static MockResponseData Create<T>(IEnumerable<T> responseData, Action<IDictionary<string, object>> outputValueHandler = null, int? returnValue = null) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> responseData The response data. System.Action < System.Collections.Generic.IDictionary < System.String , System.Object >> outputValueHandler The output value handler. System.Nullable < System.Int32 > returnValue The return value. Returns Type Description MockResponseData Type Parameters Name Description T Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.Validators.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.html",
    "title": "Namespace DbFacade.DataLayer.Models.Validators | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.Models.Validators Interfaces IValidationResult IValidator<TDbParams>"
  },
  "api/DbFacade.DataLayer.Models.Validators.IValidationResult.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.IValidationResult.html",
    "title": "Interface IValidationResult | DbFacade",
    "keywords": "Interface IValidationResult Namespace : DbFacade.DataLayer.Models.Validators Assembly : DbFacade.dll Syntax public interface IValidationResult Properties | Improve this Doc View Source Errors Gets the errors. Declaration IEnumerable<IValidationRuleResult> Errors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IValidationRuleResult > The errors. | Improve this Doc View Source ErrorSummary Gets the error summary. Declaration string ErrorSummary { get; } Property Value Type Description System.String The error summary. | Improve this Doc View Source IsValid Returns true if ... is valid. Declaration bool IsValid { get; } Property Value Type Description System.Boolean true if this instance is valid; otherwise, false . Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.Validators.IValidator-1.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.IValidator-1.html",
    "title": "Interface IValidator<TDbParams> | DbFacade",
    "keywords": "Interface IValidator<TDbParams> Namespace : DbFacade.DataLayer.Models.Validators Assembly : DbFacade.dll Syntax public interface IValidator<TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. Properties | Improve this Doc View Source Count Gets the count. Declaration int Count { get; } Property Value Type Description System.Int32 The count. | Improve this Doc View Source Rules Gets the rules. Declaration ValidationRuleFactory<TDbParams> Rules { get; } Property Value Type Description ValidationRuleFactory <TDbParams> The rules. Methods | Improve this Doc View Source Add(IValidationRule<TDbParams>, String) Adds the specified rule. Declaration void Add(IValidationRule<TDbParams> rule, string parameterName = \"Unspecified Parameter\") Parameters Type Name Description IValidationRule <TDbParams> rule The rule. System.String parameterName | Improve this Doc View Source AddAsync(IValidationRule<TDbParams>, String) Adds the asynchronous. Declaration Task AddAsync(IValidationRule<TDbParams> rule, string parameterName = \"Unspecified Parameter\") Parameters Type Name Description IValidationRule <TDbParams> rule The rule. System.String parameterName Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Validate(TDbParams) Validates the specified parameters model. Declaration IValidationResult Validate(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description IValidationResult | Improve this Doc View Source ValidateAsync(TDbParams) Validates the asynchronous. Declaration Task<IValidationResult> ValidateAsync(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description System.Threading.Tasks.Task < IValidationResult > Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.EmailDomainMode.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.EmailDomainMode.html",
    "title": "Enum EmailDomainMode | DbFacade",
    "keywords": "Enum EmailDomainMode Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public enum EmailDomainMode Fields Name Description AllowAll The allow all Blacklist The blacklist Whitelist The whitelist Extension Methods Utils.TryParse<T>(T) Utils.TryParse<T>(T, T) Utils.TryGetValue(String, Object, Object) Utils.TryGetValue<To>(String, To, To) Utils.TryGetEnumerable<To>(String, IEnumerable<To>) Utils.TryGetEnumerable<To>(String, Char, IEnumerable<To>) Utils.TryGetEnumerable<To>(String, IEnumerable<To>, To) Utils.TryGetEnumerable<To>(String, Char, IEnumerable<To>, To) Utils.TryGetFlagValue<T>(String, T, Boolean) Utils.TryGetDateTimeValue(String, String, Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(String, String, IFormatProvider, Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(String, String, String)"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.html",
    "title": "Namespace DbFacade.DataLayer.Models.Validators.Rules | DbFacade",
    "keywords": "Namespace DbFacade.DataLayer.Models.Validators.Rules Classes ValidationRule<TDbParams> Interfaces IValidationRule<TDbParams> IValidationRuleResult Enums EmailDomainMode ValidationStatus Delegates ValidationRule<TDbParams>.DelegateRuleHandler<T>"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.IValidationRule-1.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.IValidationRule-1.html",
    "title": "Interface IValidationRule<TDbParams> | DbFacade",
    "keywords": "Interface IValidationRule<TDbParams> Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public interface IValidationRule<TDbParams> Type Parameters Name Description TDbParams The type of the b parameters. Methods | Improve this Doc View Source Validate(TDbParams) Validates the specified parameters model. Declaration IValidationRuleResult Validate(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description IValidationRuleResult | Improve this Doc View Source ValidateAsync(TDbParams) Validates the asynchronous. Declaration Task<IValidationRuleResult> ValidateAsync(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description System.Threading.Tasks.Task < IValidationRuleResult > Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.IValidationRuleResult.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.IValidationRuleResult.html",
    "title": "Interface IValidationRuleResult | DbFacade",
    "keywords": "Interface IValidationRuleResult Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public interface IValidationRuleResult Properties | Improve this Doc View Source ErrorMessage Gets the error message. Declaration string ErrorMessage { get; } Property Value Type Description System.String The error message. | Improve this Doc View Source Model Gets the model. Declaration object Model { get; } Property Value Type Description System.Object The model. | Improve this Doc View Source Status Gets the status. Declaration ValidationStatus Status { get; } Property Value Type Description ValidationStatus The status. Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationRule-1.DelegateRuleHandler-1.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationRule-1.DelegateRuleHandler-1.html",
    "title": "Delegate ValidationRule<TDbParams>.DelegateRuleHandler<T> | DbFacade",
    "keywords": "Delegate ValidationRule<TDbParams>.DelegateRuleHandler<T> Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public delegate bool DelegateRuleHandler<T>(T value); Parameters Type Name Description T value The value. Returns Type Description System.Boolean Type Parameters Name Description T Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationRule-1.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationRule-1.html",
    "title": "Class ValidationRule<TDbParams> | DbFacade",
    "keywords": "Class ValidationRule<TDbParams> Inheritance System.Object ValidationRule<TDbParams> Implements IValidationRule <TDbParams> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public abstract class ValidationRule<TDbParams> : IValidationRule<TDbParams> Type Parameters Name Description TDbParams The type of the b parameters. Constructors | Improve this Doc View Source ValidationRule() Initializes a new instance of the ValidationRule<TDbParams> class. Declaration protected ValidationRule() Properties | Improve this Doc View Source GetParamFunc Gets the get parameter function. Declaration protected Func<TDbParams, object> GetParamFunc { get; } Property Value Type Description System.Func <TDbParams, System.Object > The get parameter function. | Improve this Doc View Source IsNullable Gets a value indicating whether this instance is nullable. Declaration protected bool IsNullable { get; } Property Value Type Description System.Boolean true if this instance is nullable; otherwise, false . | Improve this Doc View Source ParamsValue Gets the parameters value. Declaration protected object ParamsValue { get; } Property Value Type Description System.Object The parameters value. Methods | Improve this Doc View Source GetErrorMessageCore(TDbParams) Gets the error message core. Declaration protected virtual string GetErrorMessageCore(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description System.String | Improve this Doc View Source GetErrorMessageCoreAsync(TDbParams) Gets the error message core asynchronous. Declaration protected virtual async Task<string> GetErrorMessageCoreAsync(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description System.Threading.Tasks.Task < System.String > | Improve this Doc View Source GetRules() Gets the rules. Declaration public static ValidationRule<TDbParams> GetRules() Returns Type Description ValidationRule <TDbParams> | Improve this Doc View Source IsNumber(Func<TDbParams, String>, Boolean) Determines whether the specified selector is number. Declaration public static IValidationRule<TDbParams> IsNumber(Func<TDbParams, string> selector, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source SetParameterName(String) Declaration public void SetParameterName(string parameterName) Parameters Type Name Description System.String parameterName | Improve this Doc View Source Validate(TDbParams) Validates the specified parameters model. Declaration public IValidationRuleResult Validate(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description IValidationRuleResult | Improve this Doc View Source ValidateAsync(TDbParams) Validates the asynchronous. Declaration public async Task<IValidationRuleResult> ValidateAsync(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description System.Threading.Tasks.Task < IValidationRuleResult > | Improve this Doc View Source ValidateRule(TDbParams) Validates the rule. Declaration protected virtual bool ValidateRule(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description System.Boolean | Improve this Doc View Source ValidateRuleAsync(TDbParams) Validates the rule asynchronous. Declaration protected virtual async Task<bool> ValidateRuleAsync(TDbParams paramsModel) Parameters Type Name Description TDbParams paramsModel The parameters model. Returns Type Description System.Threading.Tasks.Task < System.Boolean > Implements IValidationRule<TDbParams> Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String) See Also IValidationRule <TDbParams> IValidationRule <TDbParams> IValidationRule <TDbParams> IValidationRule <TDbParams>"
  },
  "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationStatus.html": {
    "href": "api/DbFacade.DataLayer.Models.Validators.Rules.ValidationStatus.html",
    "title": "Enum ValidationStatus | DbFacade",
    "keywords": "Enum ValidationStatus Namespace : DbFacade.DataLayer.Models.Validators.Rules Assembly : DbFacade.dll Syntax public enum ValidationStatus Fields Name Description FAIL The fail PASS The pass Extension Methods Utils.TryParse<T>(T) Utils.TryParse<T>(T, T) Utils.TryGetValue(String, Object, Object) Utils.TryGetValue<To>(String, To, To) Utils.TryGetEnumerable<To>(String, IEnumerable<To>) Utils.TryGetEnumerable<To>(String, Char, IEnumerable<To>) Utils.TryGetEnumerable<To>(String, IEnumerable<To>, To) Utils.TryGetEnumerable<To>(String, Char, IEnumerable<To>, To) Utils.TryGetFlagValue<T>(String, T, Boolean) Utils.TryGetDateTimeValue(String, String, Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(String, String, IFormatProvider, Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(String, String, String)"
  },
  "api/DbFacade.Exceptions.DbConnectionConfigNotRegisteredException.html": {
    "href": "api/DbFacade.Exceptions.DbConnectionConfigNotRegisteredException.html",
    "title": "Class DbConnectionConfigNotRegisteredException | DbFacade",
    "keywords": "Class DbConnectionConfigNotRegisteredException Inheritance System.Object System.Exception FacadeException DbConnectionConfigNotRegisteredException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members FacadeException.ErrorDetails System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : DbFacade.Exceptions Assembly : DbFacade.dll Syntax public class DbConnectionConfigNotRegisteredException : FacadeException, ISerializable, _Exception Methods | Improve this Doc View Source Name() Names this instance. Declaration public override string Name() Returns Type Description System.String Overrides FacadeException.Name() Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Exceptions.FacadeException.html": {
    "href": "api/DbFacade.Exceptions.FacadeException.html",
    "title": "Class FacadeException | DbFacade",
    "keywords": "Class FacadeException Inheritance System.Object System.Exception FacadeException DbConnectionConfigNotRegisteredException SQLExecutionException ValidationException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : DbFacade.Exceptions Assembly : DbFacade.dll Syntax public class FacadeException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source FacadeException() Initializes a new instance of the FacadeException class. Declaration public FacadeException() | Improve this Doc View Source FacadeException(String) Initializes a new instance of the FacadeException class. Declaration public FacadeException(string errorMessage) Parameters Type Name Description System.String errorMessage The error message. | Improve this Doc View Source FacadeException(String, Exception) Initializes a new instance of the FacadeException class. Declaration public FacadeException(string errorMessage, Exception innerException) Parameters Type Name Description System.String errorMessage The error message. System.Exception innerException The inner exception. Properties | Improve this Doc View Source ErrorDetails Declaration public virtual string ErrorDetails { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Name() Names this instance. Declaration public virtual string Name() Returns Type Description System.String Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Exceptions.html": {
    "href": "api/DbFacade.Exceptions.html",
    "title": "Namespace DbFacade.Exceptions | DbFacade",
    "keywords": "Namespace DbFacade.Exceptions Classes DbConnectionConfigNotRegisteredException FacadeException SQLExecutionException ValidationException"
  },
  "api/DbFacade.Exceptions.SQLExecutionException.html": {
    "href": "api/DbFacade.Exceptions.SQLExecutionException.html",
    "title": "Class SQLExecutionException | DbFacade",
    "keywords": "Class SQLExecutionException Inheritance System.Object System.Exception FacadeException SQLExecutionException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members FacadeException.ErrorDetails System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : DbFacade.Exceptions Assembly : DbFacade.dll Syntax public class SQLExecutionException : FacadeException, ISerializable, _Exception Properties | Improve this Doc View Source CommandText Gets the command text. Declaration public string CommandText { get; } Property Value Type Description System.String The command text. Methods | Improve this Doc View Source Name() Names this instance. Declaration public override string Name() Returns Type Description System.String Overrides FacadeException.Name() Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Exceptions.ValidationException.html": {
    "href": "api/DbFacade.Exceptions.ValidationException.html",
    "title": "Class ValidationException | DbFacade",
    "keywords": "Class ValidationException Inheritance System.Object System.Exception FacadeException ValidationException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : DbFacade.Exceptions Assembly : DbFacade.dll Syntax public class ValidationException : FacadeException, ISerializable, _Exception Properties | Improve this Doc View Source Count Gets the count. Declaration public int Count { get; } Property Value Type Description System.Int32 The count. | Improve this Doc View Source ErrorDetails Declaration public override string ErrorDetails { get; } Property Value Type Description System.String Overrides FacadeException.ErrorDetails | Improve this Doc View Source Parameters Gets the parameters. Declaration public object Parameters { get; } Property Value Type Description System.Object The parameters. | Improve this Doc View Source ValidationErrors Gets the validation errors. Declaration public IEnumerable<IValidationRuleResult> ValidationErrors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IValidationRuleResult > The validation errors. Methods | Improve this Doc View Source Name() Names this instance. Declaration public override string Name() Returns Type Description System.String Overrides FacadeException.Name() Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Factories.DbCommandParameterConfigFactory-1.html": {
    "href": "api/DbFacade.Factories.DbCommandParameterConfigFactory-1.html",
    "title": "Class DbCommandParameterConfigFactory<TDbParams> | DbFacade",
    "keywords": "Class DbCommandParameterConfigFactory<TDbParams> Inheritance System.Object DbCommandParameterConfigFactory<TDbParams> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.Factories Assembly : DbFacade.dll Syntax public sealed class DbCommandParameterConfigFactory<TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. Methods | Improve this Doc View Source AnsiString(DelegateHandler<TDbParams, String>, Boolean) ANSIs the string. Declaration public IDbCommandParameterConfig<TDbParams> AnsiString(DelegateHandler<TDbParams, string> returnFunction, bool isNullable = true) Parameters Type Name Description DelegateHandler <TDbParams, System.String > returnFunction The return function. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source AnsiString(String, Boolean) ANSIs the string. Declaration public IDbCommandParameterConfig<TDbParams> AnsiString(string value, bool isNullable = true) Parameters Type Name Description System.String value The value. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source AnsiStringFixedLength(DelegateHandler<TDbParams, String>, Boolean) ANSIs the length of the string fixed. Declaration public IDbCommandParameterConfig<TDbParams> AnsiStringFixedLength(DelegateHandler<TDbParams, string> returnFunction, bool isNullable = true) Parameters Type Name Description DelegateHandler <TDbParams, System.String > returnFunction The return function. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source AnsiStringFixedLength(String, Boolean) ANSIs the length of the string fixed. Declaration public IDbCommandParameterConfig<TDbParams> AnsiStringFixedLength(string value, bool isNullable = true) Parameters Type Name Description System.String value The value. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source Create<T>(T) Creates the specified value. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(T value) Parameters Type Name Description T value The value. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Create<T>(T, Boolean) Creates the specified value. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(T value, bool isNullable) Parameters Type Name Description T value The value. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Create<T>(T, DbType, Boolean) Creates the specified value. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(T value, DbType dbType, bool isNullable) Parameters Type Name Description T value The value. System.Data.DbType dbType Type of the database. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Create<T>(DelegateHandler<TDbParams, T>) Creates the specified return function. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(DelegateHandler<TDbParams, T> returnFunction) Parameters Type Name Description DelegateHandler <TDbParams, T> returnFunction The return function. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Create<T>(DelegateHandler<TDbParams, T>, Boolean) Creates the specified return function. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(DelegateHandler<TDbParams, T> returnFunction, bool isNullable) Parameters Type Name Description DelegateHandler <TDbParams, T> returnFunction The return function. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Create<T>(DelegateHandler<TDbParams, T>, DbType, Boolean) Creates the specified return function. Declaration public IDbCommandParameterConfig<TDbParams> Create<T>(DelegateHandler<TDbParams, T> returnFunction, DbType dbType, bool isNullable) Parameters Type Name Description DelegateHandler <TDbParams, T> returnFunction The return function. System.Data.DbType dbType Type of the database. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IDbCommandParameterConfig <TDbParams> Type Parameters Name Description T | Improve this Doc View Source CreateReturnValue() Creates the return value. Declaration public IDbCommandParameterConfig<TDbParams> CreateReturnValue() Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source DateTime2(DelegateHandler<TDbParams, DateTime>) Dates the time2. Declaration public IDbCommandParameterConfig<TDbParams> DateTime2(DelegateHandler<TDbParams, DateTime> returnFunction) Parameters Type Name Description DelegateHandler <TDbParams, System.DateTime > returnFunction The return function. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source DateTime2(DelegateHandler<TDbParams, Nullable<DateTime>>) Dates the time2. Declaration public IDbCommandParameterConfig<TDbParams> DateTime2(DelegateHandler<TDbParams, DateTime?> returnFunction) Parameters Type Name Description DelegateHandler <TDbParams, System.Nullable < System.DateTime >> returnFunction The return function. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source DateTime2(DateTime) Dates the time2. Declaration public IDbCommandParameterConfig<TDbParams> DateTime2(DateTime value) Parameters Type Name Description System.DateTime value The value. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputAnsiString(Nullable<Int32>) Outputs the ANSI string. Declaration public IDbCommandParameterConfig<TDbParams> OutputAnsiString(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputAnsiStringFixedLength(Nullable<Int32>) Outputs the length of the ANSI string fixed. Declaration public IDbCommandParameterConfig<TDbParams> OutputAnsiStringFixedLength(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputBinary(Nullable<Int32>) Outputs the binary. Declaration public IDbCommandParameterConfig<TDbParams> OutputBinary(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputBoolean(Nullable<Int32>) Outputs the boolean. Declaration public IDbCommandParameterConfig<TDbParams> OutputBoolean(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputByte(Nullable<Int32>) Outputs the byte. Declaration public IDbCommandParameterConfig<TDbParams> OutputByte(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputChar(Nullable<Int32>) Outputs the character. Declaration public IDbCommandParameterConfig<TDbParams> OutputChar(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputCharArray(Nullable<Int32>) Outputs the character array. Declaration public IDbCommandParameterConfig<TDbParams> OutputCharArray(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputDateTime(Nullable<Int32>) Outputs the date time. Declaration public IDbCommandParameterConfig<TDbParams> OutputDateTime(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputDateTime2(Nullable<Int32>) Outputs the date time2. Declaration public IDbCommandParameterConfig<TDbParams> OutputDateTime2(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputDateTimeOffset(Nullable<Int32>) Outputs the date time offset. Declaration public IDbCommandParameterConfig<TDbParams> OutputDateTimeOffset(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputDecimal(Nullable<Int32>) Outputs the decimal. Declaration public IDbCommandParameterConfig<TDbParams> OutputDecimal(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputDouble(Nullable<Int32>) Outputs the double. Declaration public IDbCommandParameterConfig<TDbParams> OutputDouble(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputGuid(Nullable<Int32>) Outputs the unique identifier. Declaration public IDbCommandParameterConfig<TDbParams> OutputGuid(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputInt16(Nullable<Int32>) Outputs the int16. Declaration public IDbCommandParameterConfig<TDbParams> OutputInt16(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputInt32(Nullable<Int32>) Outputs the int32. Declaration public IDbCommandParameterConfig<TDbParams> OutputInt32(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputInt64(Nullable<Int32>) Outputs the int64. Declaration public IDbCommandParameterConfig<TDbParams> OutputInt64(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputSByte(Nullable<Int32>) Outputs the s byte. Declaration public IDbCommandParameterConfig<TDbParams> OutputSByte(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputSingle(Nullable<Int32>) Outputs the single. Declaration public IDbCommandParameterConfig<TDbParams> OutputSingle(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputString(Nullable<Int32>) Outputs the string. Declaration public IDbCommandParameterConfig<TDbParams> OutputString(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputTimeSpan(Nullable<Int32>) Outputs the time span. Declaration public IDbCommandParameterConfig<TDbParams> OutputTimeSpan(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputUInt16(Nullable<Int32>) Outputs the u int16. Declaration public IDbCommandParameterConfig<TDbParams> OutputUInt16(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputUInt32(Nullable<Int32>) Outputs the u int32. Declaration public IDbCommandParameterConfig<TDbParams> OutputUInt32(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputUInt64(Nullable<Int32>) Outputs the u int64. Declaration public IDbCommandParameterConfig<TDbParams> OutputUInt64(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> | Improve this Doc View Source OutputXml(Nullable<Int32>) Outputs the XML. Declaration public IDbCommandParameterConfig<TDbParams> OutputXml(int? size = null) Parameters Type Name Description System.Nullable < System.Int32 > size The size. Returns Type Description IDbCommandParameterConfig <TDbParams> Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Factories.DelegateHandler-2.html": {
    "href": "api/DbFacade.Factories.DelegateHandler-2.html",
    "title": "Delegate DelegateHandler<TDbParams, T> | DbFacade",
    "keywords": "Delegate DelegateHandler<TDbParams, T> Namespace : DbFacade.Factories Assembly : DbFacade.dll Syntax public delegate T DelegateHandler<TDbParams, T>(TDbParams value); Parameters Type Name Description TDbParams value The value. Returns Type Description T Type Parameters Name Description TDbParams The type of the database parameters. T Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Factories.html": {
    "href": "api/DbFacade.Factories.html",
    "title": "Namespace DbFacade.Factories | DbFacade",
    "keywords": "Namespace DbFacade.Factories Classes DbCommandParameterConfigFactory<TDbParams> ValidationRuleFactory<TDbParams> ValidatorFactory Interfaces IDbCommandConfigSchemaFactory IDbCommandConfigSchemaFactoryFull Delegates DelegateHandler<TDbParams, T>"
  },
  "api/DbFacade.Factories.IDbCommandConfigSchemaFactory.html": {
    "href": "api/DbFacade.Factories.IDbCommandConfigSchemaFactory.html",
    "title": "Interface IDbCommandConfigSchemaFactory | DbFacade",
    "keywords": "Interface IDbCommandConfigSchemaFactory Namespace : DbFacade.Factories Assembly : DbFacade.dll Syntax public interface IDbCommandConfigSchemaFactory Methods | Improve this Doc View Source CreateFetchCommand(String, String, Boolean) Creates the fetch command. Declaration IDbCommandConfig CreateFetchCommand(string storedProcedureName, string label, bool requiresValidation = false) Parameters Type Name Description System.String storedProcedureName Name of the stored procedure. System.String label The label. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description IDbCommandConfig Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Factories.IDbCommandConfigSchemaFactoryFull.html": {
    "href": "api/DbFacade.Factories.IDbCommandConfigSchemaFactoryFull.html",
    "title": "Interface IDbCommandConfigSchemaFactoryFull | DbFacade",
    "keywords": "Interface IDbCommandConfigSchemaFactoryFull Inherited Members IDbCommandConfigSchemaFactory.CreateFetchCommand(String, String, Boolean) Namespace : DbFacade.Factories Assembly : DbFacade.dll Syntax public interface IDbCommandConfigSchemaFactoryFull : IDbCommandConfigSchemaFactory Methods | Improve this Doc View Source CreateTransactionCommand(String, String, Boolean) Creates the transaction command. Declaration IDbCommandConfig CreateTransactionCommand(string storedProcedureName, string label, bool requiresValidation = true) Parameters Type Name Description System.String storedProcedureName Name of the stored procedure. System.String label The label. System.Boolean requiresValidation if set to true [requires validation]. Returns Type Description IDbCommandConfig Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Factories.ValidationRuleFactory-1.html": {
    "href": "api/DbFacade.Factories.ValidationRuleFactory-1.html",
    "title": "Class ValidationRuleFactory<TDbParams> | DbFacade",
    "keywords": "Class ValidationRuleFactory<TDbParams> Inheritance System.Object ValidationRuleFactory<TDbParams> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.Factories Assembly : DbFacade.dll Syntax public sealed class ValidationRuleFactory<TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. Methods | Improve this Doc View Source CreateFactoryAsync() Creates the factory asynchronous. Declaration public static async Task<ValidationRuleFactory<TDbParams>> CreateFactoryAsync() Returns Type Description System.Threading.Tasks.Task < ValidationRuleFactory <TDbParams>> | Improve this Doc View Source Delegate(Func<TDbParams, Boolean>, String) Delegates the specified handler. Declaration public IValidationRule<TDbParams> Delegate(Func<TDbParams, bool> handler, string errorMessage) Parameters Type Name Description System.Func <TDbParams, System.Boolean > handler The handler. System.String errorMessage The error message. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source Delegate<T>(Func<TDbParams, T>, Func<T, Boolean>) Delegates the specified selector. Declaration public IValidationRule<TDbParams> Delegate<T>(Func<TDbParams, T> selector, Func<T, bool> handler) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. System.Func <T, System.Boolean > handler The handler. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Email(Func<TDbParams, String>, Boolean) Emails the specified selector. Declaration public IValidationRule<TDbParams> Email(Func<TDbParams, string> selector, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source Email(Func<TDbParams, String>, IEnumerable<String>, EmailDomainMode, Boolean) Emails the specified selector. Declaration public IValidationRule<TDbParams> Email(Func<TDbParams, string> selector, IEnumerable<string> domains, EmailDomainMode mode, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Collections.Generic.IEnumerable < System.String > domains The domains. EmailDomainMode mode The mode. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source Equals<T>(Func<TDbParams, T>, T) Equalses the specified selector. Declaration public IValidationRule<TDbParams> Equals<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Equals<T>(Func<TDbParams, T>, Func<TDbParams, T>) Equalses the specified selector. Declaration public IValidationRule<TDbParams> Equals<T>(Func<TDbParams, T> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Equals<T>(Func<TDbParams, String>, T) Equalses the specified selector. Declaration public IValidationRule<TDbParams> Equals<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Equals<T>(Func<TDbParams, String>, Func<TDbParams, T>) Equalses the specified selector. Declaration public IValidationRule<TDbParams> Equals<T>(Func<TDbParams, string> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThan<T>(Func<TDbParams, T>, T) Greaters the than. Declaration public IValidationRule<TDbParams> GreaterThan<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThan<T>(Func<TDbParams, T>, Func<TDbParams, T>) Greaters the than. Declaration public IValidationRule<TDbParams> GreaterThan<T>(Func<TDbParams, T> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThan<T>(Func<TDbParams, String>, T) Greaters the than. Declaration public IValidationRule<TDbParams> GreaterThan<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThan<T>(Func<TDbParams, String>, Func<TDbParams, T>) Greaters the than. Declaration public IValidationRule<TDbParams> GreaterThan<T>(Func<TDbParams, string> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThanOrEqual<T>(Func<TDbParams, T>, T) Greaters the than or equal. Declaration public IValidationRule<TDbParams> GreaterThanOrEqual<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThanOrEqual<T>(Func<TDbParams, T>, Func<TDbParams, T>) Greaters the than or equal. Declaration public IValidationRule<TDbParams> GreaterThanOrEqual<T>(Func<TDbParams, T> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThanOrEqual<T>(Func<TDbParams, String>, T) Greaters the than or equal. Declaration public IValidationRule<TDbParams> GreaterThanOrEqual<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source GreaterThanOrEqual<T>(Func<TDbParams, String>, Func<TDbParams, T>) Greaters the than or equal. Declaration public IValidationRule<TDbParams> GreaterThanOrEqual<T>(Func<TDbParams, string> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo, DateTimeStyles) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, DateTimeStyles) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, DateTimeStyles, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsAfter(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, DateTimeStyles, Boolean) Determines whether the specified selector is after. Declaration public IValidationRule<TDbParams> IsAfter(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo, DateTimeStyles) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, DateTimeStyles) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, DateTimeStyles, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsBefore(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, DateTimeStyles, Boolean) Determines whether the specified selector is before. Declaration public IValidationRule<TDbParams> IsBefore(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsDateTime(Func<TDbParams, String>, String, Boolean) Determines whether [is date time] [the specified selector]. Declaration public IValidationRule<TDbParams> IsDateTime(Func<TDbParams, string> selector, string dateFormat = null, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsDateTime(Func<TDbParams, String>, String, CultureInfo, Boolean) Determines whether [is date time] [the specified selector]. Declaration public IValidationRule<TDbParams> IsDateTime(Func<TDbParams, string> selector, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsDateTime(Func<TDbParams, String>, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is date time] [the specified selector]. Declaration public IValidationRule<TDbParams> IsDateTime(Func<TDbParams, string> selector, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsDateTime(Func<TDbParams, String>, String, DateTimeStyles, Boolean) Determines whether [is date time] [the specified selector]. Declaration public IValidationRule<TDbParams> IsDateTime(Func<TDbParams, string> selector, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNDigitString(Func<TDbParams, String>, Int32, Boolean) Determines whether [is n digit string] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNDigitString(Func<TDbParams, string> selector, int length, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 length The length. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotNullOrEmpty(Func<TDbParams, String>) Determines whether [is not null or empty] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotNullOrEmpty(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotNullOrWhiteSpace(Func<TDbParams, String>) Determines whether [is not null or white space] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotNullOrWhiteSpace(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo, DateTimeStyles) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, DateTimeStyles) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNotOn(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, DateTimeStyles, Boolean) Determines whether [is not on] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNotOn(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNullOrEmpty(Func<TDbParams, String>) Determines whether [is null or empty] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNullOrEmpty(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNullOrWhiteSpace(Func<TDbParams, String>) Determines whether [is null or white space] [the specified selector]. Declaration public IValidationRule<TDbParams> IsNullOrWhiteSpace(Func<TDbParams, string> selector) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsNumber(Func<TDbParams, String>, Boolean) Determines whether the specified selector is number. Declaration public IValidationRule<TDbParams> IsNumber(Func<TDbParams, string> selector, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo, DateTimeStyles) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, DateTimeStyles) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, DateTimeStyles, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOn(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, DateTimeStyles, Boolean) Determines whether the specified selector is on. Declaration public IValidationRule<TDbParams> IsOn(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo, DateTimeStyles) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, DateTimeStyles) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, Boolean) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, Boolean) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrAfter(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is on or after] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrAfter(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, DateTime) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, CultureInfo, DateTimeStyles) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, DateTime, DateTimeStyles) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, DateTime compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.DateTime compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, CultureInfo, DateTimeStyles) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, Nullable<DateTime>>, Func<TDbParams, DateTime>, DateTimeStyles) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, DateTime?> selector, Func<TDbParams, DateTime> compareValue, DateTimeStyles dateTimeStyles = DateTimeStyles.None) Parameters Type Name Description System.Func <TDbParams, System.Nullable < System.DateTime >> selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, DateTime, String, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, DateTime, String, CultureInfo, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, DateTime, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, CultureInfo, DateTimeStyles, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, CultureInfo cultureInfo, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.CultureInfo cultureInfo The culture information. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsOnOrBefore(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, DateTimeStyles, Boolean) Determines whether [is on or before] [the specified selector]. Declaration public IValidationRule<TDbParams> IsOnOrBefore(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source IsSocialSecurityNumber(Func<TDbParams, String>, Boolean, Boolean) Determines whether [is social security number] [the specified selector]. Declaration public IValidationRule<TDbParams> IsSocialSecurityNumber(Func<TDbParams, string> selector, bool allowDashes = true, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Boolean allowDashes if set to true [allow dashes]. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source LengthEquals(Func<TDbParams, String>, Int32, Boolean) Lengthes the equals. Declaration public IValidationRule<TDbParams> LengthEquals(Func<TDbParams, string> selector, int limit, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 limit The limit. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source LessThan<T>(Func<TDbParams, T>, T) Lesses the than. Declaration public IValidationRule<TDbParams> LessThan<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source LessThan<T>(Func<TDbParams, T>, Func<TDbParams, T>) Lesses the than. Declaration public IValidationRule<TDbParams> LessThan<T>(Func<TDbParams, T> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source LessThan<T>(Func<TDbParams, String>, T) Lesses the than. Declaration public IValidationRule<TDbParams> LessThan<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source LessThan<T>(Func<TDbParams, String>, Func<TDbParams, T>) Lesses the than. Declaration public IValidationRule<TDbParams> LessThan<T>(Func<TDbParams, string> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source LessThanOrEqual<T>(Func<TDbParams, T>, T) Lesses the than or equal. Declaration public IValidationRule<TDbParams> LessThanOrEqual<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source LessThanOrEqual<T>(Func<TDbParams, T>, Func<TDbParams, T>) Lesses the than or equal. Declaration public IValidationRule<TDbParams> LessThanOrEqual<T>(Func<TDbParams, T> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source LessThanOrEqual<T>(Func<TDbParams, String>, T) Lesses the than or equal. Declaration public IValidationRule<TDbParams> LessThanOrEqual<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source LessThanOrEqual<T>(Func<TDbParams, String>, Func<TDbParams, T>) Lesses the than or equal. Declaration public IValidationRule<TDbParams> LessThanOrEqual<T>(Func<TDbParams, string> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source Match(Func<TDbParams, String>, String, Boolean) Matches the specified selector. Declaration public IValidationRule<TDbParams> Match(Func<TDbParams, string> selector, string regexMatchStr, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String regexMatchStr The regex match string. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source Match(Func<TDbParams, String>, String, RegexOptions, Boolean) Matches the specified selector. Declaration public IValidationRule<TDbParams> Match(Func<TDbParams, string> selector, string regexMatchStr, RegexOptions options, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.String regexMatchStr The regex match string. System.Text.RegularExpressions.RegexOptions options The options. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source MaxLength(Func<TDbParams, String>, Int32, Boolean) Maximums the length. Declaration public IValidationRule<TDbParams> MaxLength(Func<TDbParams, string> selector, int limit, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 limit The limit. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source MinLength(Func<TDbParams, String>, Int32, Boolean) Minimums the length. Declaration public IValidationRule<TDbParams> MinLength(Func<TDbParams, string> selector, int limit, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Int32 limit The limit. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source NotEqualTo<T>(Func<TDbParams, T>, T) Nots the equal to. Declaration public IValidationRule<TDbParams> NotEqualTo<T>(Func<TDbParams, T> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source NotEqualTo<T>(Func<TDbParams, T>, Func<TDbParams, T>) Nots the equal to. Declaration public IValidationRule<TDbParams> NotEqualTo<T>(Func<TDbParams, T> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, T> selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source NotEqualTo<T>(Func<TDbParams, String>, T) Nots the equal to. Declaration public IValidationRule<TDbParams> NotEqualTo<T>(Func<TDbParams, string> selector, T compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. T compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source NotEqualTo<T>(Func<TDbParams, String>, Func<TDbParams, T>) Nots the equal to. Declaration public IValidationRule<TDbParams> NotEqualTo<T>(Func<TDbParams, string> selector, Func<TDbParams, T> compareValue) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, T> compareValue The compare value. Returns Type Description IValidationRule <TDbParams> Type Parameters Name Description T | Improve this Doc View Source OnOrAfter(Func<TDbParams, String>, DateTime, String, DateTimeStyles, Boolean) Called when [or after]. Declaration public IValidationRule<TDbParams> OnOrAfter(Func<TDbParams, string> selector, DateTime compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.DateTime compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source OnOrAfter(Func<TDbParams, String>, Func<TDbParams, DateTime>, String, DateTimeStyles, Boolean) Called when [or after]. Declaration public IValidationRule<TDbParams> OnOrAfter(Func<TDbParams, string> selector, Func<TDbParams, DateTime> compareValue, string dateFormat, DateTimeStyles dateTimeStyles, bool isNullable = false) Parameters Type Name Description System.Func <TDbParams, System.String > selector The selector. System.Func <TDbParams, System.DateTime > compareValue The compare value. System.String dateFormat The date format. System.Globalization.DateTimeStyles dateTimeStyles The date time styles. System.Boolean isNullable if set to true [is nullable]. Returns Type Description IValidationRule <TDbParams> | Improve this Doc View Source Required(Func<TDbParams, Object>) Requireds the specified selector. Declaration public IValidationRule<TDbParams> Required(Func<TDbParams, object> selector) Parameters Type Name Description System.Func <TDbParams, System.Object > selector The selector. Returns Type Description IValidationRule <TDbParams> Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Factories.ValidatorFactory.html": {
    "href": "api/DbFacade.Factories.ValidatorFactory.html",
    "title": "Class ValidatorFactory | DbFacade",
    "keywords": "Class ValidatorFactory Inheritance System.Object ValidatorFactory Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacade.Factories Assembly : DbFacade.dll Syntax public sealed class ValidatorFactory Methods | Improve this Doc View Source Create<TDbParams>(Action<IValidator<TDbParams>>) Creates the specified validator initializer. Declaration public static IValidator<TDbParams> Create<TDbParams>(Action<IValidator<TDbParams>> validatorInitializer = null) Parameters Type Name Description System.Action < IValidator <TDbParams>> validatorInitializer The validator initializer. Returns Type Description IValidator <TDbParams> Type Parameters Name Description TDbParams The type of the database parameters. | Improve this Doc View Source CreateAsync<TDbParams>(Func<IValidator<TDbParams>, Task>) Creates the asynchronous. Declaration public static async Task<IValidator<TDbParams>> CreateAsync<TDbParams>(Func<IValidator<TDbParams>, Task> validatorInitializer = null) Parameters Type Name Description System.Func < IValidator <TDbParams>, System.Threading.Tasks.Task > validatorInitializer The validator initializer. Returns Type Description System.Threading.Tasks.Task < IValidator <TDbParams>> Type Parameters Name Description TDbParams The type of the database parameters. Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.html": {
    "href": "api/DbFacade.html",
    "title": "Namespace DbFacade | DbFacade",
    "keywords": "Namespace DbFacade Delegates OnCreateDbConnection OnErrorHandler OnErrorHandlerAsync OnExecuteDbAction<TDbDataModel, TDbParams> OnExecuteDbActionAsync<TDbDataModel, TDbParams> OnFacadeErrorHandler OnFacadeErrorHandlerAsync OnGetConnectionString OnGetDbDataAdapter OnSQLExecutionErrorHandler OnSQLExecutionErrorHandlerAsync OnValidationErrorHandler OnValidationErrorHandlerAsync"
  },
  "api/DbFacade.Odbc.DataLayer.ConnectionService.html": {
    "href": "api/DbFacade.Odbc.DataLayer.ConnectionService.html",
    "title": "Namespace DbFacade.Odbc.DataLayer.ConnectionService | DbFacade",
    "keywords": "Namespace DbFacade.Odbc.DataLayer.ConnectionService Classes OdbcConnectionConfig<TDbConnectionConfig>"
  },
  "api/DbFacade.Odbc.DataLayer.ConnectionService.OdbcConnectionConfig-1.html": {
    "href": "api/DbFacade.Odbc.DataLayer.ConnectionService.OdbcConnectionConfig-1.html",
    "title": "Class OdbcConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class OdbcConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfig <TDbConnectionConfig> DbConnectionConfigFull <TDbConnectionConfig> OdbcConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig Inherited Members DbConnectionConfigFull<TDbConnectionConfig>.Dbo DbConnectionConfigFull<TDbConnectionConfig>.CreateFetchCommand(String, String, Boolean) DbConnectionConfigFull<TDbConnectionConfig>.CreateFetchCommand(String, String, CommandType, Boolean) DbConnectionConfigFull<TDbConnectionConfig>.CreateSchemaFactory(String) DbConnectionConfig<TDbConnectionConfig>.GetConnectionOptions() DbConnectionConfig<TDbConnectionConfig>.EnableMockMode() DbConnectionConfig<TDbConnectionConfig>.DisableMockMode() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : DbFacade.Odbc.DataLayer.ConnectionService Assembly : DbFacade.Odbc.dll Syntax public abstract class OdbcConnectionConfig<TDbConnectionConfig> : DbConnectionConfigFull<TDbConnectionConfig>, IDbConnectionConfig where TDbConnectionConfig : IDbConnectionConfig Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. Methods | Improve this Doc View Source Configure(OnGetConnectionString, Action<IErrorHandlerOptions>) Declaration public static void Configure(OnGetConnectionString getConnectionString, Action<IErrorHandlerOptions> handler) Parameters Type Name Description OnGetConnectionString getConnectionString System.Action < IErrorHandlerOptions > handler Implements IDbConnectionConfig Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OleDb.DataLayer.ConnectionService.html": {
    "href": "api/DbFacade.OleDb.DataLayer.ConnectionService.html",
    "title": "Namespace DbFacade.OleDb.DataLayer.ConnectionService | DbFacade",
    "keywords": "Namespace DbFacade.OleDb.DataLayer.ConnectionService Classes OleDbConnectionConfig<TDbConnectionConfig>"
  },
  "api/DbFacade.OleDb.DataLayer.ConnectionService.OleDbConnectionConfig-1.html": {
    "href": "api/DbFacade.OleDb.DataLayer.ConnectionService.OleDbConnectionConfig-1.html",
    "title": "Class OleDbConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class OleDbConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfig <TDbConnectionConfig> DbConnectionConfigFull <TDbConnectionConfig> OleDbConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig Inherited Members DbConnectionConfigFull<TDbConnectionConfig>.Dbo DbConnectionConfigFull<TDbConnectionConfig>.CreateFetchCommand(String, String, Boolean) DbConnectionConfigFull<TDbConnectionConfig>.CreateFetchCommand(String, String, CommandType, Boolean) DbConnectionConfigFull<TDbConnectionConfig>.CreateSchemaFactory(String) DbConnectionConfig<TDbConnectionConfig>.GetConnectionOptions() DbConnectionConfig<TDbConnectionConfig>.EnableMockMode() DbConnectionConfig<TDbConnectionConfig>.DisableMockMode() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : DbFacade.OleDb.DataLayer.ConnectionService Assembly : DbFacade.OleDb.dll Syntax public abstract class OleDbConnectionConfig<TDbConnectionConfig> : DbConnectionConfigFull<TDbConnectionConfig>, IDbConnectionConfig where TDbConnectionConfig : IDbConnectionConfig Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. Methods | Improve this Doc View Source Configure(OnGetConnectionString, Action<IErrorHandlerOptions>) Declaration public static void Configure(OnGetConnectionString getConnectionString, Action<IErrorHandlerOptions> handler) Parameters Type Name Description OnGetConnectionString getConnectionString System.Action < IErrorHandlerOptions > handler Implements IDbConnectionConfig Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnCreateDbConnection.html": {
    "href": "api/DbFacade.OnCreateDbConnection.html",
    "title": "Delegate OnCreateDbConnection | DbFacade",
    "keywords": "Delegate OnCreateDbConnection Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate IDbConnection OnCreateDbConnection(string connectionString); Parameters Type Name Description System.String connectionString Returns Type Description System.Data.IDbConnection Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnErrorHandler.html": {
    "href": "api/DbFacade.OnErrorHandler.html",
    "title": "Delegate OnErrorHandler | DbFacade",
    "keywords": "Delegate OnErrorHandler Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate void OnErrorHandler(Exception ex, IDbCommandSettings commandSettings); Parameters Type Name Description System.Exception ex IDbCommandSettings commandSettings Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnErrorHandlerAsync.html": {
    "href": "api/DbFacade.OnErrorHandlerAsync.html",
    "title": "Delegate OnErrorHandlerAsync | DbFacade",
    "keywords": "Delegate OnErrorHandlerAsync Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate Task OnErrorHandlerAsync(Exception ex, IDbCommandSettings commandSettings); Parameters Type Name Description System.Exception ex IDbCommandSettings commandSettings Returns Type Description System.Threading.Tasks.Task Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnExecuteDbAction-2.html": {
    "href": "api/DbFacade.OnExecuteDbAction-2.html",
    "title": "Delegate OnExecuteDbAction<TDbDataModel, TDbParams> | DbFacade",
    "keywords": "Delegate OnExecuteDbAction<TDbDataModel, TDbParams> Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate object OnExecuteDbAction<TDbDataModel, TDbParams>(IDbCommandMethod<TDbParams, TDbDataModel> commandConfig, TDbParams parameters, bool rawDataOnly = false) where TDbDataModel : DbDataModel; Parameters Type Name Description IDbCommandMethod <TDbParams, TDbDataModel> commandConfig TDbParams parameters System.Boolean rawDataOnly Returns Type Description System.Object Type Parameters Name Description TDbDataModel TDbParams Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnExecuteDbActionAsync-2.html": {
    "href": "api/DbFacade.OnExecuteDbActionAsync-2.html",
    "title": "Delegate OnExecuteDbActionAsync<TDbDataModel, TDbParams> | DbFacade",
    "keywords": "Delegate OnExecuteDbActionAsync<TDbDataModel, TDbParams> Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate Task<object> OnExecuteDbActionAsync<TDbDataModel, TDbParams>(IDbCommandMethod<TDbParams, TDbDataModel> commandConfig, TDbParams parameters, bool rawDataOnly = false) where TDbDataModel : DbDataModel; Parameters Type Name Description IDbCommandMethod <TDbParams, TDbDataModel> commandConfig TDbParams parameters System.Boolean rawDataOnly Returns Type Description System.Threading.Tasks.Task < System.Object > Type Parameters Name Description TDbDataModel TDbParams Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnFacadeErrorHandler.html": {
    "href": "api/DbFacade.OnFacadeErrorHandler.html",
    "title": "Delegate OnFacadeErrorHandler | DbFacade",
    "keywords": "Delegate OnFacadeErrorHandler Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate void OnFacadeErrorHandler(FacadeException ex, IDbCommandSettings commandSettings); Parameters Type Name Description FacadeException ex IDbCommandSettings commandSettings Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnFacadeErrorHandlerAsync.html": {
    "href": "api/DbFacade.OnFacadeErrorHandlerAsync.html",
    "title": "Delegate OnFacadeErrorHandlerAsync | DbFacade",
    "keywords": "Delegate OnFacadeErrorHandlerAsync Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate Task OnFacadeErrorHandlerAsync(FacadeException ex, IDbCommandSettings commandSettings); Parameters Type Name Description FacadeException ex IDbCommandSettings commandSettings Returns Type Description System.Threading.Tasks.Task Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnGetConnectionString.html": {
    "href": "api/DbFacade.OnGetConnectionString.html",
    "title": "Delegate OnGetConnectionString | DbFacade",
    "keywords": "Delegate OnGetConnectionString Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate string OnGetConnectionString(); Returns Type Description System.String Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnGetDbDataAdapter.html": {
    "href": "api/DbFacade.OnGetDbDataAdapter.html",
    "title": "Delegate OnGetDbDataAdapter | DbFacade",
    "keywords": "Delegate OnGetDbDataAdapter Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate IDbDataAdapter OnGetDbDataAdapter(); Returns Type Description System.Data.IDbDataAdapter Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnSQLExecutionErrorHandler.html": {
    "href": "api/DbFacade.OnSQLExecutionErrorHandler.html",
    "title": "Delegate OnSQLExecutionErrorHandler | DbFacade",
    "keywords": "Delegate OnSQLExecutionErrorHandler Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate void OnSQLExecutionErrorHandler(SQLExecutionException ex, IDbCommandSettings commandSettings); Parameters Type Name Description SQLExecutionException ex IDbCommandSettings commandSettings Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnSQLExecutionErrorHandlerAsync.html": {
    "href": "api/DbFacade.OnSQLExecutionErrorHandlerAsync.html",
    "title": "Delegate OnSQLExecutionErrorHandlerAsync | DbFacade",
    "keywords": "Delegate OnSQLExecutionErrorHandlerAsync Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate Task OnSQLExecutionErrorHandlerAsync(SQLExecutionException ex, IDbCommandSettings commandSettings); Parameters Type Name Description SQLExecutionException ex IDbCommandSettings commandSettings Returns Type Description System.Threading.Tasks.Task Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnValidationErrorHandler.html": {
    "href": "api/DbFacade.OnValidationErrorHandler.html",
    "title": "Delegate OnValidationErrorHandler | DbFacade",
    "keywords": "Delegate OnValidationErrorHandler Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate void OnValidationErrorHandler(ValidationException ex, IDbCommandSettings commandSettings); Parameters Type Name Description ValidationException ex IDbCommandSettings commandSettings Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.OnValidationErrorHandlerAsync.html": {
    "href": "api/DbFacade.OnValidationErrorHandlerAsync.html",
    "title": "Delegate OnValidationErrorHandlerAsync | DbFacade",
    "keywords": "Delegate OnValidationErrorHandlerAsync Namespace : DbFacade Assembly : DbFacade.dll Syntax public delegate Task OnValidationErrorHandlerAsync(ValidationException ex, IDbCommandSettings commandSettings); Parameters Type Name Description ValidationException ex IDbCommandSettings commandSettings Returns Type Description System.Threading.Tasks.Task Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Oracle.DataLayer.ConnectionService.html": {
    "href": "api/DbFacade.Oracle.DataLayer.ConnectionService.html",
    "title": "Namespace DbFacade.Oracle.DataLayer.ConnectionService | DbFacade",
    "keywords": "Namespace DbFacade.Oracle.DataLayer.ConnectionService Classes OracleConnectionConfig<TDbConnectionConfig>"
  },
  "api/DbFacade.Oracle.DataLayer.ConnectionService.OracleConnectionConfig-1.html": {
    "href": "api/DbFacade.Oracle.DataLayer.ConnectionService.OracleConnectionConfig-1.html",
    "title": "Class OracleConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class OracleConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfig <TDbConnectionConfig> DbConnectionConfigFull <TDbConnectionConfig> OracleConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig Inherited Members DbConnectionConfigFull<TDbConnectionConfig>.Dbo DbConnectionConfigFull<TDbConnectionConfig>.CreateFetchCommand(String, String, Boolean) DbConnectionConfigFull<TDbConnectionConfig>.CreateFetchCommand(String, String, CommandType, Boolean) DbConnectionConfigFull<TDbConnectionConfig>.CreateSchemaFactory(String) DbConnectionConfig<TDbConnectionConfig>.GetConnectionOptions() DbConnectionConfig<TDbConnectionConfig>.EnableMockMode() DbConnectionConfig<TDbConnectionConfig>.DisableMockMode() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : DbFacade.Oracle.DataLayer.ConnectionService Assembly : DbFacade.Oracle.dll Syntax public abstract class OracleConnectionConfig<TDbConnectionConfig> : DbConnectionConfigFull<TDbConnectionConfig>, IDbConnectionConfig where TDbConnectionConfig : IDbConnectionConfig Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. Methods | Improve this Doc View Source Configure(OnGetConnectionString, OracleCredential, Action<IErrorHandlerOptions>) Declaration public static void Configure(OnGetConnectionString getConnectionString, OracleCredential credential, Action<IErrorHandlerOptions> handler) Parameters Type Name Description OnGetConnectionString getConnectionString Oracle.ManagedDataAccess.Client.OracleCredential credential System.Action < IErrorHandlerOptions > handler | Improve this Doc View Source Configure(OnGetConnectionString, Action<IErrorHandlerOptions>) Declaration public static void Configure(OnGetConnectionString getConnectionString, Action<IErrorHandlerOptions> handler) Parameters Type Name Description OnGetConnectionString getConnectionString System.Action < IErrorHandlerOptions > handler Implements IDbConnectionConfig Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.SQLite.DataLayer.ConnectionService.html": {
    "href": "api/DbFacade.SQLite.DataLayer.ConnectionService.html",
    "title": "Namespace DbFacade.SQLite.DataLayer.ConnectionService | DbFacade",
    "keywords": "Namespace DbFacade.SQLite.DataLayer.ConnectionService Classes SqLiteConnectionConfig<TDbConnectionConfig>"
  },
  "api/DbFacade.SQLite.DataLayer.ConnectionService.SqLiteConnectionConfig-1.html": {
    "href": "api/DbFacade.SQLite.DataLayer.ConnectionService.SqLiteConnectionConfig-1.html",
    "title": "Class SqLiteConnectionConfig<TDbConnectionConfig> | DbFacade",
    "keywords": "Class SqLiteConnectionConfig<TDbConnectionConfig> Inheritance System.Object DbConnectionConfig <TDbConnectionConfig> DbConnectionConfigFull <TDbConnectionConfig> SqLiteConnectionConfig<TDbConnectionConfig> Implements IDbConnectionConfig Inherited Members DbConnectionConfigFull<TDbConnectionConfig>.Dbo DbConnectionConfigFull<TDbConnectionConfig>.CreateFetchCommand(String, String, Boolean) DbConnectionConfigFull<TDbConnectionConfig>.CreateFetchCommand(String, String, CommandType, Boolean) DbConnectionConfigFull<TDbConnectionConfig>.CreateSchemaFactory(String) DbConnectionConfig<TDbConnectionConfig>.GetConnectionOptions() DbConnectionConfig<TDbConnectionConfig>.EnableMockMode() DbConnectionConfig<TDbConnectionConfig>.DisableMockMode() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : DbFacade.SQLite.DataLayer.ConnectionService Assembly : DbFacade.SQLite.dll Syntax public abstract class SqLiteConnectionConfig<TDbConnectionConfig> : DbConnectionConfigFull<TDbConnectionConfig>, IDbConnectionConfig where TDbConnectionConfig : IDbConnectionConfig Type Parameters Name Description TDbConnectionConfig The type of the database connection configuration. Methods | Improve this Doc View Source Configure(OnGetConnectionString, Action<IErrorHandlerOptions>) Declaration public static void Configure(OnGetConnectionString getConnectionString, Action<IErrorHandlerOptions> handler) Parameters Type Name Description OnGetConnectionString getConnectionString System.Action < IErrorHandlerOptions > handler Implements IDbConnectionConfig Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Utils.html": {
    "href": "api/DbFacade.Utils.html",
    "title": "Namespace DbFacade.Utils | DbFacade",
    "keywords": "Namespace DbFacade.Utils Classes Utils Interfaces IDataCollection IDataCollectionModel IDataTableParser Delegates InitInstance"
  },
  "api/DbFacade.Utils.IDataCollection.html": {
    "href": "api/DbFacade.Utils.IDataCollection.html",
    "title": "Interface IDataCollection | DbFacade",
    "keywords": "Interface IDataCollection Namespace : DbFacade.Utils Assembly : DbFacade.Utils.dll Syntax public interface IDataCollection Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Utils.IDataCollectionModel.html": {
    "href": "api/DbFacade.Utils.IDataCollectionModel.html",
    "title": "Interface IDataCollectionModel | DbFacade",
    "keywords": "Interface IDataCollectionModel Namespace : DbFacade.Utils Assembly : DbFacade.Utils.dll Syntax public interface IDataCollectionModel Methods | Improve this Doc View Source InitDataCollection(IDataCollection) Declaration void InitDataCollection(IDataCollection collection) Parameters Type Name Description IDataCollection collection Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Utils.IDataTableParser.html": {
    "href": "api/DbFacade.Utils.IDataTableParser.html",
    "title": "Interface IDataTableParser | DbFacade",
    "keywords": "Interface IDataTableParser Namespace : DbFacade.Utils Assembly : DbFacade.Utils.dll Syntax public interface IDataTableParser Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Utils.InitInstance.html": {
    "href": "api/DbFacade.Utils.InitInstance.html",
    "title": "Delegate InitInstance | DbFacade",
    "keywords": "Delegate InitInstance Namespace : DbFacade.Utils Assembly : DbFacade.Utils.dll Syntax public delegate object InitInstance(); Returns Type Description System.Object Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacade.Utils.Utils.html": {
    "href": "api/DbFacade.Utils.Utils.html",
    "title": "Class Utils | DbFacade",
    "keywords": "Class Utils Inheritance System.Object Utils Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : DbFacade.Utils Assembly : DbFacade.Utils.dll Syntax public static class Utils Methods | Improve this Doc View Source MakeInstance<T>() Declaration public static T MakeInstance<T>() Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source MakeInstance<T>(IDataCollection) Declaration public static T MakeInstance<T>(IDataCollection collection) where T : class, IDataCollectionModel Parameters Type Name Description IDataCollection collection Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source MakeInstance<T>(DataRow, IDataTableParser) Declaration public static T MakeInstance<T>(DataRow dr, IDataTableParser dtp) where T : class, IDataCollectionModel Parameters Type Name Description System.Data.DataRow dr IDataTableParser dtp Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source MakeInstance<T>(Object[]) Declaration public static T MakeInstance<T>(params object[] parameters) Parameters Type Name Description System.Object [] parameters Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source RegisterInstanceBuilder<T>(InitInstance) Declaration public static void RegisterInstanceBuilder<T>(InitInstance constructor) Parameters Type Name Description InitInstance constructor Type Parameters Name Description T | Improve this Doc View Source ToDataTableParser(DataTable) Declaration public static IDataTableParser ToDataTableParser(this DataTable dt) Parameters Type Name Description System.Data.DataTable dt Returns Type Description IDataTableParser | Improve this Doc View Source TryGetDataTable<To>(IEnumerable<To>, out DataTable) Declaration public static bool TryGetDataTable<To>(this IEnumerable<To> data, out DataTable dt) Parameters Type Name Description System.Collections.Generic.IEnumerable <To> data System.Data.DataTable dt Returns Type Description System.Boolean Type Parameters Name Description To | Improve this Doc View Source TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Declaration public static bool TryGetDateTimeValue(this object data, string searchKey, string format, IFormatProvider provider, out DateTime? value, DateTimeStyles style = DateTimeStyles.None) Parameters Type Name Description System.Object data System.String searchKey System.String format System.IFormatProvider provider System.Nullable < System.DateTime > value System.Globalization.DateTimeStyles style Returns Type Description System.Boolean | Improve this Doc View Source TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Declaration public static bool TryGetDateTimeValue(this object data, string searchKey, string format, out DateTime? value, DateTimeStyles style = DateTimeStyles.None) Parameters Type Name Description System.Object data System.String searchKey System.String format System.Nullable < System.DateTime > value System.Globalization.DateTimeStyles style Returns Type Description System.Boolean | Improve this Doc View Source TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Declaration public static bool TryGetEnumerable<To>(this object data, string searchKey, char separator, out IEnumerable<To> value) Parameters Type Name Description System.Object data System.String searchKey System.Char separator System.Collections.Generic.IEnumerable <To> value Returns Type Description System.Boolean Type Parameters Name Description To | Improve this Doc View Source TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Declaration public static bool TryGetEnumerable<To>(this object data, string searchKey, char separator, out IEnumerable<To> value, To defaultValue) Parameters Type Name Description System.Object data System.String searchKey System.Char separator System.Collections.Generic.IEnumerable <To> value To defaultValue Returns Type Description System.Boolean Type Parameters Name Description To | Improve this Doc View Source TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Declaration public static bool TryGetEnumerable<To>(this object data, string searchKey, out IEnumerable<To> value) Parameters Type Name Description System.Object data System.String searchKey System.Collections.Generic.IEnumerable <To> value Returns Type Description System.Boolean Type Parameters Name Description To | Improve this Doc View Source TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Declaration public static bool TryGetEnumerable<To>(this object data, string searchKey, out IEnumerable<To> value, To defaultValue) Parameters Type Name Description System.Object data System.String searchKey System.Collections.Generic.IEnumerable <To> value To defaultValue Returns Type Description System.Boolean Type Parameters Name Description To | Improve this Doc View Source TryGetFlagValue<T>(Object, String, T, out Boolean) Declaration public static bool TryGetFlagValue<T>(this object data, string searchKey, T trueValue, out bool value) where T : IComparable Parameters Type Name Description System.Object data System.String searchKey T trueValue System.Boolean value Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryGetFormattedDateTimeStringValue(Object, String, String, out String) Declaration public static bool TryGetFormattedDateTimeStringValue(this object data, string searchKey, string format, out string value) Parameters Type Name Description System.Object data System.String searchKey System.String format System.String value Returns Type Description System.Boolean | Improve this Doc View Source TryGetValue(Object, String, out Object, Object) Declaration public static bool TryGetValue(this object data, string searchKey, out object value, object defaultValue = null) Parameters Type Name Description System.Object data System.String searchKey System.Object value System.Object defaultValue Returns Type Description System.Boolean | Improve this Doc View Source TryGetValue<To>(Object, String, out To, To) Declaration public static bool TryGetValue<To>(this object data, string searchKey, out To value, To defaultValue = null) Parameters Type Name Description System.Object data System.String searchKey To value To defaultValue Returns Type Description System.Boolean Type Parameters Name Description To | Improve this Doc View Source TryMakeInstance<T>(out T) Declaration public static bool TryMakeInstance<T>(out T value) Parameters Type Name Description T value Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryMakeInstance<T>(out T, Object[]) Declaration public static bool TryMakeInstance<T>(out T value, params object[] parameters) Parameters Type Name Description T value System.Object [] parameters Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryParse<T>(Object, T, out T) Declaration public static bool TryParse<T>(this object input, T defaultValue, out T output) Parameters Type Name Description System.Object input T defaultValue T output Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryParse<T>(Object, out T) Declaration public static bool TryParse<T>(this object input, out T output) Parameters Type Name Description System.Object input T output Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryParseEnumerable<T>(String, T, Char, out IEnumerable<T>) Declaration public static bool TryParseEnumerable<T>(this string input, T defaultValue, char separator, out IEnumerable<T> output) Parameters Type Name Description System.String input T defaultValue System.Char separator System.Collections.Generic.IEnumerable <T> output Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryParseEnumerable<T>(String, T, out IEnumerable<T>) Declaration public static bool TryParseEnumerable<T>(this string input, T defaultValue, out IEnumerable<T> output) Parameters Type Name Description System.String input T defaultValue System.Collections.Generic.IEnumerable <T> output Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryParseEnumerable<T>(String, Char, out IEnumerable<T>) Declaration public static bool TryParseEnumerable<T>(this string input, char separator, out IEnumerable<T> output) Parameters Type Name Description System.String input System.Char separator System.Collections.Generic.IEnumerable <T> output Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryParseEnumerable<T>(String, out IEnumerable<T>) Declaration public static bool TryParseEnumerable<T>(this string input, out IEnumerable<T> output) Parameters Type Name Description System.String input System.Collections.Generic.IEnumerable <T> output Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryRegisterCollectionParser<T>(Func<T, String, Object>, Func<T, IEnumerable<String>>) Declaration public static bool TryRegisterCollectionParser<T>(Func<T, string, object> getValueResolver, Func<T, IEnumerable<string>> getKeysResolver) Parameters Type Name Description System.Func <T, System.String , System.Object > getValueResolver System.Func <T, System.Collections.Generic.IEnumerable < System.String >> getKeysResolver Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryRegisterCollectionParser<T, TValue>() Declaration public static bool TryRegisterCollectionParser<T, TValue>() where T : IDictionary<string, TValue> Returns Type Description System.Boolean Type Parameters Name Description T TValue | Improve this Doc View Source TryRegisterConverter<TFrom, T>(Func<TFrom, T>) Declaration public static bool TryRegisterConverter<TFrom, T>(this Func<TFrom, T> resolver) Parameters Type Name Description System.Func <TFrom, T> resolver Returns Type Description System.Boolean Type Parameters Name Description TFrom T"
  },
  "api/DbFacadeShared.DataLayer.Models.html": {
    "href": "api/DbFacadeShared.DataLayer.Models.html",
    "title": "Namespace DbFacadeShared.DataLayer.Models | DbFacade",
    "keywords": "Namespace DbFacadeShared.DataLayer.Models Interfaces IDbDataSet"
  },
  "api/DbFacadeShared.DataLayer.Models.IDbDataSet.html": {
    "href": "api/DbFacadeShared.DataLayer.Models.IDbDataSet.html",
    "title": "Interface IDbDataSet | DbFacade",
    "keywords": "Interface IDbDataSet Namespace : DbFacadeShared.DataLayer.Models Assembly : DbFacade.dll Syntax public interface IDbDataSet Methods | Improve this Doc View Source ToDbDataModelList<TDbDataModel>() Converts to dbdatamodellist. Declaration IEnumerable<TDbDataModel> ToDbDataModelList<TDbDataModel>() where TDbDataModel : DbDataModel Returns Type Description System.Collections.Generic.IEnumerable <TDbDataModel> Type Parameters Name Description TDbDataModel The type of the database data model. | Improve this Doc View Source ToDbDataModelListAsync<TDbDataModel>() Converts to dbdatamodellistasync. Declaration Task<IEnumerable<TDbDataModel>> ToDbDataModelListAsync<TDbDataModel>() where TDbDataModel : DbDataModel Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable <TDbDataModel>> Type Parameters Name Description TDbDataModel The type of the database data model. Extension Methods Utils.TryParse<T>(Object, out T) Utils.TryParse<T>(Object, T, out T) Utils.TryGetValue(Object, String, out Object, Object) Utils.TryGetValue<To>(Object, String, out To, To) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>) Utils.TryGetEnumerable<To>(Object, String, out IEnumerable<To>, To) Utils.TryGetEnumerable<To>(Object, String, Char, out IEnumerable<To>, To) Utils.TryGetFlagValue<T>(Object, String, T, out Boolean) Utils.TryGetDateTimeValue(Object, String, String, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetDateTimeValue(Object, String, String, IFormatProvider, out Nullable<DateTime>, DateTimeStyles) Utils.TryGetFormattedDateTimeStringValue(Object, String, String, out String)"
  },
  "api/DbFacadeShared.Extensions.DbResponseExtensions.html": {
    "href": "api/DbFacadeShared.Extensions.DbResponseExtensions.html",
    "title": "Class DbResponseExtensions | DbFacade",
    "keywords": "Class DbResponseExtensions Inheritance System.Object DbResponseExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DbFacadeShared.Extensions Assembly : DbFacade.dll Syntax public static class DbResponseExtensions Methods | Improve this Doc View Source TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8, T9>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>, out IEnumerable<T8>, out IEnumerable<T9>) Declaration public static bool TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8, T9>(this IDbResponse<TDbDataModel> response, out IEnumerable<T1> value, out IEnumerable<T2> value2, out IEnumerable<T3> value3, out IEnumerable<T4> value4, out IEnumerable<T5> value5, out IEnumerable<T6> value6, out IEnumerable<T7> value7, out IEnumerable<T8> value8, out IEnumerable<T9> value9) where TDbDataModel : DbDataModel where T1 : DbDataModel where T2 : DbDataModel where T3 : DbDataModel where T4 : DbDataModel where T5 : DbDataModel where T6 : DbDataModel where T7 : DbDataModel where T8 : DbDataModel where T9 : DbDataModel Parameters Type Name Description IDbResponse <TDbDataModel> response System.Collections.Generic.IEnumerable <T1> value System.Collections.Generic.IEnumerable <T2> value2 System.Collections.Generic.IEnumerable <T3> value3 System.Collections.Generic.IEnumerable <T4> value4 System.Collections.Generic.IEnumerable <T5> value5 System.Collections.Generic.IEnumerable <T6> value6 System.Collections.Generic.IEnumerable <T7> value7 System.Collections.Generic.IEnumerable <T8> value8 System.Collections.Generic.IEnumerable <T9> value9 Returns Type Description System.Boolean Type Parameters Name Description TDbDataModel T1 T2 T3 T4 T5 T6 T7 T8 T9 | Improve this Doc View Source TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>, out IEnumerable<T8>, out IEnumerable<T9>, out IEnumerable<T10>) Declaration public static bool TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this IDbResponse<TDbDataModel> response, out IEnumerable<T1> value, out IEnumerable<T2> value2, out IEnumerable<T3> value3, out IEnumerable<T4> value4, out IEnumerable<T5> value5, out IEnumerable<T6> value6, out IEnumerable<T7> value7, out IEnumerable<T8> value8, out IEnumerable<T9> value9, out IEnumerable<T10> value10) where TDbDataModel : DbDataModel where T1 : DbDataModel where T2 : DbDataModel where T3 : DbDataModel where T4 : DbDataModel where T5 : DbDataModel where T6 : DbDataModel where T7 : DbDataModel where T8 : DbDataModel where T9 : DbDataModel where T10 : DbDataModel Parameters Type Name Description IDbResponse <TDbDataModel> response System.Collections.Generic.IEnumerable <T1> value System.Collections.Generic.IEnumerable <T2> value2 System.Collections.Generic.IEnumerable <T3> value3 System.Collections.Generic.IEnumerable <T4> value4 System.Collections.Generic.IEnumerable <T5> value5 System.Collections.Generic.IEnumerable <T6> value6 System.Collections.Generic.IEnumerable <T7> value7 System.Collections.Generic.IEnumerable <T8> value8 System.Collections.Generic.IEnumerable <T9> value9 System.Collections.Generic.IEnumerable <T10> value10 Returns Type Description System.Boolean Type Parameters Name Description TDbDataModel T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 | Improve this Doc View Source TryGetDataSet<TDbDataModel, T1>(IDbResponse<TDbDataModel>, out IEnumerable<T1>) Declaration public static bool TryGetDataSet<TDbDataModel, T1>(this IDbResponse<TDbDataModel> response, out IEnumerable<T1> value) where TDbDataModel : DbDataModel where T1 : DbDataModel Parameters Type Name Description IDbResponse <TDbDataModel> response System.Collections.Generic.IEnumerable <T1> value Returns Type Description System.Boolean Type Parameters Name Description TDbDataModel T1 | Improve this Doc View Source TryGetDataSet<TDbDataModel, T1, T2>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>) Declaration public static bool TryGetDataSet<TDbDataModel, T1, T2>(this IDbResponse<TDbDataModel> response, out IEnumerable<T1> value, out IEnumerable<T2> value2) where TDbDataModel : DbDataModel where T1 : DbDataModel where T2 : DbDataModel Parameters Type Name Description IDbResponse <TDbDataModel> response System.Collections.Generic.IEnumerable <T1> value System.Collections.Generic.IEnumerable <T2> value2 Returns Type Description System.Boolean Type Parameters Name Description TDbDataModel T1 T2 | Improve this Doc View Source TryGetDataSet<TDbDataModel, T1, T2, T3>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>) Declaration public static bool TryGetDataSet<TDbDataModel, T1, T2, T3>(this IDbResponse<TDbDataModel> response, out IEnumerable<T1> value, out IEnumerable<T2> value2, out IEnumerable<T3> value3) where TDbDataModel : DbDataModel where T1 : DbDataModel where T2 : DbDataModel where T3 : DbDataModel Parameters Type Name Description IDbResponse <TDbDataModel> response System.Collections.Generic.IEnumerable <T1> value System.Collections.Generic.IEnumerable <T2> value2 System.Collections.Generic.IEnumerable <T3> value3 Returns Type Description System.Boolean Type Parameters Name Description TDbDataModel T1 T2 T3 | Improve this Doc View Source TryGetDataSet<TDbDataModel, T1, T2, T3, T4>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>) Declaration public static bool TryGetDataSet<TDbDataModel, T1, T2, T3, T4>(this IDbResponse<TDbDataModel> response, out IEnumerable<T1> value, out IEnumerable<T2> value2, out IEnumerable<T3> value3, out IEnumerable<T4> value4) where TDbDataModel : DbDataModel where T1 : DbDataModel where T2 : DbDataModel where T3 : DbDataModel where T4 : DbDataModel Parameters Type Name Description IDbResponse <TDbDataModel> response System.Collections.Generic.IEnumerable <T1> value System.Collections.Generic.IEnumerable <T2> value2 System.Collections.Generic.IEnumerable <T3> value3 System.Collections.Generic.IEnumerable <T4> value4 Returns Type Description System.Boolean Type Parameters Name Description TDbDataModel T1 T2 T3 T4 | Improve this Doc View Source TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>) Declaration public static bool TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5>(this IDbResponse<TDbDataModel> response, out IEnumerable<T1> value, out IEnumerable<T2> value2, out IEnumerable<T3> value3, out IEnumerable<T4> value4, out IEnumerable<T5> value5) where TDbDataModel : DbDataModel where T1 : DbDataModel where T2 : DbDataModel where T3 : DbDataModel where T4 : DbDataModel where T5 : DbDataModel Parameters Type Name Description IDbResponse <TDbDataModel> response System.Collections.Generic.IEnumerable <T1> value System.Collections.Generic.IEnumerable <T2> value2 System.Collections.Generic.IEnumerable <T3> value3 System.Collections.Generic.IEnumerable <T4> value4 System.Collections.Generic.IEnumerable <T5> value5 Returns Type Description System.Boolean Type Parameters Name Description TDbDataModel T1 T2 T3 T4 T5 | Improve this Doc View Source TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>) Declaration public static bool TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6>(this IDbResponse<TDbDataModel> response, out IEnumerable<T1> value, out IEnumerable<T2> value2, out IEnumerable<T3> value3, out IEnumerable<T4> value4, out IEnumerable<T5> value5, out IEnumerable<T6> value6) where TDbDataModel : DbDataModel where T1 : DbDataModel where T2 : DbDataModel where T3 : DbDataModel where T4 : DbDataModel where T5 : DbDataModel where T6 : DbDataModel Parameters Type Name Description IDbResponse <TDbDataModel> response System.Collections.Generic.IEnumerable <T1> value System.Collections.Generic.IEnumerable <T2> value2 System.Collections.Generic.IEnumerable <T3> value3 System.Collections.Generic.IEnumerable <T4> value4 System.Collections.Generic.IEnumerable <T5> value5 System.Collections.Generic.IEnumerable <T6> value6 Returns Type Description System.Boolean Type Parameters Name Description TDbDataModel T1 T2 T3 T4 T5 T6 | Improve this Doc View Source TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>) Declaration public static bool TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7>(this IDbResponse<TDbDataModel> response, out IEnumerable<T1> value, out IEnumerable<T2> value2, out IEnumerable<T3> value3, out IEnumerable<T4> value4, out IEnumerable<T5> value5, out IEnumerable<T6> value6, out IEnumerable<T7> value7) where TDbDataModel : DbDataModel where T1 : DbDataModel where T2 : DbDataModel where T3 : DbDataModel where T4 : DbDataModel where T5 : DbDataModel where T6 : DbDataModel where T7 : DbDataModel Parameters Type Name Description IDbResponse <TDbDataModel> response System.Collections.Generic.IEnumerable <T1> value System.Collections.Generic.IEnumerable <T2> value2 System.Collections.Generic.IEnumerable <T3> value3 System.Collections.Generic.IEnumerable <T4> value4 System.Collections.Generic.IEnumerable <T5> value5 System.Collections.Generic.IEnumerable <T6> value6 System.Collections.Generic.IEnumerable <T7> value7 Returns Type Description System.Boolean Type Parameters Name Description TDbDataModel T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8>(IDbResponse<TDbDataModel>, out IEnumerable<T1>, out IEnumerable<T2>, out IEnumerable<T3>, out IEnumerable<T4>, out IEnumerable<T5>, out IEnumerable<T6>, out IEnumerable<T7>, out IEnumerable<T8>) Declaration public static bool TryGetDataSet<TDbDataModel, T1, T2, T3, T4, T5, T6, T7, T8>(this IDbResponse<TDbDataModel> response, out IEnumerable<T1> value, out IEnumerable<T2> value2, out IEnumerable<T3> value3, out IEnumerable<T4> value4, out IEnumerable<T5> value5, out IEnumerable<T6> value6, out IEnumerable<T7> value7, out IEnumerable<T8> value8) where TDbDataModel : DbDataModel where T1 : DbDataModel where T2 : DbDataModel where T3 : DbDataModel where T4 : DbDataModel where T5 : DbDataModel where T6 : DbDataModel where T7 : DbDataModel where T8 : DbDataModel Parameters Type Name Description IDbResponse <TDbDataModel> response System.Collections.Generic.IEnumerable <T1> value System.Collections.Generic.IEnumerable <T2> value2 System.Collections.Generic.IEnumerable <T3> value3 System.Collections.Generic.IEnumerable <T4> value4 System.Collections.Generic.IEnumerable <T5> value5 System.Collections.Generic.IEnumerable <T6> value6 System.Collections.Generic.IEnumerable <T7> value7 System.Collections.Generic.IEnumerable <T8> value8 Returns Type Description System.Boolean Type Parameters Name Description TDbDataModel T1 T2 T3 T4 T5 T6 T7 T8"
  },
  "api/DbFacadeShared.Extensions.html": {
    "href": "api/DbFacadeShared.Extensions.html",
    "title": "Namespace DbFacadeShared.Extensions | DbFacade",
    "keywords": "Namespace DbFacadeShared.Extensions Classes DbResponseExtensions"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Main Library Documentation | DbFacade",
    "keywords": "Main Library Documentation"
  },
  "articles/GettingStarted.html": {
    "href": "articles/GettingStarted.html",
    "title": "| DbFacade",
    "keywords": ""
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | DbFacade",
    "keywords": "Add your introductions here!"
  },
  "GettingStarted/DeclareMethods.html": {
    "href": "GettingStarted/DeclareMethods.html",
    "title": "Declare Methods | DbFacade",
    "keywords": "Declare Methods Directory Structure Modify the current directory structure as follows in your project directory. |- MyProjectDirectory | |- DomainLayer | | |- Connections | | | |- MyProjectSQLConnection.cs | | |- Models | | | |- Data | | | | |- SampleDataModel.cs | | | |- Parameter | | | | |- GetSampleDataParameters.cs | | |- Methods | | | |- MyProjectSQLMethods.cs Add Methods class Create a MyProjectSQLMethods.cs class file in MyProjectDirectory/DomainLayer/Methods as follows: internal class MyProjectSQLMethods { public static readonly IDbCommandMethod<GetSampleDataParameters,SampleDataModel> GetSampleData = AdventureWorksConnection.GetSampleData.CreateMethod<GetSampleDataParameters,SampleDataModel>( p => { p.Add(\"Guid\", p.Factory.Create(m => m.Guid)); p.Add(\"String\", p.Factory.Create(m => m.String)); }); } When mapping parameters to the method like p.Add(\"Guid\", p.Factory.Create(m => m.Guid)); notice that you do not need to add the leading @ expected by SQL stored procedures. This is automaticlly resolved before the method is executed."
  },
  "GettingStarted/DefineModels.html": {
    "href": "GettingStarted/DefineModels.html",
    "title": "Define Models | DbFacade",
    "keywords": "Define Models Directory Structure Modify the current directory structure as follows in your project directory. |- MyProjectDirectory | |- DomainLayer | | |- Connections | | | |- MyProjectSQLConnection.cs | | |- Models | | | |- Data | | | | |- SampleDataModel.cs | | | |- Parameter | | | | |- GetSampleDataParameters.cs Add Parameter Model Create a GetSampleDataParameters.cs class file in MyProjectDirectory/DomainLayer/Models/Parameters as follows: public class GetSampleDataParameters { public Guid Guid { get; set; } public string String { get; set; } } Add Data Model Create a SampleDataModel.cs class file in MyProjectDirectory/DomainLayer/Models/Data as follows: public class SampleDataModel: DbDataModel { public Guid Guid { get; set; } public string String { get; set; } public bool Bool { get; set; } public int Integer { get; set; } protected override void Init() { Guid = GetColumn<Guid>(\"Guid\"); String = GetColumn<string>(\"String\"); Bool = GetColumn<bool>(\"Bool\"); Integer = GetColumn<int>(\"Integer\"); } // if you plan to use asynchronous programing you must add the following to support asynchronous model binding. // Otherwise ignore this method override. protected override async Task InitAsync() { Guid = await GetColumnAsync<Guid>(\"Guid\"); String = await GetColumnAsync<string>(\"String\"); Bool = await GetColumnAsync<bool>(\"Bool\"); Integer = await GetColumnAsync<int>(\"Integer\"); } }"
  },
  "GettingStarted/DomainFacade.html": {
    "href": "GettingStarted/DomainFacade.html",
    "title": "Domain Facade | DbFacade",
    "keywords": "Domain Facade Putting it all together Directory Structure Modify the current directory structure as follows in your project directory. |- MyProjectDirectory | |- DomainLayer | | |- Connections | | | |- MyProjectSQLConnection.cs | | |- Models | | | |- Data | | | | |- SampleDataModel.cs | | | |- Parameter | | | | |- GetSampleDataParameters.cs | | |- Methods | | | |- MyProjectSQLMethods.cs | | |- IDomainFacade.cs | | |- DomainFacade.cs Add Domain Facade class Create a IDomainFacade.cs interface file in MyProjectDirectory/DomainLayer as follows: public interface IDomainFacade { public IDbResponse<SampleDataModel> GetSampleData(GetSampleDataParameters parameters); } Create a DomainFacade class file in MyProjectDirectory/DomainLayer as follows: internal class DomainFacade: IDomainFacade { public DomainFacade(){ string connectionString = \"MyConnectionString\"; // Get this value from a configuration source in real code; // MyProjectSQLConnection must be registered before any calls can be made MyProjectSQLConnection.RegisterConnection(string connectionString); } public IDbResponse<SampleDataModel> GetSampleData(GetSampleDataParameters parameters) => MyProjectSQLMethods.GetSampleData.Execute(parameters); } Using Domain Facade You may now use public class MyClass { private IDomainFacade DomainFacade {get; set;} public MyClass(){ DomainFacade = new DomainFacade(); } public void DoSomething(){ var results = DomainFacade.GetSampleData(new GetSampleDataParameters(){ Guid = Guid.NewGuid(), // use a real Guid here not a new one( this is example only) String = \"Some string value\" }); if(results.HasError){ Exception error = result.Error; // Uh Oh! Need to handle error result. }else{ // Everything is Good! } } } Recomendations Since your project code will likely call the DomainFacade object many times consider creating a global instance of it in your project. In Core projects this can be done with dependancy injection. Core Specific Notes When using the Core version of this library you may need to include some extra code in Startup.cs to configure the connection strings. Please consult the official .NET Core doumentation about adding Connection strings for the latest information. public void ConfigureServices(IServiceCollection services) { ... services.AddConnectionStrings(connectionStrings => { connectionStrings.MySQLConnectionString = connectionStrings.GetSqlConnection( Configuration.GetConnectionString(\"MySQLConnectionString\"), Configuration[\"MySQLConnectionString:ProviderName\"], builder => { builder.UserID = Configuration[\"MySQLConnectionString:UserID\"]; builder.Password = Configuration[\"MySQLConnectionString:Password\"]; }); }); ... }"
  },
  "GettingStarted/index.html": {
    "href": "GettingStarted/index.html",
    "title": "Installation | DbFacade",
    "keywords": "Installation Install-Package DbFacade The latest version can also be downloaded directly from NuGet.org at: https://www.nuget.org/packages/DbFacade/"
  },
  "GettingStarted/SetupConnection.html": {
    "href": "GettingStarted/SetupConnection.html",
    "title": "Setup Connection | DbFacade",
    "keywords": "Setup Connection Directory Structure Create a directory structure as follows in your project directory. |- MyProjectDirectory | |- DomainLayer | | |- Connections | | | |- MyProjectSQLConnection.cs Add Connection file Create a MyProjectSQLConnection.cs class file in MyProjectDirectory/DomainLayer/Connections as follows: As of Version 1.13.0 internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { private static string GetDbConnectionString() => \"SomeConnectionString\"; public static void Configure() { Configure(GetDbConnectionString, o => { }); } } Version 1.12.1 and earlier internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { private string ConnectionString { get; set; } private MyProjectSQLConnection(string connectionString) { ConnectionString = connectionString; } protected override string GetDbConnectionString() => ConnectionString; protected override async Task<string> GetDbConnectionStringAsync() { await Task.CompletedTask; return ConnectionString; } public static void RegisterConnection(string connectionString) => new MyProjectSQLConnection(connectionString).Register(); } Add Command Configurations Add a SQL stored procedure command definition to class MyProjectSQLConnection as a static property as follows public static IDbCommandConfig GetSampleData = CreateFetchCommand(\"[dbo].[SampleData_Get]\", \"Get Sample Data\"); Complete Class Code As of Version 1.13.0 internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { private static string GetDbConnectionString() => \"SomeConnectionString\"; public static void Configure() { Configure(GetDbConnectionString, o => { }); } public static IDbCommandConfig GetSampleData = CreateFetchCommand(\"[dbo].[SampleData_Get]\", \"Get Sample Data\"); } Version 1.12.1 and earlier internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { private string ConnectionString { get; set; } private MyProjectSQLConnection(string connectionString) { ConnectionString = connectionString; } protected override string GetDbConnectionString() => ConnectionString; protected override async Task<string> GetDbConnectionStringAsync() { await Task.CompletedTask; return ConnectionString; } public static void RegisterConnection(string connectionString) => new MyProjectSQLConnection(connectionString).Register(); public static IDbCommandConfig GetSampleData = CreateFetchCommand(\"[dbo].[SampleData_Get]\", \"Get Sample Data\"); } Speciallized Setup for Connection types that support for a credential object 'OracleConnectionConfig' and 'SqlConnectionConfig' types support an aditional optional credendial object As of Version 1.13.0 internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { private static string GetDbConnectionString() => \"SomeConnectionString\"; public static void Configure(SqlCredential credential) { Configure(GetDbConnectionString, credential, o => { }); } public static IDbCommandConfig GetSampleData = CreateFetchCommand(\"[dbo].[SampleData_Get]\", \"Get Sample Data\"); } internal class MyProjectOracleConnection : OracleConnectionConfig<MyProjectOracleConnection> { private static string GetDbConnectionString() => \"SomeConnectionString\"; public static void Configure(OracleCredential credential) { Configure(GetDbConnectionString, credential, o => { }); } public static IDbCommandConfig GetSampleData = CreateFetchCommand(\"[dbo].[SampleData_Get]\", \"Get Sample Data\"); } Version 1.12.1 and earlier internal class MyProjectSQLConnection : SqlConnectionConfig<MyProjectSQLConnection> { private string ConnectionString { get; set; } private SqlCredential Credential { get; set; } private MyProjectSQLConnection(string connectionString, SqlCredential credential) { ConnectionString = connectionString; Credential = credential; } protected override SqlCredential GetCredential() => credential; protected override string GetDbConnectionString() => ConnectionString; protected override async Task<string> GetDbConnectionStringAsync() { await Task.CompletedTask; return ConnectionString; } public static void RegisterConnection(string connectionString, SqlCredential credential) => new MyProjectSQLConnection(connectionString, credential).Register(); public static IDbCommandConfig GetSampleData = CreateFetchCommand(\"[dbo].[SampleData_Get]\", \"Get Sample Data\"); } internal class MyProjectOracleConnection : OracleConnectionConfig<MyProjectOracleConnection> { private string ConnectionString { get; set; } private OracleCredential Credential { get; set; } private MyProjectSQLConnection(string connectionString, OracleCredential credential) { ConnectionString = connectionString; Credential = credential; } protected override OracleCredential GetCredential() => Credential; protected override string GetDbConnectionString() => ConnectionString; protected override async Task<string> GetDbConnectionStringAsync() { await Task.CompletedTask; return ConnectionString; } public static void RegisterConnection(string connectionString, OracleCredential credential) => new MyProjectSQLConnection(connectionString, credential).Register(); public static IDbCommandConfig GetSampleData = CreateFetchCommand(\"[dbo].[SampleData_Get]\", \"Get Sample Data\"); }"
  },
  "index.html": {
    "href": "index.html",
    "title": "DbFacade | DbFacade",
    "keywords": "DbFacade About Confused about how C# .NET projects set up calls to SQL databases? Need a well structured design pattern to organize calls to database stored procedures? Then DbFacade is the solution! DbFacade builds upon ADO.NET and simplifies structuring calls to SQL database stored procedures. Features Simplified parameter binding Built-In configurable parameter validation Easy data model binding Supports syncronous or asyncronous methods Supports .Net Framework and .Net Core projects Installation Install-Package DbFacade The latest version can also be downloaded directly from NuGet.org Here Connection Type Helpers For support with the following data base types please additionally install the following helpers Oracle Install-Package DbFacade.Oracle SQLite Install-Package DbFacade.SQLite Odbc Install-Package DbFacade.Odbc OleDb Install-Package DbFacade.OleDb Documentation For the latest README updates and documentation please visit Here Utilities DbFacade depends on the NuGet Package DbFacade.Utils. DbFacade.Utils is a set of Utilities useful for data parsing. Installation Install-Package DbFacade.Utils The latest version can also be downloaded directly from NuGet.org Here Documentation Read full Documentation Here"
  },
  "ReleaseNotes/index.html": {
    "href": "ReleaseNotes/index.html",
    "title": "Release Notes | DbFacade",
    "keywords": "Release Notes 1.13.0 Issues Resolved Resolved an issue with unit testing feature ruturning empty data sets when executing same call multiple times Additional Notes Bumped NuGet package dependancy versions Added dependancy for NuGet package DbFacade.Utils Add Unit testing feature to allow multiple data sets on single call Refactored DbConnection Configuration pattern 1.12.1 Issues Resolved Resolved an issue with unit testing feature not properly handling annonomous objects as data row values Additional Notes bumped NuGet package dependancy versions 1.12.0 Features Depreciated/Removed Depreciated .NET Core specific nuget package. Separate Non SQL Client connections into separate packages 1.11.0 Features Added Added Access to raw C# 'DataSet' object Added support for defining a credential object for DbConnection types that support it Features Depreciated/Removed Depreciated GetDbConnectionProvider and GetDbConnectionProviderAsync methods from TDbConnectionConfig classes. Replaced with CreateDbConnection method which in most use cases will already be built in. Issues Resolved Resolved issiue with output parameter values being set to null when actual values exist 1.10.0 Features Added Added Ability to define Db Schema command builder factories Added ability to fetch multiple data sets from one db call Added new methods to toggle running connections in Mock mode for unit testing Added Error Details for responses to make it easier to debug issues Features Depreciated/Removed Depreciated IDbCommandMethod Mock/MockAsync calls Depreciated DbCommandConfigFactory method (moved to TDbConnectionConfig class) Issues Resolved Resolved unhandled exceptions thrown in the DbDataModel Init() method. Resolved unhandled exceptions thrown when getting output value from response. 1.9.0 No Release Notes available at this time 1.8.0 No Release Notes available at this time 1.7.0 No Release Notes available at this time 1.6.0 No Release Notes available at this time 1.5.0 No Release Notes available at this time 1.4.0 No Release Notes available at this time 1.3.0 No Release Notes available at this time 1.2.0 No Release Notes available at this time 1.1.0 No Release Notes available at this time 1.0.0 No Release Notes available at this time"
  }
}